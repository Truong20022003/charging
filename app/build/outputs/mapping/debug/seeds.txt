okhttp3.internal.http2.Hpack
okhttp3.CertificatePinner$check$1
retrofit2.http.HEAD
com.google.android.material.appbar.MaterialToolbar
okhttp3.Credentials
okhttp3.internal.platform.Jdk8WithJettyBootPlatform
okhttp3.internal.platform.android.SocketAdapter
retrofit2.converter.moshi.package-info
okhttp3.internal.http2.Http2Stream$FramingSink
com.google.android.material.datepicker.MaterialTextInputPicker
okhttp3.ConnectionPool
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion
com.charging.animation.mobile.battery.api.CommonAds
okhttp3.internal.connection.RealConnection$Companion
okhttp3.internal.platform.android.AndroidLogHandler
retrofit2.BuiltInConverters$RequestBodyConverter
retrofit2.http.HeaderMap
com.charging.animation.mobile.battery.service.LowService
okhttp3.internal.connection.RealCall
retrofit2.Invocation
com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.google.android.gms.internal.common.zzl
okhttp3.internal.ws.WebSocketExtensions$Companion
okhttp3.internal.authenticator.JavaNetAuthenticator
okhttp3.internal.ws.WebSocketExtensions
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.CertificatePinner
okhttp3.internal.connection.Exchange
com.google.android.gms.internal.common.zzy
androidx.appcompat.view.menu.ListMenuItemView
okhttp3.internal.platform.BouncyCastlePlatform
okhttp3.internal.http2.Http2Reader$Companion
okhttp3.EventListener$Factory
com.google.android.gms.internal.common.zzj
retrofit2.ParameterHandler$Path
okhttp3.MultipartBody$Companion
okhttp3.internal.tls.BasicCertificateChainCleaner
androidx.transition.FragmentTransitionSupport
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion
retrofit2.http.Tag
com.google.android.gms.internal.common.zzc
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1
com.google.android.gms.internal.common.zzak
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1
com.charging.animation.mobile.battery.fragment.gallery.fragment.CustomFragment
okhttp3.internal.concurrent.TaskRunner$Backend
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1
androidx.appcompat.widget.ActionBarContainer
android.support.v4.os.IResultReceiver
retrofit2.converter.gson.GsonConverterFactory
androidx.appcompat.widget.AlertDialogLayout
okhttp3.internal.http2.Http2Writer
okhttp3.OkHttpClient$Builder$addInterceptor$2
retrofit2.HttpServiceMethod$SuspendForResponse
okhttp3.EventListener
okhttp3.internal.connection.RealConnectionPool
okhttp3.internal.http.StatusLine
okhttp3.internal.platform.android.BouncyCastleSocketAdapter
pl.droidsonroids.gif.GifInfoHandle
okhttp3.internal.cache.DiskLruCache$Snapshot
com.charging.animation.mobile.battery.activity.internet.NoInternetActivity
com.charging.animation.mobile.battery.api.Api
androidx.work.impl.WorkDatabase_Impl
kotlinx.coroutines.android.HandlerContext
okhttp3.internal.ws.MessageDeflater
okhttp3.internal.http2.Http2Connection
okhttp3.internal.cache.DiskLruCache$Entry
okhttp3.internal.http1.HeadersReader$Companion
androidx.viewpager2.widget.ViewPager2
okhttp3.internal.http2.Http2Stream$StreamTimeout
retrofit2.SkipCallbackExecutorImpl
okhttp3.internal.http.BridgeInterceptor
okhttp3.internal.connection.RouteException
okhttp3.Address
retrofit2.http.Query
retrofit2.converter.gson.package-info
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1
retrofit2.ParameterHandler$QueryMap
okhttp3.internal.platform.OpenJSSEPlatform
android.support.v4.app.INotificationSideChannel$_Parcel
com.google.android.material.internal.TouchObserverFrameLayout
androidx.constraintlayout.helper.widget.Flow
okhttp3.internal.connection.RealConnectionPool$Companion
retrofit2.DefaultCallAdapterFactory
com.google.android.gms.common.api.Status
okhttp3.Challenge
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink
okhttp3.MultipartBody$Part
androidx.profileinstaller.ProfileInstallerInitializer
okhttp3.internal.http.ExchangeCodec$Companion
okhttp3.internal.connection.RouteSelector
okhttp3.internal.concurrent.TaskRunner$Companion
okhttp3.internal.http2.Header$Companion
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1
retrofit2.Retrofit$1
com.google.android.gms.internal.common.zzb
com.charging.animation.mobile.battery.service.FullBatterService
okhttp3.internal.connection.RealCall$AsyncCall
com.google.android.material.appbar.AppBarLayout
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1
androidx.profileinstaller.ProfileInstallReceiver
com.charging.animation.mobile.battery.activity.success.SuccessActivity
android.support.v4.app.INotificationSideChannel
com.google.android.material.internal.CheckableImageButton
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.android.gms.internal.common.zzw
androidx.appcompat.widget.AppCompatButton
okhttp3.Dispatcher
okhttp3.internal.concurrent.TaskLoggerKt
okhttp3.Headers$Companion
okhttp3.Cache$Entry
com.google.android.gms.internal.common.zzz
androidx.appcompat.widget.AppCompatEditText
okhttp3.Request
okhttp3.MediaType
com.charging.animation.mobile.battery.api.AdsModel
okhttp3.ConnectionSpec$Companion
retrofit2.converter.gson.GsonResponseBodyConverter
okhttp3.internal.http2.ErrorCode
okhttp3.internal.http2.ConnectionShutdownException
okhttp3.internal.connection.RealConnection
com.charging.animation.mobile.battery.fragment.home.HomeFragment
okhttp3.Headers
android.support.v4.os.ResultReceiver$1
androidx.work.WorkerParameters
okhttp3.internal.cache2.Relay$Companion
com.google.android.material.timepicker.ClockHandView
retrofit2.KotlinExtensions$await$4$2
okhttp3.internal.http2.Http2Connection$Listener$Companion
retrofit2.http.Field
retrofit2.BuiltInConverters
okhttp3.internal.http2.Http2Stream$Companion
okhttp3.Protocol$Companion
okhttp3.internal.proxy.NullProxySelector
com.charging.animation.mobile.battery.activity.base.BaseFragment
androidx.emoji2.text.EmojiCompatInitializer
okhttp3.internal.http2.Http2Connection$Builder
com.google.android.material.button.MaterialButton
okhttp3.ResponseBody$BomAwareReader
com.charging.animation.mobile.battery.database.Database_Impl
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar
okhttp3.internal.http.ExchangeCodec
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger
retrofit2.CallAdapter
com.google.android.material.datepicker.MaterialDatePicker
retrofit2.RequestFactory
com.google.android.material.appbar.CollapsingToolbarLayout
retrofit2.Platform$Android
com.charging.animation.mobile.battery.activity.info.fragment.mobile.MobileFragment
com.google.android.material.theme.MaterialComponentsViewInflater
retrofit2.OptionalConverterFactory
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1
androidx.appcompat.widget.AppCompatTextView
okhttp3.internal.connection.ExchangeFinder
com.google.android.gms.internal.common.zzp
retrofit2.ParameterHandler$Tag
androidx.core.graphics.drawable.IconCompat
android.support.v4.os.IResultReceiver2$Stub
okhttp3.logging.LoggingEventListener
retrofit2.HttpServiceMethod
okhttp3.internal.cache.CacheStrategy$Factory
okhttp3.internal.http.HttpMethod
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback
kotlin.internal.jdk8.JDK8PlatformImplementations
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls
okhttp3.internal.cache.FaultHidingSink
okhttp3.CookieJar
retrofit2.http.Part
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1
androidx.appcompat.widget.ViewStubCompat
com.google.android.gms.internal.common.zzf
androidx.recyclerview.widget.GridLayoutManager
androidx.work.impl.background.systemalarm.RescheduleReceiver
okhttp3.internal.platform.OpenJSSEPlatform$Companion
okhttp3.internal.ws.RealWebSocket$Close
retrofit2.BuiltInConverters$UnitResponseBodyConverter
okhttp3.CipherSuite
okhttp3.internal.ws.WebSocketWriter
okhttp3.internal.connection.ConnectionSpecSelector
okhttp3.logging.HttpLoggingInterceptor$Level
com.google.android.gms.internal.common.zzab
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
okhttp3.WebSocket
androidx.appcompat.widget.FitWindowsFrameLayout
com.google.android.gms.internal.common.zzx
androidx.fragment.app.DialogFragment
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource
com.charging.animation.mobile.battery.activity.info.fragment.battery.BatteryFragment
android.support.v4.os.IResultReceiver2
okhttp3.internal.http2.Http2Reader$ContinuationSource
okhttp3.internal.platform.android.AndroidLogKt
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1
okhttp3.internal.ws.RealWebSocket
androidx.work.CoroutineWorker
okhttp3.internal.platform.android.AndroidSocketAdapter
kotlin.internal.jdk7.JDK7PlatformImplementations
okhttp3.internal.connection.ConnectInterceptor
retrofit2.HttpServiceMethod$CallAdapted
retrofit2.OptionalConverterFactory$OptionalConverter
androidx.appcompat.widget.SearchView$SearchAutoComplete
retrofit2.ParameterHandler$Field
androidx.core.app.RemoteActionCompatParcelizer
retrofit2.Converter$Factory
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1
com.charging.animation.mobile.battery.fragment.gallery.GalleryFragment
com.charging.animation.mobile.battery.fragment.alarm.AlarmFragment
androidx.work.impl.workers.DiagnosticsWorker
okhttp3.internal.ws.WebSocketReader
okhttp3.CacheControl$Builder
okhttp3.internal.cache.DiskLruCache$Companion
okhttp3.internal.cache.DiskLruCache$snapshots$1
okhttp3.internal.http2.Http2Stream$FramingSource
kotlinx.coroutines.android.HandlerDispatcher
okhttp3.internal.tls.CertificateChainCleaner$Companion
okhttp3.internal.connection.RealConnection$connectTls$1
androidx.appcompat.widget.Toolbar
okhttp3.internal.ws.MessageInflater
retrofit2.internal.EverythingIsNonNull
okhttp3.HttpUrl$Builder
com.google.android.gms.internal.common.zzh
com.google.android.material.search.SearchView$Behavior
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.google.android.gms.internal.common.zzae
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2
okhttp3.Cookie$Companion
okhttp3.internal.connection.RouteSelector$Selection
com.charging.animation.mobile.battery.fragment.setting.SettingFragment
android.support.v4.app.INotificationSideChannel$Stub$Proxy
okhttp3.CertificatePinner$Companion
retrofit2.http.Multipart
okhttp3.internal.Internal
pl.droidsonroids.gif.GifImageView
okhttp3.internal.connection.RealConnection$WhenMappings
retrofit2.http.Streaming
okhttp3.internal.connection.RouteSelector$resetNextProxy$1
com.google.android.material.datepicker.MaterialCalendarGridView
okhttp3.Connection
okhttp3.internal.cache.CacheInterceptor
okhttp3.internal.platform.AndroidPlatform$Companion
okhttp3.internal.tls.OkHostnameVerifier
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1
com.google.android.gms.internal.common.zzai
okhttp3.RequestBody$Companion$toRequestBody$1
okhttp3.internal.concurrent.TaskRunner
retrofit2.http.Headers
okhttp3.WebSocketListener
androidx.work.impl.workers.CombineContinuationsWorker
retrofit2.DefaultCallAdapterFactory$1
android.support.v4.os.IResultReceiver$Stub$Proxy
android.support.v4.os.ResultReceiver$MyResultReceiver
com.google.android.material.transformation.FabTransformationBehavior
okhttp3.internal.cache.DiskLruCache
okhttp3.MultipartReader$PartSource
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink
okhttp3.internal.io.FileSystem
com.google.android.gms.internal.common.zzah
com.google.android.gms.internal.common.zzv
retrofit2.ParameterHandler$Body
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource
okhttp3.Authenticator$Companion$AuthenticatorNone
okhttp3.CookieJar$Companion$NoCookies
okhttp3.internal.platform.android.DeferredSocketAdapter
retrofit2.KotlinExtensions$await$2$2
okhttp3.logging.Utf8Kt
okhttp3.internal.Util
retrofit2.ParameterHandler$RawPart
okhttp3.internal.platform.android.CloseGuard
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider
okhttp3.Headers$Builder
okhttp3.ResponseBody
okhttp3.HttpUrl$Builder$Companion
android.support.v4.os.ResultReceiver$MyRunnable
okhttp3.internal.connection.Exchange$ResponseBodySource
retrofit2.http.PUT
androidx.work.ListenableWorker
android.support.v4.app.INotificationSideChannel$Default
okhttp3.internal.concurrent.TaskQueue$execute$1
okhttp3.internal.platform.android.CloseGuard$Companion
com.google.android.gms.internal.common.zzg
okhttp3.internal.http2.ErrorCode$Companion
okhttp3.Cookie
okhttp3.internal.cache.CacheRequest
okhttp3.Handshake$peerCertificates$2
com.charging.animation.mobile.battery.activity.down.DownActivity
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody
okhttp3.Authenticator$Companion
androidx.annotation.Keep
okhttp3.internal.platform.ConscryptPlatform
retrofit2.Utils
androidx.appcompat.widget.SearchView
okhttp3.Handshake
androidx.work.impl.WorkDatabase
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1
okhttp3.Interceptor$Companion
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion
okhttp3.logging.LoggingEventListener$Factory
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.material.timepicker.ChipTextInputComboView
okhttp3.internal.connection.RealConnection$connectTls$2
retrofit2.RequestBuilder
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1
retrofit2.HttpException
retrofit2.converter.gson.GsonRequestBodyConverter
okhttp3.internal.SuppressSignatureCheck
okhttp3.CipherSuite$Companion
com.bumptech.glide.load.ImageHeaderParser$ImageType
okhttp3.internal.cache.DiskLruCache$Editor
com.google.android.gms.internal.common.zzaa
okhttp3.internal.http2.PushObserver
okhttp3.internal.connection.RouteSelector$Companion
androidx.work.impl.diagnostics.DiagnosticsReceiver
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion
androidx.work.impl.workers.ConstraintTrackingWorker
com.google.android.material.transformation.FabTransformationSheetBehavior
com.google.android.material.transformation.ExpandableBehavior
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel
okhttp3.internal.cache2.Relay$RelaySource
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
com.google.android.material.bottomsheet.BottomSheetBehavior
okhttp3.internal.http.HttpHeaders
okhttp3.internal.platform.Android10Platform
androidx.core.widget.NestedScrollView
com.google.android.material.textfield.TextInputLayout
androidx.appcompat.app.AlertController$RecycleListView
okhttp3.internal.http2.Http2Connection$ReaderRunnable
okhttp3.internal.http2.Settings$Companion
android.support.v4.app.INotificationSideChannel$Stub
com.charging.animation.mobile.battery.receiver.StartReceiver
android.support.v4.os.IResultReceiver$Default
okhttp3.internal.platform.Platform$Companion
okhttp3.internal.connection.RouteDatabase
okhttp3.EventListener$Companion
retrofit2.RequestFactory$Builder
retrofit2.package-info
okhttp3.internal.http2.Http2
retrofit2.Retrofit
retrofit2.http.POST
androidx.appcompat.widget.ActionBarContextView
okhttp3.MultipartReader$Companion
okhttp3.MultipartReader$Part
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
android.support.v4.os.IResultReceiver2$_Parcel
com.google.android.gms.common.util.DynamiteApi
okhttp3.internal.concurrent.TaskQueue
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
okhttp3.logging.HttpLoggingInterceptor
androidx.appcompat.widget.LinearLayoutCompat
retrofit2.http.FormUrlEncoded
com.google.android.material.internal.BaselineLayout
com.google.android.gms.internal.common.zzac
androidx.appcompat.view.menu.ExpandedMenuView
okhttp3.internal.connection.RealCall$timeout$1
retrofit2.http.QueryMap
okhttp3.internal.http.RealResponseBody
okhttp3.Handshake$Companion$handshake$1
com.google.android.gms.internal.common.zzt
kotlinx.coroutines.internal.StackTraceRecoveryKt
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1
com.google.android.gms.internal.common.zzad
okhttp3.internal.concurrent.TaskRunner$runnable$1
com.charging.animation.mobile.battery.fragment.gallery.fragment.DownFragment
retrofit2.converter.moshi.MoshiConverterFactory
retrofit2.Platform$Android$MainThreadExecutor
okhttp3.FormBody
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
retrofit2.http.FieldMap
okhttp3.internal.http1.Http1ExchangeCodec
okhttp3.internal.ws.RealWebSocket$WriterTask
retrofit2.KotlinExtensions
com.google.android.gms.internal.common.zzaf
android.support.v4.graphics.drawable.IconCompatParcelizer
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1
okhttp3.Cache$CacheResponseBody$1
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
okhttp3.internal.ws.RealWebSocket$Companion
retrofit2.ParameterHandler$FieldMap
okhttp3.internal.ws.WebSocketReader$FrameCallback
okhttp3.MultipartReader
retrofit2.Callback
com.mikhaellopez.circularprogressbar.CircularProgressBar
okhttp3.internal.platform.Android10Platform$Companion
com.google.android.play.core.common.PlayCoreDialogWrapperActivity
com.google.android.material.timepicker.TimePickerView
retrofit2.ParameterHandler$2
androidx.core.app.RemoteActionCompat
com.google.android.gms.internal.common.zzr
com.google.android.material.snackbar.SnackbarContentLayout
okhttp3.internal.http2.Huffman
retrofit2.ParameterHandler$RelativeUrl
androidx.core.app.CoreComponentFactory
okhttp3.Authenticator
retrofit2.Utils$GenericArrayTypeImpl
androidx.appcompat.widget.AppCompatImageView
okhttp3.internal.platform.android.AndroidCertificateChainCleaner
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1
okhttp3.Response$Builder
okhttp3.MultipartBody$Builder
com.charging.animation.mobile.battery.database.Database
okhttp3.internal.http2.Http2Reader
retrofit2.Utils$ParameterizedTypeImpl
okhttp3.internal.connection.Exchange$RequestBodySink
com.charging.animation.mobile.battery.custom.view.CustomTextView
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource
okhttp3.internal.http2.PushObserver$Companion
okhttp3.internal.http2.Http2Connection$Companion
okhttp3.internal.cache.DiskLruCache$cleanupTask$1
okhttp3.internal.platform.BouncyCastlePlatform$Companion
com.charging.animation.mobile.battery.api.RetrofitClient
okhttp3.internal.http2.Http2ExchangeCodec
retrofit2.OkHttpCall$1
okhttp3.internal.cache.CacheStrategy$Companion
retrofit2.ParameterHandler$Query
com.google.android.material.appbar.AppBarLayout$BaseBehavior
okhttp3.ResponseBody$Companion$asResponseBody$1
com.charging.animation.mobile.battery.activity.apply.ApplyAnimationActivity
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem
okhttp3.Interceptor
retrofit2.OkHttpCall$ExceptionCatchingResponseBody
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2
com.google.android.material.timepicker.ClockFaceView
okhttp3.Response
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.appcompat.widget.ContentFrameLayout
com.charging.animation.mobile.battery.BackupWorker2
okhttp3.internal.http.StatusLine$Companion
retrofit2.KotlinExtensions$awaitResponse$2$2
okhttp3.internal.connection.RealCall$CallReference
com.google.android.gms.common.annotation.KeepName
retrofit2.CompletableFutureCallAdapterFactory
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1
okhttp3.Interceptor$Companion$invoke$1
okhttp3.CookieJar$Companion
retrofit2.Retrofit$Builder
okhttp3.Cache$Companion
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
com.charging.animation.mobile.battery.api.ApiService
okhttp3.internal.ws.MessageDeflaterKt
okhttp3.internal.platform.Jdk9Platform
retrofit2.http.HTTP
androidx.work.impl.foreground.SystemForegroundService
okhttp3.Cache
okhttp3.internal.concurrent.TaskRunner$RealBackend
androidx.recyclerview.widget.LinearLayoutManager
retrofit2.ParameterHandler$HeaderMap
com.charging.animation.mobile.battery.receiver.LowReceiver
kotlinx.coroutines.android.AndroidExceptionPreHandler
okhttp3.Cookie$Builder
okhttp3.Cache$RealCacheRequest
androidx.startup.InitializationProvider
com.google.android.gms.internal.common.zzu
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1
okhttp3.internal.http1.HeadersReader
android.support.v4.os.IResultReceiver2$Default
okhttp3.Request$Builder
okhttp3.internal.http.DatesKt
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.google.android.material.carousel.CarouselLayoutManager
okhttp3.Protocol
okhttp3.internal.platform.android.Android10SocketAdapter$Companion
androidx.work.impl.background.systemalarm.SystemAlarmService
okhttp3.internal.platform.AndroidPlatform
androidx.work.impl.background.systemjob.SystemJobService
okhttp3.logging.HttpLoggingInterceptor$Logger
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.work.Worker
retrofit2.ServiceMethod
okhttp3.Call$Factory
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter
okhttp3.RequestBody$Companion
retrofit2.ParameterHandler$Headers
com.google.android.material.internal.ClippableRoundedCornerLayout
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
android.support.v4.os.IResultReceiver2$Stub$Proxy
okhttp3.internal.platform.android.StandardAndroidSocketAdapter
com.charging.animation.mobile.battery.activity.info.InfoActivity
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1
okhttp3.internal.http2.Settings
okhttp3.internal.http2.Http2Reader$Handler
okhttp3.FormBody$Companion
com.google.android.gms.internal.tasks.zza
com.google.android.gms.internal.common.zzd
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings
android.support.v4.os.IResultReceiver$Stub
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource
androidx.viewpager.widget.ViewPager
okhttp3.Interceptor$Chain
com.google.android.material.chip.Chip
com.google.android.material.transformation.FabTransformationScrimBehavior
android.support.v4.os.ResultReceiver
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.appcompat.widget.FitWindowsLinearLayout
okhttp3.internal.http.RetryAndFollowUpInterceptor
retrofit2.converter.moshi.MoshiRequestBodyConverter
okhttp3.Dns
com.charging.animation.mobile.battery.receiver.HighReceiver
retrofit2.http.OPTIONS
androidx.lifecycle.ProcessLifecycleInitializer
com.charging.animation.mobile.battery.activity.main.MainActivity
android.support.v4.os.IResultReceiver$_Parcel
okhttp3.Handshake$Companion
okhttp3.ConnectionSpec
okhttp3.internal.http1.Http1ExchangeCodec$Companion
retrofit2.http.Url
okhttp3.internal.platform.ConscryptPlatform$Companion
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1
okhttp3.RequestBody
com.charging.animation.mobile.battery.activity.language.LanguageStartActivity
okhttp3.FormBody$Builder
retrofit2.Call
retrofit2.http.Path
androidx.constraintlayout.widget.Guideline
okhttp3.internal.http2.StreamResetException
okhttp3.internal.tls.TrustRootIndex
retrofit2.http.Header
okhttp3.internal.cache.CacheStrategy
okhttp3.OkHttpClient
com.google.android.gms.internal.common.zzi
okhttp3.RequestBody$Companion$toRequestBody$2
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex
retrofit2.ParameterHandler$PartMap
androidx.room.MultiInstanceInvalidationService
androidx.versionedparcelable.ParcelImpl
okhttp3.Handshake$Companion$get$1
okhttp3.EventListener$Companion$NONE$1
eightbitlab.com.blurview.BlurView
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1
okhttp3.internal.ws.RealWebSocket$Streams
okhttp3.Call
com.google.android.material.textfield.TextInputEditText
com.google.android.gms.internal.common.zzk
com.charging.animation.mobile.battery.service.HighService
retrofit2.ParameterHandler$QueryName
okhttp3.Cache$Entry$Companion
okhttp3.HttpUrl$Companion
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1
okhttp3.CacheControl$Companion
com.google.android.gms.internal.common.zza
com.charging.animation.mobile.battery.receiver.FullReceiver
kotlinx.coroutines.android.HandlerDispatcherKt
retrofit2.HttpServiceMethod$SuspendForBody
okhttp3.Callback
okhttp3.Cache$CacheResponseBody
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1
okhttp3.MultipartBody
androidx.appcompat.widget.ActionMenuView
retrofit2.KotlinExtensions$suspendAndThrow$1
okhttp3.internal.cache.CacheInterceptor$Companion
okhttp3.Dns$Companion
retrofit2.converter.moshi.MoshiResponseBodyConverter
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1
okhttp3.OkHttpClient$Builder
retrofit2.BuiltInConverters$BufferingResponseBodyConverter
androidx.appcompat.view.menu.ActionMenuItemView
com.charging.animation.mobile.battery.activity.permission.PermissionActivity
com.charging.animation.mobile.battery.fragment.setting.SettingAndAlarmFragment
com.bumptech.glide.GeneratedAppGlideModule
com.google.android.material.button.MaterialButtonToggleGroup
okhttp3.RequestBody$Companion$asRequestBody$1
retrofit2.Platform
okhttp3.internal.http.RequestLine
androidx.appcompat.widget.DialogTitle
okhttp3.internal.ws.RealWebSocket$connect$1
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion
okhttp3.internal.http2.Hpack$Writer
com.charging.animation.mobile.battery.activity.splash.SplashActivity
pl.droidsonroids.gif.GifIOException
retrofit2.CallAdapter$Factory
okhttp3.internal.platform.Platform
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion
okhttp3.Dns$Companion$DnsSystem
okhttp3.internal.http.RealInterceptorChain
com.charging.animation.mobile.battery.activity.tutorial.TutorialActivity
androidx.fragment.app.FragmentContainerView
retrofit2.Response
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
retrofit2.ParameterHandler
com.google.android.material.internal.NavigationMenuItemView
retrofit2.ParameterHandler$Part
com.google.android.material.datepicker.MaterialCalendar
okhttp3.HttpUrl
androidx.constraintlayout.widget.ConstraintLayout
okhttp3.internal.ws.WebSocketProtocol
com.google.android.gms.internal.common.zzag
okhttp3.MediaType$Companion
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1
retrofit2.http.GET
com.google.android.gms.internal.common.zzo
com.google.android.material.sidesheet.SideSheetBehavior
com.google.android.material.internal.NavigationMenuView
okhttp3.ConnectionSpec$Builder
okhttp3.internal.http2.Http2Writer$Companion
kotlinx.coroutines.android.AndroidDispatcherFactory
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter
okhttp3.internal.http2.Huffman$Node
retrofit2.Converter
okhttp3.internal.http2.Http2Connection$Listener
retrofit2.SkipCallbackExecutor
com.charging.animation.mobile.battery.service.BatteryService
androidx.recyclerview.widget.RecyclerView
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture
com.charging.animation.mobile.battery.activity.ring.RingtoneActivity
androidx.cardview.widget.CardView
retrofit2.OkHttpCall
com.charging.animation.mobile.battery.service.LiveWallpaperService
okhttp3.internal.cache2.Relay
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall
retrofit2.Utils$WildcardTypeImpl
com.charging.animation.mobile.battery.activity.policy.PolicyActivity
com.google.android.material.transformation.ExpandableTransformationBehavior
okhttp3.internal.tls.BasicTrustRootIndex
okhttp3.ResponseBody$Companion
retrofit2.BuiltInConverters$StreamingResponseBodyConverter
retrofit2.http.PartMap
com.charging.animation.mobile.battery.BackupWorker
com.google.android.gms.internal.common.zzq
com.charging.animation.mobile.battery.App
okhttp3.OkHttpClient$Companion
com.charging.animation.mobile.battery.receiver.AnimationReceiver
com.google.android.gms.internal.common.zzm
com.google.android.gms.internal.common.zzaj
com.google.android.material.appbar.AppBarLayout$Behavior
okhttp3.internal.platform.android.Android10SocketAdapter
retrofit2.BuiltInConverters$VoidResponseBodyConverter
androidx.work.ArrayCreatingInputMerger
com.charging.animation.mobile.battery.activity.language.LanguageSettingActivity
retrofit2.http.PATCH
com.charging.animation.mobile.battery.api.Results
com.google.android.gms.internal.common.zzn
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback
okhttp3.internal.platform.android.AndroidLog
com.google.android.material.behavior.SwipeDismissBehavior
okhttp3.MultipartBody$Part$Companion
androidx.versionedparcelable.CustomVersionedParcelable
okhttp3.internal.http2.Header
okhttp3.CertificatePinner$Pin
com.google.android.gms.internal.common.zze
okhttp3.internal.http2.Http2Stream
com.charging.animation.mobile.battery.activity.animation.AnimationActivity
com.google.android.gms.common.api.internal.LifecycleCallback
okhttp3.internal.Util$asFactory$1
androidx.appcompat.widget.ButtonBarLayout
retrofit2.ParameterHandler$Header
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1
androidx.core.graphics.drawable.IconCompatParcelizer
okhttp3.internal.io.FileSystem$Companion
retrofit2.ParameterHandler$1
retrofit2.BuiltInConverters$ToStringConverter
okhttp3.OkHttp
okhttp3.Cache$RealCacheRequest$1
okhttp3.internal.concurrent.TaskQueue$schedule$2
okhttp3.internal.Util$threadFactory$1
okhttp3.Cache$urls$1
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion
okhttp3.internal.platform.android.ConscryptSocketAdapter
com.google.android.gms.common.internal.ReflectedParcelable
okhttp3.internal.concurrent.Task
okhttp3.internal.http2.Http2ExchangeCodec$Companion
androidx.appcompat.widget.ActionBarOverlayLayout
okhttp3.internal.publicsuffix.PublicSuffixDatabase
okhttp3.internal.cache2.FileOperator
okhttp3.CacheControl
okhttp3.CertificatePinner$Builder
retrofit2.OkHttpCall$NoContentResponseBody
retrofit2.http.Body
okhttp3.Route
androidx.work.OverwritingInputMerger
androidx.work.WorkManagerInitializer
okhttp3.TlsVersion
retrofit2.http.DELETE
okhttp3.WebSocket$Factory
okhttp3.internal.http2.Hpack$Reader
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
okhttp3.internal.tls.CertificateChainCleaner
com.google.android.gms.internal.common.zzs
okhttp3.TlsVersion$Companion
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion
okhttp3.internal.ws.MessageInflaterKt
okhttp3.internal.http.CallServerInterceptor
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1
okhttp3.internal.HostnamesKt
okhttp3.internal.platform.Jdk9Platform$Companion
retrofit2.http.QueryName
com.google.android.gms.internal.common.zzj: int zzb
retrofit2.ParameterHandler$Headers: int p
okhttp3.Cookie: boolean persistent
kotlin.jvm.internal.CallableReference: java.lang.String signature
okhttp3.Protocol: okhttp3.Protocol HTTP_2
okhttp3.OkHttpClient$Builder: int callTimeout
okhttp3.internal.ws.RealWebSocket: java.util.Random random
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
okhttp3.internal.http.DatesKt: okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 STANDARD_DATE_FORMAT
okhttp3.CacheControl$Builder: boolean immutable
okhttp3.Response: okhttp3.Response priorResponse
okhttp3.internal.http2.Http2Reader: boolean client
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
kotlin.jvm.internal.Lambda: int arity
retrofit2.RequestFactory$Builder: boolean hasBody
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Settings $settings$inlined
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call delegate
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
okhttp3.internal.connection.Exchange$RequestBodySink: long bytesReceived
retrofit2.HttpException: retrofit2.Response response
okhttp3.internal.connection.RealCall: boolean expectMoreExchanges
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform$Companion Companion
retrofit2.HttpServiceMethod: retrofit2.RequestFactory requestFactory
retrofit2.RequestBuilder: java.lang.String PATH_SEGMENT_ALWAYS_ENCODE_SET
okhttp3.internal.cache.DiskLruCache: kotlin.text.Regex LEGAL_KEY_PATTERN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
retrofit2.RequestBuilder: okhttp3.MediaType contentType
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
okhttp3.internal.ws.WebSocketExtensions: boolean serverNoContextTakeover
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
okhttp3.CacheControl: boolean isPublic
okhttp3.logging.HttpLoggingInterceptor: java.util.Set headersToRedact
retrofit2.ParameterHandler$RawPart: retrofit2.ParameterHandler$RawPart INSTANCE
okhttp3.Cache: int VERSION
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient client
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketExtensions $extensions$inlined
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.internal.connection.RouteSelector this$0
okhttp3.internal.http2.Http2Stream: long readBytesAcknowledged
retrofit2.RequestFactory$Builder: retrofit2.Retrofit retrofit
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $cont$inlined
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setAlpnProtocols
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.google.android.gms.internal.common.zzaf: com.google.android.gms.internal.common.zzag zzc
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connectionToCancel
okhttp3.internal.platform.Platform: int INFO
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_RESPONSE_BODY
retrofit2.BuiltInConverters$VoidResponseBodyConverter: retrofit2.BuiltInConverters$VoidResponseBodyConverter INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.google.android.gms.internal.common.zzai: int zzc
com.charging.animation.mobile.battery.api.CommonAds: boolean banner_all
okhttp3.internal.cache2.Relay: okio.Buffer buffer
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion Companion
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$Companion Companion
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $newPeerSettings$inlined
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Http2Writer$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
okhttp3.CacheControl: boolean noStore
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay$Companion Companion
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: java.io.IOException thrownException
okhttp3.Address: java.util.List protocols
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: java.lang.String $name
okhttp3.ResponseBody$BomAwareReader: boolean closed
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
okhttp3.internal.Util: okio.Options UNICODE_BOMS
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[][] parameterAnnotationsArray
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
okhttp3.Cache$RealCacheRequest: okhttp3.Cache this$0
okhttp3.Cache$RealCacheRequest$1: okhttp3.Cache$RealCacheRequest this$0
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
retrofit2.Response: java.lang.Object body
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
okhttp3.OkHttp: okhttp3.OkHttp INSTANCE
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long $unacknowledgedBytesRead$inlined
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
retrofit2.OkHttpCall: retrofit2.RequestFactory requestFactory
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
okhttp3.internal.connection.RealConnectionPool: long keepAliveDurationNs
okhttp3.CacheControl$Builder: int maxStaleSeconds
retrofit2.ParameterHandler$PartMap: retrofit2.Converter valueConverter
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READ_RESPONSE_HEADERS
okhttp3.internal.connection.Exchange$ResponseBodySource: okhttp3.internal.connection.Exchange this$0
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level NONE
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
okhttp3.internal.connection.Exchange: boolean isDuplex
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
okhttp3.Cookie: java.lang.String domain
retrofit2.ParameterHandler$Query: boolean encoded
com.google.android.gms.internal.common.zzaa: boolean zzc
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
okhttp3.internal.connection.ExchangeFinder: int connectionShutdownCount
okhttp3.internal.connection.ExchangeFinder: int refusedStreamCount
okhttp3.internal.connection.RealConnection: int refusedStreamCount
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
android.support.v4.os.ResultReceiver: android.os.Handler mHandler
okhttp3.internal.ws.WebSocketProtocol: okhttp3.internal.ws.WebSocketProtocol INSTANCE
retrofit2.HttpServiceMethod$CallAdapted: retrofit2.CallAdapter callAdapter
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.OkHttpClient: java.util.List protocols
okio.Timeout: okio.Timeout$Companion Companion
okhttp3.MultipartBody: okhttp3.MediaType MIXED
retrofit2.converter.moshi.MoshiConverterFactory: boolean failOnUnknown
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
retrofit2.ParameterHandler$Field: java.lang.String name
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
android.support.v4.os.IResultReceiver: java.lang.String DESCRIPTOR
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource delegateSource
okhttp3.Interceptor$Companion$invoke$1: kotlin.jvm.functions.Function1 $block
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers trailers
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
retrofit2.DefaultCallAdapterFactory$1: retrofit2.DefaultCallAdapterFactory this$0
okhttp3.internal.http2.Http2Connection: long readBytesTotal
com.charging.animation.mobile.battery.api.RetrofitClient: com.charging.animation.mobile.battery.api.Api api
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String ads_id
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.Response: okhttp3.CacheControl lazyCacheControl
okhttp3.internal.concurrent.TaskRunner: java.lang.Runnable runnable
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
okhttp3.internal.concurrent.TaskQueue: java.util.List futureTasks
okhttp3.internal.connection.RealCall: okhttp3.EventListener eventListener
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $streamId$inlined
retrofit2.ParameterHandler$FieldMap: int p
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient client
okhttp3.TlsVersion: java.lang.String javaName
okhttp3.Response$Builder: okhttp3.Response cacheResponse
kotlinx.coroutines.android.HandlerContext: java.lang.String name
okhttp3.OkHttpClient: java.util.List interceptors
retrofit2.ParameterHandler$Field: boolean encoded
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector$Selection routeSelection
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
okhttp3.internal.concurrent.TaskRunner: boolean coordinatorWaiting
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter delegate
com.google.android.gms.internal.common.zzw: com.google.android.gms.internal.common.zzo zzc
okhttp3.internal.http2.Settings: int COUNT
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions extensions
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform$Companion Companion
okhttp3.internal.ws.MessageDeflater: okio.DeflaterSink deflaterSink
okhttp3.MultipartReader: okio.Options afterBoundaryOptions
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_WEBP
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $inFinished$inlined
okhttp3.internal.Util: okhttp3.Headers EMPTY_HEADERS
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform$Companion Companion
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long $pingIntervalNanos$inlined
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
okhttp3.internal.platform.ConscryptPlatform: boolean isSupported
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
okhttp3.Route: java.net.InetSocketAddress socketAddress
retrofit2.ParameterHandler$PartMap: int p
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
okhttp3.internal.ws.WebSocketWriter: boolean isClient
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.android.HandlerContext this$0
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
okhttp3.Response: long receivedResponseAtMillis
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
okhttp3.Cookie$Builder: boolean secure
okhttp3.Cookie$Builder: boolean hostOnly
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
okhttp3.internal.http2.Http2Connection: boolean isShutdown
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.charging.animation.mobile.battery.api.CommonAds: boolean inter_splash
okhttp3.HttpUrl: boolean isHttps
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger callsPerHost
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Companion Companion
okhttp3.Cache$Entry: java.lang.String url
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
retrofit2.RequestFactory$Builder: boolean isKotlinSuspendFunction
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: int $index$inlined
okhttp3.internal.connection.RealConnection: okhttp3.Route route
retrofit2.RequestFactory: boolean isKotlinSuspendFunction
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
okhttp3.Response: java.lang.String message
retrofit2.RequestBuilder: okhttp3.MultipartBody$Builder multipartBuilder
okhttp3.Cache: int writeAbortCount
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.http.ExchangeCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $cancelable
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
okhttp3.CacheControl$Builder: boolean noStore
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.concurrent.TaskRunner$runnable$1: okhttp3.internal.concurrent.TaskRunner this$0
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okio.Source $fileSource
okhttp3.CacheControl: int maxAgeSeconds
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$Companion Companion
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $clearPrevious$inlined
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
retrofit2.ParameterHandler$Path: java.lang.reflect.Method method
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.charging.animation.mobile.battery.api.CommonAds: long interval_between_interstitial
okhttp3.Response: okhttp3.Headers headers
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
okio.AsyncTimeout: okio.AsyncTimeout head
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
okhttp3.internal.http2.Hpack$Reader: int headerCount
okhttp3.internal.platform.AndroidPlatform: boolean isSupported
retrofit2.RequestFactory$Builder: java.lang.String httpMethod
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_URL_REGEX
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
okhttp3.internal.http2.Http2: int FLAG_PRIORITY
okhttp3.Cookie: okhttp3.Cookie$Companion Companion
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource currentPart
okhttp3.CacheControl: boolean noCache
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.internal.http.RealResponseBody: long contentLength
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
okhttp3.Protocol: okhttp3.Protocol SPDY_3
okhttp3.internal.platform.android.AndroidLog: okhttp3.internal.platform.android.AndroidLog INSTANCE
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource $this_asResponseBody
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
okhttp3.HttpUrl$Builder: java.lang.String scheme
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method warnIfOpenMethod
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 onException
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
okhttp3.ResponseBody: java.io.Reader reader
okhttp3.internal.proxy.NullProxySelector: okhttp3.internal.proxy.NullProxySelector INSTANCE
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
retrofit2.converter.gson.GsonConverterFactory: com.google.gson.Gson gson
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
okhttp3.HttpUrl$Builder: java.lang.String host
okhttp3.internal.connection.RealConnection: int allocationLimit
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
com.charging.animation.mobile.battery.api.AdsModel: int id
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
okio.Timeout: okio.Timeout NONE
okhttp3.internal.http2.Http2: int FLAG_NONE
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
okhttp3.Dispatcher: java.lang.Runnable idleCallback
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
retrofit2.RequestBuilder: char[] HEX_DIGITS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List PREVAILING_RULE
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: int $streamId$inlined
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String selected
okhttp3.internal.cache2.Relay: int sourceCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
okhttp3.Protocol: okhttp3.Protocol QUIC
okhttp3.Response: okhttp3.Handshake handshake
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType $contentType
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.android.gms.internal.common.zzh: com.google.android.gms.internal.common.zze zzb
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task activeTask
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
okhttp3.Cache$Entry: int code
okhttp3.MultipartBody: okhttp3.MediaType type
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List dirtyFiles
retrofit2.OkHttpCall$1: retrofit2.Callback val$callback
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.internal.common.zzl: char zza
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
retrofit2.HttpException: int code
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Connection http2Connection
okhttp3.Cache: int networkCount
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
okhttp3.Cookie: java.lang.String value
retrofit2.RequestBuilder: okhttp3.Request$Builder requestBuilder
okhttp3.internal.connection.RealCall: boolean timeoutEarlyExit
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter this$0
retrofit2.BuiltInConverters: boolean checkForKotlinUnit
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector routeSelector
okhttp3.Credentials: okhttp3.Credentials INSTANCE
okhttp3.internal.http2.Http2Stream: int id
okhttp3.OkHttpClient: int pingIntervalMillis
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: java.lang.String $packageName
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.cache.DiskLruCache: int valueCount
okhttp3.internal.connection.RealCall: java.lang.Object callStackTrace
retrofit2.Retrofit$Builder: java.util.List converterFactories
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend backend
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$LongRef $delta$inlined
okhttp3.internal.http2.Http2Connection: long writeBytesMaximum
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion Companion
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.net.Proxy $proxy
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
okhttp3.MultipartBody: byte[] DASHDASH
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class sslSocketFactoryClass
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_CLOSED
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
retrofit2.Retrofit: java.util.List callAdapterFactories
okhttp3.internal.concurrent.Task: long nextExecuteNanoTime
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type componentType
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long $pingIntervalNanos$inlined
retrofit2.RequestFactory: okhttp3.HttpUrl baseUrl
okhttp3.Cache: int ENTRY_COUNT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder mRemote
okhttp3.Request$Builder: okhttp3.HttpUrl url
okhttp3.EventListener: okhttp3.EventListener$Companion Companion
okhttp3.MultipartBody: byte[] COLONSPACE
okhttp3.internal.platform.OpenJSSEPlatform: java.security.Provider provider
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TE
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
retrofit2.OkHttpCall: java.lang.Object[] args
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.ws.WebSocketReader: boolean closed
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
okhttp3.Request: java.util.Map tags
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.internal.ws.RealWebSocket: long minimumDeflateSize
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
okhttp3.internal.Util: java.util.TimeZone UTC
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
okhttp3.Authenticator: okhttp3.Authenticator$Companion Companion
okhttp3.OkHttpClient: boolean followSslRedirects
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
retrofit2.Response: okhttp3.Response rawResponse
okhttp3.internal.connection.RealCall: boolean canceled
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
retrofit2.RequestBuilder: okhttp3.RequestBody body
com.charging.animation.mobile.battery.api.CommonAds: boolean inter_info
okhttp3.MultipartBody: okhttp3.MediaType contentType
com.google.android.gms.internal.common.zza: android.os.IBinder zza
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
okhttp3.OkHttpClient$Builder: int readTimeout
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: kotlin.coroutines.Continuation $continuation
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method putMethod
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
retrofit2.ParameterHandler$Query: java.lang.String name
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
retrofit2.RequestBuilder: okhttp3.Headers$Builder headersBuilder
okhttp3.Address: java.net.ProxySelector proxySelector
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.http.ExchangeCodec$Companion Companion
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
retrofit2.HttpServiceMethod: retrofit2.Converter responseConverter
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
okhttp3.logging.HttpLoggingInterceptor$Logger: okhttp3.logging.HttpLoggingInterceptor$Logger$Companion Companion
okhttp3.HttpUrl: java.lang.String url
okhttp3.Response$Builder: okhttp3.Response networkResponse
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class clientProviderClass
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method getMethod
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $continuation$inlined
okhttp3.Response: okhttp3.ResponseBody body
okhttp3.internal.http2.Header: int hpackSize
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory socketAdapterFactory
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem$Companion Companion
okhttp3.internal.http2.Http2: int TYPE_GOAWAY
okhttp3.ConnectionSpec: java.lang.String[] tlsVersionsAsString
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.internal.ws.WebSocketExtensions: boolean unknownValues
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String app_id
retrofit2.ParameterHandler$HeaderMap: retrofit2.Converter valueConverter
okhttp3.internal.http2.Http2Connection: boolean client
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http2.Http2: int FLAG_ACK
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
okhttp3.internal.platform.BouncyCastlePlatform: boolean isSupported
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
okhttp3.internal.Util: java.lang.String okHttpName
retrofit2.ParameterHandler$Body: java.lang.reflect.Method method
okhttp3.internal.ws.MessageDeflater: boolean noContextTakeover
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_REQUEST_BODY
kotlinx.coroutines.android.HandlerDispatcherKt: long MAX_DELAY
okhttp3.OkHttpClient$Builder: int connectTimeout
okhttp3.internal.connection.RealCall: boolean forWebSocket
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
okhttp3.HttpUrl: java.lang.String fragment
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.concurrent.TaskQueue cleanupQueue
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.Cache$RealCacheRequest: okio.Sink body
com.google.android.gms.internal.common.zzaa: java.lang.Object[] zza
retrofit2.ParameterHandler$Body: retrofit2.Converter converter
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
okhttp3.CacheControl$Builder: int maxAgeSeconds
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
okhttp3.MultipartReader: boolean closed
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $inFinished$inlined
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
okhttp3.Response: long sentRequestAtMillis
okhttp3.internal.ws.WebSocketWriter: boolean noContextTakeover
retrofit2.RequestFactory$Builder: okhttp3.MediaType contentType
okhttp3.MultipartReader: int partCount
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall this$0
okhttp3.OkHttpClient: long minWebSocketMessageToCompress
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
retrofit2.Retrofit$Builder: java.util.concurrent.Executor callbackExecutor
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header$Companion Companion
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
okhttp3.OkHttpClient$Builder: int writeTimeout
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.connection.RealConnection: int successCount
retrofit2.ParameterHandler$Header: java.lang.String name
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
okhttp3.Request: okhttp3.CacheControl lazyCacheControl
okhttp3.Cache$Entry: okhttp3.Cache$Entry$Companion Companion
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
com.charging.animation.mobile.battery.api.CommonAds: boolean appopen_resume
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis
okhttp3.Cookie$Builder: java.lang.String domain
okhttp3.Cache: okhttp3.Cache$Companion Companion
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
okhttp3.internal.http2.Http2: int TYPE_PRIORITY
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.logging.LoggingEventListener: long startNs
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger logger
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean closed
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
okhttp3.internal.http2.Http2Stream: java.util.ArrayDeque headersQueue
retrofit2.Retrofit$1: retrofit2.Retrofit this$0
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
okhttp3.MediaType: java.lang.String mediaType
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
okhttp3.MultipartBody: okhttp3.MediaType FORM
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
retrofit2.OkHttpCall: java.lang.Throwable creationFailure
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
retrofit2.ParameterHandler$Path: java.lang.String name
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
retrofit2.ParameterHandler$Part: java.lang.reflect.Method method
okhttp3.MultipartBody: okio.ByteString boundaryByteString
com.charging.animation.mobile.battery.api.CommonAds: boolean open_splash
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Callback responseCallback
okhttp3.internal.http2.Http2Connection$Builder: boolean client
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection connection
okhttp3.Address: javax.net.SocketFactory socketFactory
retrofit2.RequestFactory$Builder: java.lang.String relativeUrl
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: boolean closed
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.RequestBody delegate
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
okhttp3.Route: java.net.Proxy proxy
okhttp3.OkHttpClient: int connectTimeoutMillis
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder finder
okhttp3.logging.HttpLoggingInterceptor$Logger: okhttp3.logging.HttpLoggingInterceptor$Logger DEFAULT
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $clearPrevious$inlined
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: okhttp3.internal.cache.DiskLruCache$Editor this$0
okhttp3.internal.cache2.Relay: okio.Source upstream
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[] methodAnnotations
okhttp3.internal.http2.Header: okio.ByteString name
retrofit2.ParameterHandler$PartMap: java.lang.String transferEncoding
okhttp3.Cache$Entry: long receivedResponseMillis
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
okhttp3.internal.ws.MessageDeflater: java.util.zip.Deflater deflater
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.TypeAdapter adapter
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
okhttp3.HttpUrl: java.lang.String username
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.charging.animation.mobile.battery.api.CommonAds: java.lang.String rate_aoa_inter_splash
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
kotlin.jvm.internal.CallableReference: java.lang.String name
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route nextRouteToTry
okhttp3.internal.ws.WebSocketReader: boolean noContextTakeover
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
retrofit2.Retrofit: boolean validateEagerly
okhttp3.Address: java.util.List connectionSpecs
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.util.concurrent.Executor callbackExecutor
android.support.v4.os.ResultReceiver$MyRunnable: android.os.Bundle mResultData
okhttp3.CacheControl: int minFreshSeconds
retrofit2.OptionalConverterFactory$OptionalConverter: retrofit2.Converter delegate
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnectionPool connectionPool
retrofit2.ParameterHandler$Headers: java.lang.reflect.Method method
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
com.charging.animation.mobile.battery.api.CommonAds: boolean Collapse_banner
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.MessageInflater: boolean noContextTakeover
okhttp3.CookieJar$Companion: okhttp3.CookieJar$Companion $$INSTANCE
okhttp3.internal.ws.WebSocketExtensions: java.lang.String HEADER_WEB_SOCKET_EXTENSION
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
okhttp3.internal.http.RequestLine: okhttp3.internal.http.RequestLine INSTANCE
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType
retrofit2.Platform: retrofit2.Platform PLATFORM
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
okhttp3.Cookie$Builder: boolean persistent
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.google.android.gms.internal.common.zzv: com.google.android.gms.internal.common.zzx zzb
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSource $source
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.util.List $headerBlock$inlined
okhttp3.MultipartReader: boolean noMoreParts
okhttp3.internal.concurrent.TaskQueue$execute$1: java.lang.String $name
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: int $streamId$inlined
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
okhttp3.CertificatePinner: okhttp3.CertificatePinner$Companion Companion
okhttp3.MultipartReader$Part: okhttp3.Headers headers
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
okhttp3.internal.ws.RealWebSocket$WriterTask: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener$Companion Companion
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.ws.MessageInflater: java.util.zip.Inflater inflater
okhttp3.internal.connection.RealConnection: long idleAtNs
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
okhttp3.Response$Builder: java.lang.String message
okhttp3.CipherSuite: java.lang.String javaName
okhttp3.internal.connection.RealCall: boolean requestBodyOpen
okhttp3.Cache$CacheResponseBody$1: okio.Source $source
okhttp3.internal.http2.Http2Connection: java.lang.String connectionName
com.charging.animation.mobile.battery.api.CommonAds: boolean native_ringtone
retrofit2.Platform$Android$MainThreadExecutor: android.os.Handler handler
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealConnection: java.net.Socket socket
okhttp3.internal.connection.Exchange: okhttp3.internal.http.ExchangeCodec codec
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
okhttp3.internal.concurrent.TaskQueue$schedule$2: kotlin.jvm.functions.Function0 $block
android.support.v4.os.ResultReceiver: boolean mLocal
com.charging.animation.mobile.battery.api.Results: java.lang.String folder
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
okio.AsyncTimeout: okio.AsyncTimeout next
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
okhttp3.internal.cache.DiskLruCache: boolean closed
retrofit2.RequestFactory: boolean isMultipart
okhttp3.Response$Builder: okhttp3.Response priorResponse
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine$Companion Companion
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
okhttp3.internal.ws.RealWebSocket: long DEFAULT_MINIMUM_DEFLATE_SIZE
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.CertificatePinner$Pin: okio.ByteString hash
okhttp3.internal.http.DatesKt: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
okhttp3.internal.connection.Exchange: okhttp3.EventListener eventListener
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TRANSFER_ENCODING
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: kotlinx.coroutines.android.HandlerContext this$0
kotlinx.coroutines.CancelledContinuation: int _resumed
retrofit2.KotlinExtensions$await$2$2: kotlinx.coroutines.CancellableContinuation $continuation
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Settings $settings$inlined
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter$Factory INSTANCE
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
retrofit2.RequestFactory: java.lang.reflect.Method method
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection connection
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_8_SHA256
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider provider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
okhttp3.RequestBody$Companion$toRequestBody$2: byte[] $this_toRequestBody
com.google.android.gms.internal.common.zzac: java.lang.Object[] zza
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $readerToClose$inlined
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
okhttp3.internal.http2.ErrorCode: int httpCode
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $receivedCloseReason$inlined
okhttp3.internal.platform.OpenJSSEPlatform: okhttp3.internal.platform.OpenJSSEPlatform$Companion Companion
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object L$0
okhttp3.internal.http.RealInterceptorChain: int index
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.charging.animation.mobile.battery.api.CommonAds: boolean native_language
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
okhttp3.CacheControl: int sMaxAgeSeconds
okhttp3.internal.http2.Huffman: int[] CODES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.cache.DiskLruCache: boolean civilizedFileSystem
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
okhttp3.internal.concurrent.TaskQueue$schedule$2: java.lang.String $name
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier INSTANCE
okhttp3.Response: okhttp3.Protocol protocol
okhttp3.Request$Builder: okhttp3.RequestBody body
retrofit2.OkHttpCall: okhttp3.Call$Factory callFactory
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$Companion Companion
okhttp3.internal.http2.Http2Writer: boolean client
okhttp3.Authenticator: okhttp3.Authenticator JAVA_NET_AUTHENTICATOR
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 cleanupTask
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
okhttp3.Cookie: java.lang.String path
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
okhttp3.ConnectionSpec: boolean isTls
okhttp3.Response$Builder: long receivedResponseAtMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
okhttp3.OkHttpClient: java.net.Proxy proxy
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
okhttp3.Headers: okhttp3.Headers$Companion Companion
okhttp3.internal.http2.Http2: int TYPE_WINDOW_UPDATE
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.ResponseBody delegate
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
okhttp3.internal.connection.RealConnection: long IDLE_CONNECTION_HEALTHY_NS
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.lang.String $name
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
okhttp3.HttpUrl: int port
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
okhttp3.Request$Builder: java.util.Map tags
com.google.android.gms.internal.common.zzj: java.lang.Object zza
okhttp3.Cache$Entry: okhttp3.Handshake handshake
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue pushQueue
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink sink
okio.ForwardingSource: okio.Source delegate
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader headersReader
retrofit2.RequestBuilder: java.util.regex.Pattern PATH_TRAVERSAL
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.Gson gson
retrofit2.OkHttpCall: boolean executed
okhttp3.internal.connection.Exchange$RequestBodySink: long contentLength
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
android.support.v4.os.ResultReceiver: android.support.v4.os.IResultReceiver mReceiver
retrofit2.ParameterHandler$Tag: java.lang.Class cls
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
retrofit2.ParameterHandler$HeaderMap: java.lang.reflect.Method method
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.internal.common.zzh: com.google.android.gms.internal.common.zze zza
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory playProviderFactory
okhttp3.internal.ws.RealWebSocket: long queueSize
com.google.android.gms.internal.common.zzaa: int zzb
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$IntRef $receivedCloseCode$inlined
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Android10Platform$Companion Companion
okhttp3.internal.http2.Huffman$Node: int terminalBitCount
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis
retrofit2.ParameterHandler$Field: retrofit2.Converter valueConverter
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.HttpUrl url
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
retrofit2.Invocation: java.lang.reflect.Method method
retrofit2.converter.moshi.MoshiResponseBodyConverter: okio.ByteString UTF8_BOM
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform platform
okhttp3.internal.http2.Http2: int TYPE_DATA
com.charging.animation.mobile.battery.api.CommonAds: boolean rewarded_animation
com.charging.animation.mobile.battery.api.CommonAds: boolean native_apply
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method removeMethod
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
okhttp3.internal.platform.BouncyCastlePlatform: java.security.Provider provider
okhttp3.FormBody$Builder: java.util.List names
okhttp3.MediaType: okhttp3.MediaType$Companion Companion
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connection
okhttp3.CacheControl$Builder: int minFreshSeconds
okhttp3.RequestBody$Companion$toRequestBody$2: int $byteCount
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.ForwardingTimeout timeout
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
retrofit2.RequestFactory: java.lang.String relativeUrl
retrofit2.ParameterHandler$RelativeUrl: java.lang.reflect.Method method
okhttp3.internal.http2.Huffman: byte[] CODE_BIT_COUNTS
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue settingsListenerQueue
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: java.util.concurrent.CompletableFuture future
okhttp3.Challenge: java.lang.String scheme
retrofit2.converter.moshi.MoshiConverterFactory: com.squareup.moshi.Moshi moshi
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
android.support.v4.os.ResultReceiver$MyRunnable: android.support.v4.os.ResultReceiver this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
okhttp3.Cache$RealCacheRequest: okio.Sink cacheOut
okhttp3.Headers: java.lang.String[] namesAndValues
okhttp3.internal.platform.OpenJSSEPlatform: boolean isSupported
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: retrofit2.BuiltInConverters$BufferingResponseBodyConverter INSTANCE
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
retrofit2.RequestFactory$Builder: boolean gotQuery
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_IDLE
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
okhttp3.internal.http2.Http2: okhttp3.internal.http2.Http2 INSTANCE
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
retrofit2.ParameterHandler$Header: retrofit2.Converter valueConverter
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
okhttp3.CacheControl: int maxStaleSeconds
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
okhttp3.internal.http2.Huffman$Node: int symbol
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
okhttp3.Request: okhttp3.HttpUrl url
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_notify
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver$Companion Companion
okhttp3.Response$Builder: long sentRequestAtMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion Companion
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object callStackTrace
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
okhttp3.Cache$urls$1: java.util.Iterator delegate
okhttp3.internal.cache2.Relay: long bufferMaxSize
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
kotlinx.coroutines.InvokeOnCancelling: int _invoked
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
okhttp3.internal.ws.WebSocketWriter: okio.Buffer messageBuffer
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
kotlinx.coroutines.DefaultExecutor: int debugStatus
retrofit2.Invocation: java.util.List arguments
okhttp3.CacheControl: java.lang.String headerValue
okhttp3.internal.concurrent.TaskQueue: boolean cancelActiveTask
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part$Companion Companion
okhttp3.internal.connection.Exchange$ResponseBodySource: long contentLength
okhttp3.internal.concurrent.Task: java.lang.String name
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
okhttp3.internal.http2.Http2Reader$ContinuationSource: int flags
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
okhttp3.Headers$Builder: java.util.List namesAndValues
okhttp3.RequestBody$Companion$asRequestBody$1: java.io.File $this_asRequestBody
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange exchange
retrofit2.RequestFactory: okhttp3.MediaType contentType
retrofit2.OptionalConverterFactory: retrofit2.Converter$Factory INSTANCE
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.Gson gson
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
retrofit2.ParameterHandler$FieldMap: java.lang.reflect.Method method
okhttp3.MultipartReader$PartSource: okhttp3.MultipartReader this$0
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
okhttp3.internal.http.StatusLine: int HTTP_MISDIRECTED_REQUEST
okhttp3.internal.http2.Http2: int FLAG_COMPRESSED
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
com.charging.animation.mobile.battery.api.CommonAds: boolean native_download
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okhttp3.internal.cache.DiskLruCache$Entry this$0
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: boolean $cancelable
retrofit2.ParameterHandler$Path: retrofit2.Converter valueConverter
okhttp3.Handshake: kotlin.Lazy peerCertificates$delegate
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $stream$inlined
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Runnable $block
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
retrofit2.Retrofit: java.util.Map serviceMethodCache
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name$inlined
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource source
retrofit2.RequestBuilder: okhttp3.HttpUrl$Builder urlBuilder
okhttp3.internal.http1.HeadersReader: okhttp3.internal.http1.HeadersReader$Companion Companion
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: java.lang.String $name
com.google.android.gms.internal.common.zzt: com.google.android.gms.internal.common.zzu zza
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions x509TrustManagerExtensions
retrofit2.RequestFactory: boolean isFormEncoded
okhttp3.Address: java.net.Proxy proxy
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType $contentType
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.AndroidSocketAdapter$Companion Companion
retrofit2.RequestFactory$Builder: boolean gotPart
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType
retrofit2.RequestBuilder: java.lang.String relativeUrl
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.util.List protocols
okhttp3.Dispatcher: java.util.ArrayDeque runningAsyncCalls
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
okhttp3.CertificatePinner$Builder: java.util.List pins
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: retrofit2.Call $this_await$inlined
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
okhttp3.Request$Builder: java.lang.String method
okhttp3.Request: okhttp3.Headers headers
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type lowerBound
okhttp3.MediaType: java.lang.String subtype
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: boolean inputExhausted
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool delegate
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
okhttp3.FormBody: java.util.List encodedValues
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type rawType
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String KEEP_ALIVE
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType AVIF
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.util.Iterator delegate
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $newStream$inlined
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: boolean cacheRequestClosed
okhttp3.internal.http1.Http1ExchangeCodec: int state
com.google.android.gms.internal.common.zzz: int zza
okhttp3.HttpUrl: java.util.List pathSegments
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method openMethod
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
retrofit2.RequestFactory$Builder: okhttp3.Headers headers
okhttp3.internal.http1.HeadersReader: int HEADER_LIMIT
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
okhttp3.internal.io.FileSystem$Companion: okhttp3.internal.io.FileSystem$Companion $$INSTANCE
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.Callback val$callback
okhttp3.internal.concurrent.TaskQueue$execute$1: kotlin.jvm.functions.Function0 $block
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToNotify$inlined
retrofit2.Retrofit$1: java.lang.Class val$service
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter this$0
okhttp3.Response: okhttp3.Response cacheResponse
okhttp3.internal.platform.Platform: int WARN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.Cache: int writeSuccessCount
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
retrofit2.ParameterHandler$QueryName: boolean encoded
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: retrofit2.OkHttpCall$ExceptionCatchingResponseBody this$0
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
retrofit2.Retrofit: okhttp3.Call$Factory callFactory
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
okhttp3.internal.concurrent.TaskQueue: boolean shutdown
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener $this_asFactory
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.Address: okhttp3.Dns dns
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
okhttp3.CacheControl$Builder: boolean onlyIfCached
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
com.charging.animation.mobile.battery.api.CommonAds: boolean native_permission
okhttp3.internal.connection.ExchangeFinder: okhttp3.EventListener eventListener
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okhttp3.Dispatcher: java.util.ArrayDeque runningSyncCalls
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
retrofit2.ParameterHandler$QueryMap: boolean encoded
okhttp3.internal.http2.Http2: int FLAG_END_HEADERS
okhttp3.internal.platform.Jdk9Platform: boolean isAvailable
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: java.lang.String $name
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.HttpUrl $url
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
com.charging.animation.mobile.battery.api.Results: boolean free
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
okio.ForwardingSink: okio.Sink delegate
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
okhttp3.MediaType: java.lang.String type
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall call
okhttp3.internal.cache.DiskLruCache: long maxSize
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
retrofit2.ParameterHandler$2: retrofit2.ParameterHandler this$0
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.google.android.gms.internal.common.zzx: boolean zzb
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: kotlin.jvm.functions.Function1 $block
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: java.lang.Exception $this_suspendAndThrow$inlined
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.android.CloseGuard closeGuard
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String UPGRADE
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
retrofit2.HttpServiceMethod$SuspendForResponse: retrofit2.CallAdapter callAdapter
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
retrofit2.converter.moshi.MoshiRequestBodyConverter: com.squareup.moshi.JsonAdapter adapter
com.charging.animation.mobile.battery.api.Results: java.lang.String link
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.FormBody: okhttp3.FormBody$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.http.ExchangeCodec$Companion: okhttp3.internal.http.ExchangeCodec$Companion $$INSTANCE
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
okhttp3.internal.http2.PushObserver$Companion: okhttp3.internal.http2.PushObserver$Companion $$INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: java.lang.String $name
okhttp3.MultipartBody$Part: okhttp3.Headers headers
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String name
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.internal.connection.RealConnection: boolean noNewExchanges
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
okhttp3.Authenticator: okhttp3.Authenticator NONE
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion
okhttp3.Challenge: java.util.Map authParams
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload1$inlined
okhttp3.HttpUrl: java.lang.String password
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancelAll
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.common.zzc: java.lang.ClassLoader zza
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload2$inlined
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type val$responseType
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
retrofit2.DefaultCallAdapterFactory: java.util.concurrent.Executor callbackExecutor
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
okhttp3.internal.ws.RealWebSocket: java.lang.String name
okhttp3.CipherSuite: okhttp3.CipherSuite$Companion Companion
retrofit2.BuiltInConverters$RequestBodyConverter: retrofit2.BuiltInConverters$RequestBodyConverter INSTANCE
com.google.android.gms.internal.common.zzw: int zzf
com.google.android.gms.internal.common.zzw: int zze
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $messageOrClose$inlined
okhttp3.internal.platform.android.AndroidLog: java.util.Map knownLoggers
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue queue
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
okhttp3.MultipartBody: java.util.List parts
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
okio.Timeout: boolean hasDeadline
retrofit2.Retrofit$Builder: boolean validateEagerly
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
retrofit2.Retrofit: java.util.List converterFactories
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.Class sslSocketClass
okhttp3.internal.ws.WebSocketReader: boolean isClient
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.connection.RealConnectionPool: int maxIdleConnections
okhttp3.MultipartReader$PartSource: okio.Timeout timeout
okhttp3.CacheControl: boolean onlyIfCached
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http.DatesKt: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
okio.Timeout: long timeoutNanos
retrofit2.RequestFactory$Builder: java.lang.String PARAM
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
okhttp3.internal.ws.MessageInflater: okio.InflaterSource inflaterSource
okhttp3.internal.http2.Http2: int TYPE_PING
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
okhttp3.internal.ws.MessageInflaterKt: int OCTETS_TO_ADD_BEFORE_INFLATION
okhttp3.internal.http2.Http2: int TYPE_CONTINUATION
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection: int nextStreamId
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.charging.animation.mobile.battery.api.Results: java.lang.String name
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
okhttp3.MultipartReader: java.lang.String boundary
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
okhttp3.internal.connection.ConnectInterceptor: okhttp3.internal.connection.ConnectInterceptor INSTANCE
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
okhttp3.MediaType: java.lang.String QUOTED
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level level
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
retrofit2.RequestFactory$Builder: java.lang.reflect.Type[] parameterTypes
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Companion Companion
okhttp3.OkHttpClient: int readTimeoutMillis
okhttp3.internal.ws.WebSocketWriter: boolean perMessageDeflate
com.charging.animation.mobile.battery.api.CommonAds: boolean inter_intro
okhttp3.OkHttpClient: int writeTimeoutMillis
okhttp3.internal.http2.Settings: int ENABLE_PUSH
okhttp3.internal.http2.Http2Writer: boolean closed
okhttp3.logging.LoggingEventListener$Factory: okhttp3.logging.HttpLoggingInterceptor$Logger logger
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Stream stream
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $writerToClose$inlined
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
okhttp3.logging.LoggingEventListener: okhttp3.logging.HttpLoggingInterceptor$Logger logger
retrofit2.KotlinExtensions$await$4$2: kotlinx.coroutines.CancellableContinuation $continuation
okhttp3.CertificatePinner$Pin: java.lang.String pattern
okhttp3.Response: okhttp3.internal.connection.Exchange exchange
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.Cache$urls$1: java.lang.String nextUrl
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_NAME_REGEX
okhttp3.internal.http2.Http2ExchangeCodec: boolean canceled
android.support.v4.os.ResultReceiver$MyResultReceiver: android.support.v4.os.ResultReceiver this$0
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
okhttp3.internal.http2.Http2: int TYPE_PUSH_PROMISE
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion Companion
retrofit2.HttpException: java.lang.String message
okhttp3.internal.http2.Http2Reader$ContinuationSource: int padding
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: retrofit2.BuiltInConverters$StreamingResponseBodyConverter INSTANCE
retrofit2.RequestFactory$Builder: boolean isFormEncoded
retrofit2.ParameterHandler$FieldMap: boolean encoded
okhttp3.OkHttpClient: okhttp3.Cache cache
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
retrofit2.ParameterHandler$Query: retrofit2.Converter valueConverter
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
okhttp3.MultipartBody: long contentLength
okhttp3.CacheControl$Builder: boolean noCache
okhttp3.Dns: okhttp3.Dns$Companion Companion
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: boolean $cancelable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.internal.http2.Http2Stream: long writeBytesMaximum
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
pl.droidsonroids.gif.GifViewSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
okhttp3.internal.http.RealInterceptorChain: int calls
okhttp3.HttpUrl: char[] HEX_DIGITS
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.android.gms.internal.common.zzn: com.google.android.gms.internal.common.zzn zza
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] $VALUES
retrofit2.RequestFactory$Builder: boolean gotField
retrofit2.RequestFactory: retrofit2.ParameterHandler[] parameterHandlers
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
okhttp3.internal.connection.RealCall: boolean responseBodyOpen
okhttp3.internal.http2.Http2Connection: int DEGRADED_PONG_TIMEOUT_NS
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
okhttp3.internal.connection.ExchangeFinder: int otherFailureCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
okhttp3.internal.http2.Http2Stream: long EMIT_BUFFER_SIZE
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
com.google.android.gms.internal.common.zzx: com.google.android.gms.internal.common.zzo zza
okhttp3.Response$Builder: okhttp3.Protocol protocol
okhttp3.internal.connection.RealConnection: boolean noCoalescedConnections
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
com.google.android.gms.internal.common.zzz: int zzb
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
com.charging.animation.mobile.battery.api.CommonAds: boolean inter_all
okhttp3.internal.ws.MessageDeflater: okio.Buffer deflatedBytes
okhttp3.Cache: int ENTRY_BODY
okhttp3.Cookie: long expiresAt
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToClose$inlined
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object result
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BASIC
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket$Streams $streams$inlined
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
okhttp3.Cookie: java.lang.String name
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
retrofit2.OkHttpCall: boolean canceled
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
okhttp3.internal.http.DatesKt: long MAX_DATE
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_awaitResponse$inlined
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Cache$Entry: java.lang.String message
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Companion Companion
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
okhttp3.Cache$urls$1: boolean canRemove
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
retrofit2.Utils: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY
retrofit2.ParameterHandler$FieldMap: retrofit2.Converter valueConverter
okhttp3.internal.ws.RealWebSocket: boolean failed
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
okhttp3.MultipartReader: okio.ByteString crlfDashDashBoundary
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheInterceptor$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealCall: okhttp3.Request originalRequest
com.google.android.gms.internal.common.zzm: java.lang.String zza
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
okhttp3.internal.http2.Http2Stream: java.io.IOException errorException
okhttp3.Response$Builder: okhttp3.ResponseBody body
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
okhttp3.OkHttp: java.lang.String VERSION
okhttp3.Cache$Entry: okhttp3.Protocol protocol
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean closed
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
okhttp3.Cache$Entry: long sentRequestMillis
retrofit2.Response: okhttp3.ResponseBody errorBody
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
retrofit2.ParameterHandler$1: retrofit2.ParameterHandler this$0
com.google.android.gms.internal.common.zzu: com.google.android.gms.internal.common.zzo zza
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
okhttp3.internal.ws.WebSocketReader: boolean readingCompressedMessage
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSink $sink
okhttp3.internal.http1.HeadersReader: okio.BufferedSource source
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
okhttp3.internal.cache.DiskLruCache: int appVersion
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.TaskQueue taskQueue
com.google.android.gms.internal.common.zza: java.lang.String zzb
android.support.v4.os.IResultReceiver2: java.lang.String DESCRIPTOR
okio.AsyncTimeout: long timeoutAt
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
retrofit2.converter.moshi.MoshiConverterFactory: boolean lenient
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
okhttp3.internal.ws.WebSocketWriter: long minimumDeflateSize
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Companion Companion
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
okhttp3.Response$Builder: okhttp3.Handshake handshake
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.RequestBody$Companion$toRequestBody$2: int $offset
okhttp3.MultipartBody$Builder: java.util.List parts
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
okhttp3.ConnectionSpec: java.lang.String[] cipherSuitesAsString
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BODY
okhttp3.internal.platform.android.CloseGuard: okhttp3.internal.platform.android.CloseGuard$Companion Companion
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
retrofit2.RequestBuilder: java.lang.String method
okhttp3.Cookie$Builder: long expiresAt
retrofit2.converter.moshi.MoshiResponseBodyConverter: com.squareup.moshi.JsonAdapter adapter
okhttp3.internal.http1.Http1ExchangeCodec: long NO_CHUNK_YET
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Hpack INSTANCE
android.support.v4.app.INotificationSideChannel: java.lang.String DESCRIPTOR
okhttp3.internal.platform.android.Android10SocketAdapter: okhttp3.internal.platform.android.Android10SocketAdapter$Companion Companion
okhttp3.Route: okhttp3.Address address
okhttp3.internal.http2.Http2Stream: long readBytesTotal
okhttp3.Response: okhttp3.Response networkResponse
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
okhttp3.internal.http2.Header: okio.ByteString value
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
okhttp3.internal.cache2.Relay: int SOURCE_FILE
retrofit2.ParameterHandler$HeaderMap: int p
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType $contentType
okhttp3.Cache: int hitCount
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class paramClass
android.support.v4.os.ResultReceiver$MyRunnable: int mResultCode
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address address
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
retrofit2.RequestBuilder: boolean hasBody
okhttp3.OkHttpClient: okhttp3.Dns dns
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
okhttp3.internal.ws.RealWebSocket$Close: int code
okhttp3.HttpUrl: java.util.List queryNamesAndValues
okhttp3.Response: int code
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String HOST
retrofit2.SkipCallbackExecutorImpl: retrofit2.SkipCallbackExecutor INSTANCE
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
okhttp3.internal.ws.MessageDeflaterKt: int LAST_OCTETS_COUNT_TO_REMOVE_AFTER_DEFLATION
okhttp3.internal.connection.Exchange$RequestBodySink: boolean closed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange exchange
retrofit2.BuiltInConverters$ToStringConverter: retrofit2.BuiltInConverters$ToStringConverter INSTANCE
kotlinx.coroutines.CompletedExceptionally: int _handled
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.Interceptor: okhttp3.Interceptor$Companion Companion
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.charging.animation.mobile.battery.api.CommonAds: boolean native_gallery
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.Task writerTask
kotlinx.coroutines.JobSupport: java.lang.Object _state
okhttp3.internal.cache.DiskLruCache$Entry: boolean zombie
okhttp3.CacheControl$Builder: boolean noTransform
okhttp3.internal.Util: kotlin.text.Regex VERIFY_AS_IP_ADDRESS
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
retrofit2.ParameterHandler$Part: okhttp3.Headers headers
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okio.ByteString $pong$inlined
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
okhttp3.Authenticator$Companion: okhttp3.Authenticator$Companion $$INSTANCE
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType $contentType
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
okhttp3.internal.concurrent.TaskRunner: long coordinatorWakeUpAt
retrofit2.Retrofit$1: retrofit2.Platform platform
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
okhttp3.Cache$urls$1: okhttp3.Cache this$0
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
retrofit2.HttpServiceMethod$SuspendForBody: boolean isNullable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.ExchangeFinder exchangeFinder
retrofit2.ParameterHandler$QueryMap: java.lang.reflect.Method method
retrofit2.Retrofit$Builder: okhttp3.Call$Factory callFactory
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
okhttp3.internal.Util$threadFactory$1: boolean $daemon
okhttp3.internal.http2.Settings: int set
retrofit2.RequestFactory$Builder: boolean isMultipart
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type upperBound
retrofit2.Retrofit$Builder: retrofit2.Platform platform
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String CONNECTION
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String ENCODING
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 timeout
okhttp3.ConnectionSpec$Builder: boolean tls
okhttp3.HttpUrl: java.lang.String scheme
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.MediaType MEDIA_TYPE
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler[] parameterHandlers
okhttp3.CacheControl: okhttp3.CacheControl$Companion Companion
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setHostname
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
okhttp3.Interceptor$Companion: okhttp3.Interceptor$Companion $$INSTANCE
okhttp3.EventListener: okhttp3.EventListener NONE
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
com.charging.animation.mobile.battery.api.ApiService: com.google.gson.Gson gson
kotlinx.coroutines.DispatchedCoroutine: int _decision
okhttp3.Handshake: okhttp3.Handshake$Companion Companion
android.support.v4.os.IResultReceiver2$Stub$Proxy: android.os.IBinder mRemote
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method getMethod
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $inFinished$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall this$0
okhttp3.internal.http1.HeadersReader: long headerLimit
okhttp3.internal.http.HttpMethod: okhttp3.internal.http.HttpMethod INSTANCE
okhttp3.ResponseBody$Companion$asResponseBody$1: long $contentLength
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString EMPTY_DEFLATE_BLOCK
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient$Builder: long minWebSocketMessageToCompress
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.MultipartReader: okhttp3.MultipartReader$Companion Companion
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
okhttp3.internal.connection.RealConnectionPool: java.util.concurrent.ConcurrentLinkedQueue connections
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers
okhttp3.internal.Util$threadFactory$1: java.lang.String $name
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
okhttp3.Dns: okhttp3.Dns SYSTEM
retrofit2.RequestFactory$Builder: boolean gotQueryMap
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection$Companion Companion
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
kotlin.jvm.internal.CallableReference: java.lang.Class owner
okhttp3.OkHttpClient: java.util.List connectionSpecs
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
retrofit2.KotlinExtensions$awaitResponse$2$2: kotlinx.coroutines.CancellableContinuation $continuation
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
okhttp3.internal.http2.Http2Stream: long writeBytesTotal
okhttp3.CacheControl: boolean isPrivate
okhttp3.OkHttpClient: java.util.List networkInterceptors
com.google.android.gms.internal.common.zzaf: int zza
retrofit2.converter.gson.GsonRequestBodyConverter: java.nio.charset.Charset UTF_8
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.internal.cache.DiskLruCache: long size
okhttp3.internal.http2.Hpack$Writer: int headerCount
retrofit2.RequestFactory: boolean hasBody
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
okhttp3.OkHttpClient$Builder$addInterceptor$2: kotlin.jvm.functions.Function1 $block
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
okhttp3.Request: java.lang.String method
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.Request $request
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
retrofit2.RequestFactory$Builder: boolean gotBody
okhttp3.internal.cache.CacheStrategy: okhttp3.internal.cache.CacheStrategy$Companion Companion
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
okhttp3.internal.platform.AndroidPlatform: java.util.List socketAdapters
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
com.google.android.play.core.review.ReviewInfo: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
com.charging.animation.mobile.battery.api.RetrofitClient: com.charging.animation.mobile.battery.api.RetrofitClient instance
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http.RealInterceptorChain chain
okhttp3.internal.cache2.Relay: boolean complete
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor editor
retrofit2.ParameterHandler$QueryMap: int p
okhttp3.internal.http2.Http2: int TYPE_RST_STREAM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
okhttp3.internal.http2.Http2Connection: long readBytesAcknowledged
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: boolean closed
okhttp3.MultipartBody: byte[] CRLF
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout timeout
retrofit2.ParameterHandler$QueryMap: retrofit2.Converter valueConverter
okhttp3.CertificatePinner: java.util.Set pins
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Logger logger
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class serverProviderClass
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_WRITING_REQUEST_BODY
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.MessageDeflater messageDeflater
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.Dispatcher: java.util.ArrayDeque readyAsyncCalls
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
retrofit2.RequestFactory: java.lang.String httpMethod
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
com.charging.animation.mobile.battery.api.CommonAds: boolean native_intro
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
okhttp3.MultipartReader: okio.BufferedSource source
com.charging.animation.mobile.battery.api.Api: java.lang.String BASE_URL
retrofit2.RequestFactory$Builder: java.util.Set relativeUrlParamNames
okhttp3.Cookie$Builder: java.lang.String value
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
okhttp3.internal.concurrent.TaskRunner$RealBackend: java.util.concurrent.ThreadPoolExecutor executor
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager
okhttp3.OkHttpClient: boolean followRedirects
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.ForwardingTimeout timeout
okhttp3.internal.http2.Http2: int FLAG_END_STREAM
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.concurrent.TaskRunner: int nextQueueName
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
okhttp3.Cookie: boolean secure
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
retrofit2.Retrofit$1: java.lang.Object[] emptyArgs
com.google.android.gms.internal.common.zzv: java.lang.CharSequence zza
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings$Companion Companion
retrofit2.RequestFactory$Builder: boolean gotQueryName
retrofit2.OkHttpCall: okhttp3.Call rawCall
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $byteCount$inlined
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzak zza
okhttp3.internal.platform.android.AndroidLog: java.util.concurrent.CopyOnWriteArraySet configuredLoggers
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue writerQueue
com.charging.animation.mobile.battery.api.Results: int type
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec$Companion Companion
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers trailers
okhttp3.internal.http2.Http2: int TYPE_SETTINGS
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
retrofit2.ParameterHandler$Path: int p
okhttp3.internal.platform.BouncyCastlePlatform: okhttp3.internal.platform.BouncyCastlePlatform$Companion Companion
okhttp3.internal.concurrent.Task: boolean cancelable
com.charging.animation.mobile.battery.api.Results: int id
com.charging.animation.mobile.battery.api.CommonAds: long interval_interstitial_from_start
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
okhttp3.internal.connection.Exchange$RequestBodySink: okhttp3.internal.connection.Exchange this$0
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealCall call
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
okhttp3.Cookie$Builder: boolean httpOnly
okhttp3.internal.platform.Android10Platform: boolean isSupported
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String PROXY_CONNECTION
okhttp3.OkHttpClient$Builder: java.util.List protocols
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorServiceOrNull
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$Companion Companion
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okhttp3.internal.connection.Exchange $exchange
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer serverMaxWindowBits
com.google.android.gms.internal.common.zzw: java.lang.CharSequence zzb
okhttp3.internal.connection.RealCall: java.util.concurrent.atomic.AtomicBoolean executed
okhttp3.Handshake: java.util.List localCertificates
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
okio.Timeout: long deadlineNanoTime
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String connectionName
okhttp3.internal.cache.DiskLruCache$Snapshot: java.util.List sources
okhttp3.Response: okhttp3.Request request
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
retrofit2.Retrofit$Builder: okhttp3.HttpUrl baseUrl
okhttp3.MediaType: java.lang.String TOKEN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: boolean closed
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
okhttp3.OkHttpClient: int callTimeoutMillis
okhttp3.MultipartReader$Part: okio.BufferedSource body
com.google.android.gms.internal.common.zzx: com.google.android.gms.internal.common.zzu zzc
okhttp3.CacheControl: boolean immutable
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean completed
retrofit2.BuiltInConverters$UnitResponseBodyConverter: retrofit2.BuiltInConverters$UnitResponseBodyConverter INSTANCE
com.google.android.gms.internal.common.zzw: boolean zzd
okhttp3.Dns$Companion: okhttp3.Dns$Companion $$INSTANCE
okhttp3.internal.connection.RealConnection: java.util.List calls
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
retrofit2.Platform: boolean hasJava8Types
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.BasicCertificateChainCleaner$Companion Companion
retrofit2.ParameterHandler$PartMap: java.lang.reflect.Method method
okhttp3.internal.ws.RealWebSocket: java.lang.String key
retrofit2.RequestBuilder: okhttp3.HttpUrl baseUrl
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$cleanupTask$1 cleanupTask
okhttp3.internal.publicsuffix.PublicSuffixDatabase: char EXCEPTION_MARKER
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions$Companion Companion
okhttp3.internal.platform.Android10Platform: java.util.List socketAdapters
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
okhttp3.Response$Builder: okhttp3.Request request
retrofit2.HttpServiceMethod$SuspendForBody: retrofit2.CallAdapter callAdapter
retrofit2.ParameterHandler$Path: boolean encoded
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl
retrofit2.converter.moshi.MoshiRequestBodyConverter: okhttp3.MediaType MEDIA_TYPE
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.android.gms.internal.common.zzd: int zza
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.MultipartReader: okio.ByteString dashDashBoundary
retrofit2.RequestFactory$Builder: boolean gotPath
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.internal.common.zzai: com.google.android.gms.internal.common.zzag zza
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long bytesRemaining
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner taskRunner
retrofit2.ParameterHandler$Part: int p
retrofit2.RequestBuilder: okhttp3.FormBody$Builder formBuilder
okhttp3.internal.cache.DiskLruCache$Entry: int lockingSourceCount
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner$Companion Companion
okhttp3.internal.Util: java.lang.String userAgent
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange exchange
retrofit2.converter.moshi.MoshiConverterFactory: boolean serializeNulls
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
okhttp3.Protocol: java.lang.String protocol
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
retrofit2.ParameterHandler$Body: int p
okhttp3.internal.http.StatusLine: java.lang.String message
okhttp3.internal.http.StatusLine: int code
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.charging.animation.mobile.battery.api.CommonAds: boolean native_preview
retrofit2.ParameterHandler$Part: retrofit2.Converter converter
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: okhttp3.internal.connection.RealConnectionPool this$0
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: boolean hasMoreChunks
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketWriter $writer$inlined
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long bytesRemainingInChunk
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okio.Buffer $buffer$inlined
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.Response$Builder: int code
okhttp3.Cache$Entry: java.lang.String requestMethod
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch latch
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List cleanFiles
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: okhttp3.logging.HttpLoggingInterceptor$Logger$Companion $$INSTANCE
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache cache
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setUseSessionTickets
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: boolean $cancelable
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean invokeStartEvent
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Protocol protocol
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$Companion Companion
okhttp3.Request: okhttp3.RequestBody body
retrofit2.OkHttpCall: retrofit2.Converter responseConverter
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Dns defaultDns
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: retrofit2.Call call
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: java.lang.String $name
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.cache2.Relay: okio.ByteString metadata
okhttp3.internal.concurrent.TaskQueue$execute$1: boolean $cancelable
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
okhttp3.internal.connection.RealConnection$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.OkHttpClient$Builder: int pingInterval
okhttp3.internal.cache.DiskLruCache: java.io.File directory
okhttp3.Dispatcher: int maxRequestsPerHost
okhttp3.internal.ws.WebSocketReader: boolean perMessageDeflate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
okhttp3.internal.Util: boolean assertionsEnabled
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.http.ExchangeCodec$Companion: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.MultipartBody: okhttp3.MultipartBody$Companion Companion
com.google.android.gms.internal.common.zzae: com.google.android.gms.internal.common.zzag zza
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSource $source
okhttp3.internal.ws.MessageInflater: okio.Buffer deflatedBytes
okhttp3.Cache: int ENTRY_METADATA
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSink $cacheBody
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
retrofit2.DefaultCallAdapterFactory$1: java.util.concurrent.Executor val$executor
okhttp3.internal.cache2.Relay: long upstreamPos
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Cookie: boolean hostOnly
okhttp3.internal.platform.android.AndroidLogHandler: okhttp3.internal.platform.android.AndroidLogHandler INSTANCE
okhttp3.CacheControl: boolean mustRevalidate
okhttp3.internal.platform.android.AndroidLog: int MAX_LOG_LENGTH
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
okhttp3.Cookie$Builder: java.lang.String name
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Companion Companion
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.common.zzaf: int zzb
retrofit2.RequestFactory$Builder: java.lang.reflect.Method method
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okhttp3.internal.cache.CacheRequest $cacheRequest
okhttp3.internal.connection.Exchange$RequestBodySink: boolean completed
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
okhttp3.internal.concurrent.TaskRunner: java.util.List busyQueues
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
com.google.android.gms.internal.common.zzai: java.lang.Object[] zzb
okhttp3.Cookie: boolean httpOnly
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: java.lang.String $name
okhttp3.HttpUrl$Builder: int port
retrofit2.OkHttpCall$1: retrofit2.OkHttpCall this$0
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: java.util.concurrent.CompletableFuture future
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
retrofit2.HttpServiceMethod: okhttp3.Call$Factory callFactory
okhttp3.internal.connection.RouteSelector: java.util.List proxies
okhttp3.Cache: int requestCount
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
okhttp3.internal.http2.Http2Connection: java.util.Map streams
okhttp3.internal.connection.RealConnection: int routeFailureCount
okhttp3.internal.http2.Http2: int TYPE_HEADERS
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
retrofit2.Platform: java.lang.reflect.Constructor lookupConstructor
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.connection.Exchange$ResponseBodySource: long bytesReceived
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_AVIF
okhttp3.FormBody: java.util.List encodedNames
okhttp3.Cookie$Builder: java.lang.String path
okhttp3.CacheControl: boolean noTransform
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
okhttp3.internal.http2.Http2Writer: int maxFrameSize
okhttp3.Cache$RealCacheRequest: boolean done
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READING_RESPONSE_BODY
okhttp3.HttpUrl: okhttp3.HttpUrl$Companion Companion
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Companion Companion
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
okhttp3.internal.ws.WebSocketReader: long frameLength
retrofit2.KotlinExtensions$suspendAndThrow$1: int label
retrofit2.ParameterHandler$QueryName: retrofit2.Converter nameConverter
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean unsupported
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancel
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: boolean $cancelable
retrofit2.RequestFactory: okhttp3.Headers headers
okhttp3.internal.concurrent.TaskRunner: java.util.List readyQueues
okio.AsyncTimeout: boolean inQueue
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings DEFAULT_SETTINGS
okhttp3.internal.cache.DiskLruCache: boolean initialized
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
retrofit2.RequestFactory$Builder: boolean gotUrl
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2: int FLAG_PADDED
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.concurrent.TaskQueue cleanupQueue
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange interceptorScopedExchange
okhttp3.internal.http2.Http2: int FLAG_END_PUSH_PROMISE
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method getAlpnSelectedProtocol
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level HEADERS
android.support.v4.os.IResultReceiver2$Stub: int TRANSACTION_send
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.MessageInflater messageInflater
okhttp3.internal.connection.RealCall$timeout$1: okhttp3.internal.connection.RealCall this$0
okhttp3.OkHttpClient$Builder: java.util.List interceptors
okhttp3.HttpUrl: java.lang.String host
okhttp3.internal.http2.Http2Connection: long writeBytesTotal
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
okhttp3.MediaType: java.lang.String[] parameterNamesAndValues
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager x509TrustManagerOrNull
com.charging.animation.mobile.battery.api.CommonAds: boolean native_success
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.WebSocketExtensions: boolean clientNoContextTakeover
okhttp3.FormBody$Builder: java.util.List values
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
okhttp3.internal.concurrent.TaskQueue: java.lang.String name
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.TypeAdapter adapter
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
android.support.v4.os.IResultReceiver$Stub: int TRANSACTION_send
okhttp3.internal.http2.Settings: int[] values
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
retrofit2.ParameterHandler$RelativeUrl: int p
okhttp3.internal.ws.WebSocketExtensions: boolean perMessageDeflate
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
okhttp3.Dispatcher: int maxRequests
com.charging.animation.mobile.battery.api.ApiService: com.charging.animation.mobile.battery.api.ApiService apiService
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_await$inlined
okhttp3.RequestBody$Companion$toRequestBody$1: okio.ByteString $this_toRequestBody
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
okhttp3.MultipartBody$Builder: okio.ByteString boundary
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall call
okhttp3.CookieJar: okhttp3.CookieJar$Companion Companion
okhttp3.CipherSuite: java.util.Map INSTANCES
okhttp3.Address: okhttp3.HttpUrl url
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer clientMaxWindowBits
okhttp3.internal.ws.RealWebSocket: int sentPingCount
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.util.List invoke()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
okhttp3.HttpUrl$Companion: boolean isPercentEncoded(java.lang.String,int,int)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String)
android.support.v4.os.IResultReceiver$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrameSlowPath(kotlin.coroutines.Continuation)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: long runOnce()
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: void setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall)
retrofit2.converter.gson.GsonRequestBodyConverter: java.lang.Object convert(java.lang.Object)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
androidx.work.impl.model.WorkSpec$IdAndState: WorkSpec$IdAndState()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.RealConnectionPool: RealConnectionPool(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.Exchange: void noNewExchangesOnConnection()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
okhttp3.ConnectionSpec$Builder: java.lang.String[] getCipherSuites$okhttp()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
okhttp3.Handshake$Companion$get$1: java.lang.Object invoke()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginBottom()
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.android.HandlerDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: CacheInterceptor$cacheWritingResponse$cacheWritingSource$1(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
okhttp3.internal.concurrent.TaskQueue: java.util.concurrent.CountDownLatch idleLatch()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
eightbitlab.com.blurview.BlurView: BlurView(android.content.Context,android.util.AttributeSet)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setStartAngleIndeterminateMode(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
androidx.constraintlayout.motion.widget.MotionHelper: void setProgress(float)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
com.google.android.gms.internal.common.zzi: zzi()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
okhttp3.internal.http2.Http2Stream: long getWriteBytesTotal()
com.google.android.material.button.MaterialButton: int getTextHeight()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.tls.BasicCertificateChainCleaner: <clinit>()
okhttp3.Handshake: okhttp3.CipherSuite -deprecated_cipherSuite()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: ZzHorizontalProgressBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Settings: int get(int)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.android.material.appbar.CollapsingToolbarLayout: void setLineSpacingMultiplier(float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
okhttp3.internal.http2.Http2Connection: long getReadBytesAcknowledged()
okhttp3.CacheControl: boolean noCache()
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths$okhttp(java.util.List)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)
com.google.android.gms.internal.common.zzx: com.google.android.gms.internal.common.zzx zzc(com.google.android.gms.internal.common.zzo)
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: java.lang.String redact()
com.google.android.material.appbar.AppBarLayout: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeBackground()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
retrofit2.BuiltInConverters$RequestBodyConverter: java.lang.Object convert(java.lang.Object)
okhttp3.Cache: int networkCount()
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: Http1ExchangeCodec$FixedLengthSource(okhttp3.internal.http1.Http1ExchangeCodec,long)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.bumptech.glide.manager.LifecycleLifecycle: void onStart(androidx.lifecycle.LifecycleOwner)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.charging.animation.mobile.battery.activity.policy.PolicyViewModel: PolicyViewModel()
androidx.work.Data: Data()
com.google.android.material.search.SearchBar: int getDefaultMarginVerticalResource()
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
okhttp3.internal.http2.Http2Connection: void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.Headers$Companion: void checkValue(java.lang.String,java.lang.String)
com.charging.animation.mobile.battery.activity.base.BaseActivity: BaseActivity()
retrofit2.Retrofit: java.util.List callAdapterFactories()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
okhttp3.Cache: void delete()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginBottom(int)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response)
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
okhttp3.Cache: void remove$okhttp(okhttp3.Request)
retrofit2.Response: retrofit2.Response success(int,java.lang.Object)
retrofit2.ServiceMethod: retrofit2.ServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void close()
okhttp3.internal.http2.Hpack$Writer: void resizeHeaderTable(int)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.cache.DiskLruCache$Entry: okio.Source newSource(int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
okhttp3.internal.connection.Exchange: okio.Sink createRequestBody(okhttp3.Request,boolean)
retrofit2.HttpException: HttpException(retrofit2.Response)
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
okio.Options$Companion: Options$Companion()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: Http2Connection$pushDataLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
okio.Timeout: boolean hasDeadline()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
okhttp3.logging.HttpLoggingInterceptor: boolean bodyHasUnknownEncoding(okhttp3.Headers)
okhttp3.OkHttpClient$Builder: void setFollowRedirects$okhttp(boolean)
android.support.v4.app.INotificationSideChannel$Default: INotificationSideChannel$Default()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.google.android.material.search.SearchView: void setVisible(boolean)
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
okhttp3.internal.http2.Http2Connection$Companion: okhttp3.internal.http2.Settings getDEFAULT_SETTINGS()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.Dispatcher: void setMaxRequests(int)
okhttp3.internal.Util: void assertThreadDoesntHoldLock(java.lang.Object)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp()
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.constraintlayout.motion.widget.KeyPosition: KeyPosition()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
okhttp3.OkHttpClient$Builder: void setMinWebSocketMessageToCompress$okhttp(long)
com.bumptech.glide.manager.LifecycleLifecycle: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
okhttp3.Address: javax.net.SocketFactory socketFactory()
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
okhttp3.internal.platform.Platform$Companion: boolean isOpenJSSEPreferred()
okhttp3.CacheControl: boolean -deprecated_immutable()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.google.android.gms.internal.common.zzag: java.lang.Object set(int,java.lang.Object)
okhttp3.ConnectionSpec: java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec)
okhttp3.internal.platform.android.AndroidLogHandler: void flush()
okhttp3.internal.http2.Settings$Companion: Settings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object access$awaitFrameSlowPath(kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
android.support.v4.os.IResultReceiver2$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.google.android.gms.internal.common.zzl: boolean zza(char)
androidx.work.ListenableWorker$Result$Success: ListenableWorker$Result$Success()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okhttp3.Headers$Companion: Headers$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.Timeout: void throwIfReached()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.chip.Chip: float getTextStartPadding()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_CONNECTION_SPECS$cp()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
retrofit2.BuiltInConverters: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTint(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.time.Instant)
okhttp3.CacheControl: java.lang.String toString()
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: long runOnce()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
retrofit2.Response: boolean isSuccessful()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: DiskLruCache$newJournalWriter$faultHidingSink$1(okhttp3.internal.cache.DiskLruCache)
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
okhttp3.Address: java.util.List connectionSpecs()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion()
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_MILLIS$cp()
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion()
okhttp3.HttpUrl: java.util.List encodedPathSegments()
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalBias(float)
okhttp3.internal.connection.Exchange$RequestBodySink: java.io.IOException complete(java.io.IOException)
okhttp3.Cookie: boolean -deprecated_hostOnly()
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.recyclerview.widget.GapWorker: GapWorker()
com.google.android.gms.internal.common.zzaf: boolean zzf()
com.charging.animation.mobile.battery.App: App()
okhttp3.Response$Builder: void setSentRequestAtMillis$okhttp(long)
okhttp3.logging.LoggingEventListener: void callEnd(okhttp3.Call)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
retrofit2.converter.moshi.MoshiConverterFactory: java.util.Set jsonAnnotations(java.lang.annotation.Annotation[])
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
okhttp3.HttpUrl: int port()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
okhttp3.Handshake$peerCertificates$2: java.util.List invoke()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAnimationDuration(long)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.internal.tasks.zza: zza(android.os.Looper)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
okhttp3.OkHttpClient$Builder: java.util.List getConnectionSpecs$okhttp()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
okhttp3.Request: boolean isHttps()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginEnd(int)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
com.google.android.gms.internal.common.zzt: int zzd(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
okhttp3.HttpUrl: java.lang.String encodedPath()
okhttp3.internal.connection.RealConnectionPool$Companion: okhttp3.internal.connection.RealConnectionPool get(okhttp3.ConnectionPool)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
retrofit2.Utils$GenericArrayTypeImpl: java.lang.String toString()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: void close()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
retrofit2.DefaultCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
okhttp3.HttpUrl$Builder$Companion: int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.Response$Builder: void initExchange$okhttp(okhttp3.internal.connection.Exchange)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
okhttp3.Cookie: java.lang.String path()
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long runOnce()
android.support.v4.os.IResultReceiver$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String getSceneString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
okhttp3.internal.cache.DiskLruCache: long size()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
com.google.android.gms.internal.common.zzag: boolean contains(java.lang.Object)
com.bumptech.glide.TransitionOptions: TransitionOptions()
okhttp3.logging.LoggingEventListener: void secureConnectStart(okhttp3.Call)
okhttp3.Cache: void update$okhttp(okhttp3.Response,okhttp3.Response)
retrofit2.ParameterHandler: retrofit2.ParameterHandler array()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: Http1ExchangeCodec$AbstractSource(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
retrofit2.HttpServiceMethod$SuspendForResponse: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.Cache: long size()
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnectionToCancel()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
okhttp3.HttpUrl: HttpUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String)
kotlin.internal.PlatformImplementations: PlatformImplementations()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
okhttp3.CacheControl: <clinit>()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
okhttp3.internal.platform.Android10Platform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
okio.AsyncTimeout: void access$setTimeoutAt$p(okio.AsyncTimeout,long)
com.charging.animation.mobile.battery.api.Api: retrofit2.Call getAll(java.lang.String)
retrofit2.RequestBuilder: void addPart(okhttp3.MultipartBody$Part)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
okhttp3.internal.http2.Http2Connection: void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean isSupported()
retrofit2.Call: retrofit2.Response execute()
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
pl.droidsonroids.gif.GifImageView: GifImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
okhttp3.OkHttpClient$Builder: int getWriteTimeout$okhttp()
okhttp3.internal.connection.RealConnection: void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: OkHttpClient$Builder$addNetworkInterceptor$2(kotlin.jvm.functions.Function1)
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: <clinit>()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
okhttp3.internal.http.RealInterceptorChain: int getWriteTimeoutMillis$okhttp()
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor()
okhttp3.internal.connection.Exchange: void noRequestBody()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.gms.internal.common.zzak: zzak()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: int hashCode()
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.util.Map)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
okhttp3.logging.HttpLoggingInterceptor$Level: HttpLoggingInterceptor$Level(java.lang.String,int)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,java.lang.String,int,int,int,java.lang.Object)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,okhttp3.MultipartBody$Part)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
okhttp3.internal.connection.RealConnection: void setNoNewExchanges(boolean)
okhttp3.logging.LoggingEventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
okhttp3.OkHttpClient$Builder: void setDispatcher$okhttp(okhttp3.Dispatcher)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.material.button.MaterialButton: int getIconSize()
com.charging.animation.mobile.battery.service.BatteryService: BatteryService()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.card.MaterialCardView: float getProgress()
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
pl.droidsonroids.gif.GifInfoHandle: void setLoopCount(long,char)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method component2()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getZombie$okhttp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
okhttp3.internal.Util: boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl)
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.internal.http2.Http2Connection: void setLastGoodStreamId$okhttp(int)
okhttp3.internal.http2.Http2Reader: <clinit>()
okhttp3.Request$Builder: okhttp3.Request$Builder head()
android.support.v4.os.IResultReceiver2$Default: void send(int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
okhttp3.ConnectionPool: int connectionCount()
androidx.constraintlayout.motion.widget.MotionLayout: void setStartState(int)
okhttp3.internal.Util$threadFactory$1: Util$threadFactory$1(java.lang.String,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addNetworkInterceptor(kotlin.jvm.functions.Function1)
okhttp3.internal.connection.RealConnection$connectTls$1: RealConnection$connectTls$1(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address)
okhttp3.internal.http.ExchangeCodec: long reportedContentLength(okhttp3.Response)
retrofit2.HttpException: retrofit2.Response response()
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: void invoke(java.lang.Throwable)
android.support.v4.os.IResultReceiver$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
okhttp3.internal.connection.RealCall: boolean isExecuted()
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleGravity()
okhttp3.Cache: void close()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.ripple.RippleUtils: RippleUtils()
okhttp3.internal.platform.android.ConscryptSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Headers$Companion: Headers$Companion()
pl.droidsonroids.gif.GifInfoHandle: int getCurrentFrameIndex(long)
okhttp3.internal.ws.MessageInflater: void close()
okhttp3.WebSocket: boolean send(okio.ByteString)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
okio.ForwardingSource: void close()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
com.google.android.gms.internal.common.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionListener(androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
retrofit2.Retrofit: retrofit2.CallAdapter callAdapter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.gms.internal.common.zzc: void zze(android.os.Parcel,android.os.Parcelable)
okhttp3.OkHttpClient: <clinit>()
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
android.support.v4.os.IResultReceiver2$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
okhttp3.ResponseBody: long contentLength()
okhttp3.CookieJar$Companion$NoCookies: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.HttpUrl$Companion: void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
retrofit2.HttpServiceMethod: HttpServiceMethod(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void flush()
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion()
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType contentType()
retrofit2.Retrofit: void validateServiceInterface(java.lang.Class)
okhttp3.internal.concurrent.TaskQueue: boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getPercentage()
okhttp3.Route: java.net.InetSocketAddress -deprecated_socketAddress()
okhttp3.internal.http1.Http1ExchangeCodec: void flushRequest()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: Http1ExchangeCodec$ChunkedSource(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
okhttp3.HttpUrl$Builder: void setEncodedUsername$okhttp(java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers()
retrofit2.HttpServiceMethod$SuspendForBody: HttpServiceMethod$SuspendForBody(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressBarColorDirection(com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection)
com.google.android.material.appbar.CollapsingToolbarLayout: long getScrimAnimationDuration()
okhttp3.internal.http1.HeadersReader: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.CollapsingToolbarLayout: float getCollapsedTitleTextSize()
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.lang.String -deprecated_fragment()
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
retrofit2.Platform$Android$MainThreadExecutor: Platform$Android$MainThreadExecutor()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: StandardAndroidSocketAdapter(java.lang.Class,java.lang.Class,java.lang.Class)
okhttp3.internal.Util: long headersContentLength(okhttp3.Response)
retrofit2.BuiltInConverters$RequestBodyConverter: okhttp3.RequestBody convert(okhttp3.RequestBody)
okhttp3.internal.http2.Http2Connection: void writeHeaders$okhttp(int,boolean,java.util.List)
okio.ForwardingSink: ForwardingSink(okio.Sink)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
retrofit2.BuiltInConverters$ToStringConverter: java.lang.String convert(java.lang.Object)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,java.lang.String,int,int)
okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
retrofit2.http.Query: java.lang.String value()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: <clinit>()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
retrofit2.OptionalConverterFactory$OptionalConverter: OptionalConverterFactory$OptionalConverter(retrofit2.Converter)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
okhttp3.HttpUrl: java.util.List -deprecated_pathSegments()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.logging.LoggingEventListener: void requestHeadersStart(okhttp3.Call)
okhttp3.internal.concurrent.TaskQueue: void setShutdown$okhttp(boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink getSink()
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
okhttp3.logging.LoggingEventListener: void requestBodyEnd(okhttp3.Call,long)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: OkHttpCall$ExceptionCatchingResponseBody(okhttp3.ResponseBody)
okhttp3.OkHttpClient: void verifyClientState()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: long runOnce()
com.charging.animation.mobile.battery.activity.base.BaseViewModel: BaseViewModel()
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.ErrorCode$Companion: okhttp3.internal.http2.ErrorCode fromHttp2(int)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
retrofit2.KotlinExtensions$await$2$2: KotlinExtensions$await$2$2(kotlinx.coroutines.CancellableContinuation)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: Http1ExchangeCodec$ChunkedSink(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)
com.charging.animation.mobile.battery.activity.info.fragment.mobile.MobileViewModel: MobileViewModel()
okhttp3.internal.http2.Header: okio.ByteString component1()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.internal.connection.RealConnectionPool: boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
okhttp3.Response: java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object)
com.google.android.gms.internal.common.zza: android.os.IBinder asBinder()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request getRequest$okhttp()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: HardwareConfigState()
okhttp3.Interceptor$Companion$invoke$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
okhttp3.MultipartReader$Companion: MultipartReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzj(java.lang.Iterable)
okhttp3.internal.platform.android.AndroidLogHandler: void publish(java.util.logging.LogRecord)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory -deprecated_eventListenerFactory()
okhttp3.internal.http2.Http2Reader$Companion: int lengthWithoutPadding(int,int,int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setHyphenationFrequency(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
okhttp3.internal.Util: boolean isHealthy(java.net.Socket,okio.BufferedSource)
retrofit2.OptionalConverterFactory: OptionalConverterFactory()
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader getReader$okhttp()
okhttp3.internal.http2.Http2Connection$Builder: boolean getClient$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
retrofit2.converter.moshi.MoshiRequestBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
okhttp3.internal.cache.DiskLruCache: void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
okhttp3.internal.http2.Http2Reader$Companion: java.util.logging.Logger getLogger()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Request: java.lang.String method()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
okhttp3.internal.Util: boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File)
retrofit2.http.PUT: java.lang.String value()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
okhttp3.logging.HttpLoggingInterceptor$Level: <clinit>()
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
retrofit2.KotlinExtensions$await$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion$default(okhttp3.internal.platform.ConscryptPlatform$Companion,int,int,int,int,java.lang.Object)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
okhttp3.Cookie$Builder: okhttp3.Cookie build()
retrofit2.OkHttpCall: retrofit2.OkHttpCall clone()
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: void set(java.lang.Object)
okhttp3.internal.concurrent.TaskRunner: TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp()
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
kotlin.text.Charsets: Charsets()
com.google.android.gms.internal.common.zzai: java.lang.Object[] zzg()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: <clinit>()
okhttp3.internal.connection.Exchange$ResponseBodySource: long read(okio.Buffer,long)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
okhttp3.internal.http2.Http2ExchangeCodec: void flushRequest()
androidx.work.ContentUriTriggers: ContentUriTriggers()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.Authenticator$Companion$AuthenticatorNone: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.google.android.gms.internal.common.zzx: java.lang.Iterable zzd(java.lang.CharSequence)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundProgressBarWidth(float)
com.google.android.gms.internal.common.zzv: java.lang.String toString()
android.support.v4.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
okhttp3.RequestBody$Companion$toRequestBody$1: void writeTo(okio.BufferedSink)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
com.charging.animation.mobile.battery.fragment.gallery.GalleryFragment: GalleryFragment()
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
okhttp3.Handshake$Companion$handshake$1: java.lang.Object invoke()
okhttp3.internal.concurrent.TaskQueue: java.util.List getFutureTasks$okhttp()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.google.android.gms.internal.common.zzac: boolean retainAll(java.util.Collection)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
okhttp3.internal.http.RealInterceptorChain: int getConnectTimeoutMillis$okhttp()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] getWritten$okhttp()
com.charging.animation.mobile.battery.fragment.home.HomeViewModel: HomeViewModel()
androidx.emoji2.text.MetadataRepo$Node: MetadataRepo$Node()
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: CompletableFutureCallAdapterFactory$CallCancelCompletableFuture(retrofit2.Call)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)
okhttp3.internal.platform.android.AndroidSocketAdapter: <clinit>()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressBarWidth(float)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
com.google.android.gms.internal.common.zzai: int zzc()
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.Void invalidLengths(java.util.List)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.gms.internal.common.zzag: java.util.ListIterator listIterator(int)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
okhttp3.internal.http.ExchangeCodec: void finishRequest()
retrofit2.RequestFactory$Builder: RequestFactory$Builder(retrofit2.Retrofit,java.lang.reflect.Method)
android.support.v4.os.IResultReceiver2$Stub: IResultReceiver2$Stub()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
okhttp3.logging.LoggingEventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
okhttp3.internal.concurrent.TaskRunner: void beforeRun(okhttp3.internal.concurrent.Task)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
okhttp3.internal.concurrent.TaskQueue: void shutdown()
okhttp3.HttpUrl: int -deprecated_port()
okhttp3.MultipartReader: java.lang.String boundary()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
okhttp3.internal.ws.WebSocketReader: void close()
androidx.constraintlayout.motion.widget.MotionLayout: java.util.ArrayList getDefinedTransitions()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
okhttp3.Cache: int writeSuccessCount()
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
okhttp3.MediaType: boolean equals(java.lang.Object)
okhttp3.internal.http2.Header: <clinit>()
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion()
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.converter.moshi.MoshiConverterFactory create(com.squareup.moshi.Moshi)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion()
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
okhttp3.ResponseBody: java.lang.String string()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
okhttp3.CookieJar: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback$lambda$6(kotlinx.coroutines.CancellableContinuation,long)
okhttp3.internal.platform.BouncyCastlePlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
retrofit2.ParameterHandler$RelativeUrl: ParameterHandler$RelativeUrl(java.lang.reflect.Method,int)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy computeCandidate()
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener create(okhttp3.Call)
android.support.v4.os.ResultReceiver$MyRunnable: ResultReceiver$MyRunnable(android.support.v4.os.ResultReceiver,int,android.os.Bundle)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.concurrent.TaskRunner: <clinit>()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.google.android.material.chip.Chip: void setMaxLines(int)
okhttp3.logging.HttpLoggingInterceptor: void redactHeader(java.lang.String)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.util.Map)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setOnProgressChangedListener(me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar$OnProgressChangedListener)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion()
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1(kotlin.coroutines.Continuation,java.lang.Exception)
okhttp3.internal.cache2.Relay: void setComplete(boolean)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
okhttp3.internal.connection.RouteSelector: okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.gms.internal.common.zzag: void add(int,java.lang.Object)
android.support.v4.os.ResultReceiver$MyRunnable: void run()
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
okhttp3.Request: java.lang.String header(java.lang.String)
com.google.android.gms.internal.common.zzi: zzi(android.os.Looper)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: void close()
com.charging.animation.mobile.battery.receiver.HighReceiver: HighReceiver()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.charging.animation.mobile.battery.activity.language.LanguageViewModel: LanguageViewModel()
okhttp3.MultipartBody$Part: okhttp3.Headers -deprecated_headers()
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.constraintlayout.motion.widget.MotionLayout: int getEndState()
okhttp3.Cache: void initialize()
okhttp3.internal.ws.MessageDeflater: boolean endsWith(okio.Buffer,okio.ByteString)
okhttp3.internal.connection.RealCall: okhttp3.Request request()
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Headers trailers()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.google.android.gms.internal.common.zzaa: zzaa(int)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
okhttp3.Cache$Entry: boolean isHttps()
com.google.android.gms.internal.common.zzak: void add(java.lang.Object)
retrofit2.Platform$Android: Platform$Android()
retrofit2.ParameterHandler$Field: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
retrofit2.BuiltInConverters$ToStringConverter: <clinit>()
okhttp3.HttpUrl: java.lang.String toString()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.charging.animation.mobile.battery.activity.ring.RingtoneActivity: RingtoneActivity()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp()
com.google.android.gms.internal.common.zzai: int zzb()
okhttp3.Cache$RealCacheRequest: boolean getDone()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void delete(java.io.File)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.constraintlayout.motion.widget.MotionLayout: void setInterpolatedProgress(float)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: long runOnce()
okhttp3.internal.connection.RealConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
retrofit2.http.HEAD: java.lang.String value()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.Cache)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: <clinit>()
okhttp3.Headers$Companion: void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String)
retrofit2.converter.moshi.MoshiConverterFactory: MoshiConverterFactory(com.squareup.moshi.Moshi,boolean,boolean,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
com.google.android.gms.internal.common.zzx: java.util.Iterator zzh(java.lang.CharSequence)
com.google.android.gms.internal.common.zzac: <clinit>()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection: void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite init(java.lang.String,int)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.Timeout timeout()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.bumptech.glide.load.Options: Options()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReceiveBuffer()
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,int,java.lang.String,java.lang.Object[])
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean)
com.mikhaellopez.circularprogressbar.CircularProgressBar: java.lang.Integer getProgressBarColorEnd()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.play.core.review.internal.zzc: zzc()
okhttp3.internal.ws.RealWebSocket$Message: int getFormatOpcode()
retrofit2.CallAdapter: java.lang.Object adapt(retrofit2.Call)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
okhttp3.internal.cache.FaultHidingSink: void flush()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.gms.internal.common.zzt: int zzc(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.FormBody: int -deprecated_size()
com.google.android.gms.internal.common.zzx: java.util.List zzf(java.lang.CharSequence)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
okhttp3.internal.connection.RealCall: void callStart()
retrofit2.RequestBuilder: okhttp3.Request$Builder get()
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.Cookie$Companion: Cookie$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
okio.Timeout: long deadlineNanoTime()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
okhttp3.Challenge: java.lang.String realm()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.Handshake$Companion: okhttp3.Handshake -deprecated_get(javax.net.ssl.SSLSession)
okhttp3.Headers: int -deprecated_size()
androidx.viewpager2.widget.ViewPager2: ViewPager2(android.content.Context,android.util.AttributeSet)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient$Builder: void setCookieJar$okhttp(okhttp3.CookieJar)
okhttp3.ResponseBody$Companion: ResponseBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.lang.Object invoke()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)
retrofit2.Response: okhttp3.Headers headers()
retrofit2.Utils: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
retrofit2.http.Header: java.lang.String value()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
retrofit2.Retrofit: java.lang.Object create(java.lang.Class)
okhttp3.internal.cache.CacheStrategy: okhttp3.Request getNetworkRequest()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.mikhaellopez.circularprogressbar.CircularProgressBar: java.lang.Integer getBackgroundProgressBarColorStart()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)
okhttp3.CacheControl: int -deprecated_maxStaleSeconds()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
okhttp3.CookieJar$Companion$NoCookies: CookieJar$Companion$NoCookies()
okhttp3.internal.ws.RealWebSocket: java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route retryRoute()
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
com.google.android.gms.internal.common.zzag: int zza(java.lang.Object[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setFlags(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleEnabled(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
androidx.lifecycle.MutableLiveData: MutableLiveData()
okhttp3.MultipartReader: MultipartReader(okio.BufferedSource,java.lang.String)
okhttp3.Response: java.util.List challenges()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setBgColor(int)
okhttp3.FormBody: okhttp3.MediaType contentType()
okhttp3.internal.concurrent.TaskRunner$runnable$1: TaskRunner$runnable$1(okhttp3.internal.concurrent.TaskRunner)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
okhttp3.Response$Builder: void setBody$okhttp(okhttp3.ResponseBody)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLeft()
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.google.android.material.appbar.CollapsingToolbarLayout: java.lang.CharSequence getTitle()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch getLatch()
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.google.android.material.chip.Chip: void setChipTextResource(int)
okhttp3.internal.Util: boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[])
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.material.button.MaterialButton: void setPressed(boolean)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
okhttp3.CacheControl$Companion: int indexOfElement(java.lang.String,java.lang.String,int)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getSecondProgressColor()
okhttp3.internal.cache.DiskLruCache: void trimToSize()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
okhttp3.internal.connection.RealCall: okhttp3.Address createAddress(okhttp3.HttpUrl)
retrofit2.CallAdapter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
retrofit2.ParameterHandler$Part: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
okhttp3.FormBody$Builder: okhttp3.FormBody build()
okhttp3.internal.ws.WebSocketExtensions: boolean component5()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
com.charging.animation.mobile.battery.activity.splash.SplashActivity: SplashActivity()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool getConnectionPool()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
okhttp3.internal.platform.Platform: <clinit>()
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher getDispatcher$okhttp()
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.ResponseBody$Companion$asResponseBody$1: long contentLength()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: Jdk8WithJettyBootPlatform$AlpnProvider(java.util.List)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
okhttp3.Handshake$Companion$handshake$1: java.util.List invoke()
retrofit2.Retrofit$Builder: Retrofit$Builder()
okhttp3.internal.http1.Http1ExchangeCodec: long reportedContentLength(okhttp3.Response)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
okhttp3.MultipartReader: <clinit>()
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
retrofit2.HttpServiceMethod$SuspendForBody: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
okhttp3.internal.platform.android.CloseGuard: java.lang.Object createAndOpen(java.lang.String)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressDirection(com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection)
okhttp3.internal.http2.Http2Connection: boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onFailure$1(retrofit2.Callback,java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
retrofit2.SkipCallbackExecutorImpl: SkipCallbackExecutorImpl()
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class)
okhttp3.MultipartReader: void access$setCurrentPart$p(okhttp3.MultipartReader,okhttp3.MultipartReader$PartSource)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
okhttp3.internal.http.ExchangeCodec: void flushRequest()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.Retrofit: retrofit2.CallAdapter nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okhttp3.logging.LoggingEventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
okhttp3.internal.Internal: okhttp3.Response cacheGet(okhttp3.Cache,okhttp3.Request)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.charging.animation.mobile.battery.activity.main.MainViewModel: MainViewModel()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.charging.animation.mobile.battery.receiver.AnimationReceiver: AnimationReceiver()
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
okhttp3.Request: okhttp3.RequestBody -deprecated_body()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.Handshake: java.security.Principal peerPrincipal()
okhttp3.logging.HttpLoggingInterceptor: void level(okhttp3.logging.HttpLoggingInterceptor$Level)
okhttp3.MediaType: java.lang.String subtype()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
okhttp3.internal.http1.HeadersReader: okhttp3.Headers readHeaders()
okhttp3.Cache$RealCacheRequest$1: Cache$RealCacheRequest$1(okhttp3.Cache$RealCacheRequest,okio.Sink)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
okhttp3.Address: java.util.List -deprecated_protocols()
okhttp3.CacheControl: boolean noTransform()
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_authenticator()
androidx.constraintlayout.motion.widget.KeyTimeCycle: KeyTimeCycle()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressWithAnimation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
okhttp3.Response: boolean isSuccessful()
retrofit2.http.Part: java.lang.String value()
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
kotlin.jvm.internal.Lambda: Lambda(int)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: boolean matchesSocketFactory(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.Object adapt(retrofit2.Call)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
okio.ForwardingSource: okio.Source -deprecated_delegate()
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
okhttp3.TlsVersion$Companion: TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: float getRadius()
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy$default(okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex,javax.net.ssl.X509TrustManager,java.lang.reflect.Method,int,java.lang.Object)
retrofit2.RequestFactory$Builder: java.lang.Class boxIfPrimitive(java.lang.Class)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
okhttp3.Call: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
okhttp3.Call: boolean isExecuted()
com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection: com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
okhttp3.MultipartReader$Part: MultipartReader$Part(okhttp3.Headers,okio.BufferedSource)
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
android.support.v4.os.IResultReceiver2: <clinit>()
okhttp3.Cache: void flush()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
okhttp3.Address: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
com.charging.animation.mobile.battery.fragment.gallery.fragment.DownFragment: DownFragment()
okhttp3.internal.Util: java.util.List filterList(java.lang.Iterable,kotlin.jvm.functions.Function1)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: BouncyCastleSocketAdapter$Companion$factory$1()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
okhttp3.Response$Builder: long getReceivedResponseAtMillis$okhttp()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.OkHttpClient$Builder: void setCallTimeout$okhttp(int)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
okhttp3.ConnectionSpec$Builder: void setTls$okhttp(boolean)
retrofit2.OkHttpCall$NoContentResponseBody: OkHttpCall$NoContentResponseBody(okhttp3.MediaType,long)
okhttp3.MediaType: int hashCode()
okhttp3.logging.LoggingEventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setOpenSecondGradient(boolean)
retrofit2.Invocation: java.lang.reflect.Method method()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.OkHttpClient: java.util.List networkInterceptors()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
retrofit2.OkHttpCall: okhttp3.Call createRawCall()
okhttp3.CertificatePinner$Builder: java.util.List getPins()
okhttp3.Handshake: <clinit>()
okhttp3.CertificatePinner$Pin: okio.ByteString getHash()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_proxyAuthenticator()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
okhttp3.Response: okhttp3.Response cacheResponse()
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setPadding(int)
androidx.lifecycle.ViewModel: ViewModel()
okhttp3.internal.cache.DiskLruCache$snapshots$1: void remove()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
retrofit2.Invocation: java.util.List arguments()
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
okhttp3.internal.platform.android.AndroidLogHandler: <clinit>()
okhttp3.internal.http2.Http2Stream$FramingSource: void setClosed$okhttp(boolean)
okhttp3.internal.platform.ConscryptPlatform: <clinit>()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
com.charging.animation.mobile.battery.api.AdsModel: int getId()
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: long contentLength()
okhttp3.internal.connection.Exchange$RequestBodySink: Exchange$RequestBodySink(okhttp3.internal.connection.Exchange,okio.Sink,long)
okhttp3.internal.http.RetryAndFollowUpInterceptor: <clinit>()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
okhttp3.internal.ws.RealWebSocket: void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
retrofit2.RequestFactory$Builder: void parseHttpMethodAndPath(java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.common.zzaj: void remove()
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
okhttp3.MultipartBody: okhttp3.MediaType -deprecated_type()
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: RealConnection$newWebSocketStreams$1(okhttp3.internal.connection.Exchange,okio.BufferedSource,okio.BufferedSink,boolean,okio.BufferedSource,okio.BufferedSink)
okhttp3.internal.connection.RealConnection$connectTls$1: java.lang.Object invoke()
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
retrofit2.Utils$GenericArrayTypeImpl: boolean equals(java.lang.Object)
okhttp3.Cache: java.io.File directory()
android.support.v4.app.INotificationSideChannel: <clinit>()
retrofit2.Utils$ParameterizedTypeImpl: int hashCode()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: Http2Connection$pushRequestLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List)
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long runOnce()
okhttp3.Request: okhttp3.Request$Builder newBuilder()
okhttp3.internal.ws.RealWebSocket: long queueSize()
com.google.android.material.appbar.CollapsingToolbarLayout: int getTitleCollapseMode()
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
okhttp3.OkHttpClient: java.util.List -deprecated_networkInterceptors()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void enqueue(retrofit2.Callback)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec)
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,java.lang.Throwable,int,java.lang.String,java.lang.Object[])
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
okhttp3.logging.LoggingEventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
okhttp3.OkHttpClient: okhttp3.CookieJar -deprecated_cookieJar()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.search.SearchView: void setElevation(float)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
retrofit2.KotlinExtensions: java.lang.Object await(retrofit2.Call,kotlin.coroutines.Continuation)
okhttp3.internal.http2.Http2Connection$Builder: void setConnectionName$okhttp(java.lang.String)
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
retrofit2.ServiceMethod: java.lang.Object invoke(java.lang.Object[])
okhttp3.Headers$Companion: java.lang.String get(java.lang.String[],java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy compute()
okhttp3.ConnectionSpec: java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
retrofit2.Utils: java.lang.String typeToString(java.lang.reflect.Type)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: java.lang.Object get()
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okhttp3.ResponseBody: okio.BufferedSource source()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl$Builder: void setHost$okhttp(java.lang.String)
okhttp3.internal.platform.Platform: void access$setPlatform$cp(okhttp3.internal.platform.Platform)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.cache2.Relay: void setFile(java.io.RandomAccessFile)
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
okhttp3.internal.http2.Http2Connection: void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
pl.droidsonroids.gif.GifInfoHandle: int getNumberOfFrames(long)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.Timeout timeout()
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
kotlinx.coroutines.android.HandlerContext: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
okhttp3.CacheControl: boolean isPrivate()
okhttp3.internal.concurrent.TaskQueue: void schedule(java.lang.String,long,kotlin.jvm.functions.Function0)
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: long read(okio.Buffer,long)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.String formatDuration(long)
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: AbstractFuture$Waiter()
okhttp3.internal.connection.Exchange: void flushRequest()
retrofit2.converter.gson.GsonConverterFactory: GsonConverterFactory(com.google.gson.Gson)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
okhttp3.internal.http1.Http1ExchangeCodec: void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout)
com.google.android.gms.internal.common.zzai: zzai(java.lang.Object[],int)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void execute(java.lang.Runnable)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
okhttp3.internal.http1.HeadersReader: okio.BufferedSource getSource()
okhttp3.Headers: Headers(java.lang.String[])
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.authenticator.JavaNetAuthenticator: java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor(okhttp3.logging.HttpLoggingInterceptor$Logger)
okhttp3.Handshake$peerCertificates$2: Handshake$peerCertificates$2(kotlin.jvm.functions.Function0)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.material.chip.Chip: float getChipCornerRadius()
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Iterable)
com.bumptech.glide.request.RequestOptions: RequestOptions()
okhttp3.Request$Builder: okhttp3.Request build()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.constraintlayout.widget.R$id: R$id()
okhttp3.CertificatePinner$Pin: int hashCode()
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
okhttp3.MediaType: java.lang.String -deprecated_type()
okhttp3.internal.concurrent.TaskQueue: void execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
okhttp3.Cache: Cache(java.io.File,long)
okhttp3.internal.cache2.Relay: void setUpstreamPos(long)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.charging.animation.mobile.battery.activity.info.InfoViewModel: InfoViewModel()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: long runOnce()
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.internal.http1.Http1ExchangeCodec: void skipConnectBody(okhttp3.Response)
okhttp3.internal.http2.Http2Stream$FramingSink: void setTrailers(okhttp3.Headers)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
okhttp3.internal.ws.MessageDeflater: MessageDeflater(boolean)
okhttp3.Request: okhttp3.CacheControl -deprecated_cacheControl()
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: DiskLruCache$cleanupTask$1(okhttp3.internal.cache.DiskLruCache,java.lang.String)
retrofit2.OkHttpCall: java.lang.Object clone()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean isSupported()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
okhttp3.Response$Builder: void setMessage$okhttp(java.lang.String)
com.google.android.gms.internal.common.zzz: int nextIndex()
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher()
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
okhttp3.Handshake: java.util.List -deprecated_localCertificates()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.gms.internal.common.zzac: java.util.Iterator iterator()
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: <clinit>()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
android.support.v4.app.INotificationSideChannel$_Parcel: INotificationSideChannel$_Parcel()
androidx.constraintlayout.core.widgets.Barrier: Barrier()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
okhttp3.HttpUrl$Builder$Companion: int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.internal.concurrent.TaskQueue: boolean getShutdown$okhttp()
okhttp3.internal.connection.RealConnection: boolean routeMatchesAny(java.util.List)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
okhttp3.internal.concurrent.Task: java.lang.String toString()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.CertificatePinner$check$1: CertificatePinner$check$1(okhttp3.CertificatePinner,java.util.List,java.lang.String)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
okhttp3.internal.connection.RealCall: boolean getForWebSocket()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
okhttp3.EventListener: <clinit>()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
okhttp3.Dispatcher: Dispatcher()
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: long read(okio.Buffer,long)
okhttp3.internal.platform.android.AndroidLog: java.lang.String loggerTag(java.lang.String)
androidx.viewpager.widget.ViewPager: int getClientWidth()
okhttp3.HttpUrl: java.lang.String host()
okhttp3.Cookie$Builder: Cookie$Builder()
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
okhttp3.Request: java.lang.Object tag()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])
okhttp3.internal.cache2.Relay: void writeMetadata(long)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressBarColor(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.charging.animation.mobile.battery.api.AdsModel: void setName(java.lang.String)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
retrofit2.http.Field: java.lang.String value()
okhttp3.internal.platform.android.DeferredSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
com.google.android.material.appbar.CollapsingToolbarLayout: int getHyphenationFrequency()
okhttp3.OkHttpClient$Builder: java.net.Proxy getProxy$okhttp()
okhttp3.Request: okhttp3.CacheControl cacheControl()
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Http2ExchangeCodec: Http2ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection)
okhttp3.internal.cache2.Relay: long getUpstreamPos()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
okhttp3.internal.http.HttpMethod: <clinit>()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object getCallStackTrace()
okhttp3.Request: okhttp3.RequestBody body()
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
okhttp3.internal.concurrent.Task: java.lang.String getName()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
okhttp3.FormBody$Companion: FormBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.google.android.gms.internal.common.zzag: boolean equals(java.lang.Object)
com.google.android.gms.internal.common.zzag: java.lang.Object remove(int)
okhttp3.internal.cache.DiskLruCache: void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink)
okhttp3.CacheControl: int -deprecated_maxAgeSeconds()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.gms.internal.common.zzac: com.google.android.gms.internal.common.zzaj zze()
okhttp3.internal.http2.Header: okio.ByteString component2()
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString getReason()
okhttp3.internal.platform.OpenJSSEPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.gms.internal.common.zzad: zzad(int)
okhttp3.internal.ws.MessageInflater: MessageInflater(boolean)
okhttp3.internal.concurrent.TaskQueue: void execute(java.lang.String,long,boolean,kotlin.jvm.functions.Function0)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: long runOnce()
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
okhttp3.internal.platform.android.Android10SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
okhttp3.Headers: java.util.Set names()
okhttp3.Cache$Entry: <clinit>()
okhttp3.OkHttpClient: java.util.List connectionSpecs()
retrofit2.http.Query: boolean encoded()
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.internal.Util: int parseHexDigit(char)
okhttp3.EventListener: void cacheMiss(okhttp3.Call)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
retrofit2.Utils$WildcardTypeImpl: int hashCode()
okhttp3.Dispatcher: int queuedCallsCount()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
okhttp3.internal.http2.Http2Connection: int getNextStreamId$okhttp()
kotlin.KotlinNullPointerException: KotlinNullPointerException()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: void onReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.internal.http1.Http1ExchangeCodec: <clinit>()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.constraintlayout.widget.ConstraintSet$Layout: ConstraintSet$Layout()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
okhttp3.internal.connection.RealCall: okio.Timeout timeout()
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)
okhttp3.TlsVersion: java.lang.String -deprecated_javaName()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
retrofit2.CompletableFutureCallAdapterFactory: <clinit>()
okhttp3.internal.platform.android.AndroidLog: void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
okhttp3.internal.platform.BouncyCastlePlatform: <clinit>()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.http.HTTP: java.lang.String path()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar getCookieJar$okhttp()
okhttp3.MultipartReader: long access$currentPartBytesRemaining(okhttp3.MultipartReader,long)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
okhttp3.internal.platform.android.AndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.gson.internal.Excluder: Excluder()
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
okhttp3.RequestBody$Companion$toRequestBody$2: void writeTo(okio.BufferedSink)
okhttp3.internal.http2.Http2Connection: java.lang.String getConnectionName$okhttp()
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.gms.internal.common.zzai: java.lang.Object get(int)
com.google.android.gms.internal.common.zzag: java.util.ListIterator listIterator()
com.google.android.gms.internal.common.zzh: <clinit>()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
okhttp3.Cookie$Companion: boolean access$domainMatch(okhttp3.Cookie$Companion,java.lang.String,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType contentType()
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.internal.common.zzx: com.google.android.gms.internal.common.zzx zzb()
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
okhttp3.internal.http2.Settings: <clinit>()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
okhttp3.internal.http2.Settings: void clear()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
okhttp3.OkHttpClient: java.lang.Object clone()
com.google.android.gms.internal.common.zzae: zzae(com.google.android.gms.internal.common.zzag,int)
okhttp3.internal.http.DatesKt: java.util.Date toHttpDateOrNull(java.lang.String)
okhttp3.Call: void cancel()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
retrofit2.http.FieldMap: boolean encoded()
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
okhttp3.CacheControl: boolean immutable()
android.support.v4.app.INotificationSideChannel: void cancel(java.lang.String,int,java.lang.String)
okhttp3.logging.LoggingEventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
retrofit2.converter.gson.GsonRequestBodyConverter: <clinit>()
com.squareup.moshi.JsonAdapter: JsonAdapter()
okhttp3.internal.http.ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: CompletableFutureCallAdapterFactory$BodyCallAdapter(java.lang.reflect.Type)
com.charging.animation.mobile.battery.api.AdsModel: void setApp_id(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
okhttp3.CipherSuite: java.lang.String toString()
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
okhttp3.MultipartBody: <clinit>()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
okhttp3.Dispatcher: java.util.List runningCalls()
okhttp3.WebSocket: okhttp3.Request request()
okhttp3.Response: int code()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: Http2Connection$writeSynResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.work.ListenableWorker$Result: ListenableWorker$Result()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CallableReference: <clinit>()
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
okhttp3.OkHttpClient$Builder: java.util.List getNetworkInterceptors$okhttp()
retrofit2.converter.moshi.MoshiResponseBodyConverter: <clinit>()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getPadding()
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.gson.JsonObject: JsonObject()
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.google.gson.reflect.TypeToken: TypeToken()
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
okhttp3.internal.http2.Header$Companion: Header$Companion()
okhttp3.internal.connection.Exchange: void responseHeadersStart()
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
okhttp3.internal.ws.MessageDeflaterKt: <clinit>()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
retrofit2.RequestBuilder: void setRelativeUrl(java.lang.Object)
com.google.android.gms.internal.common.zzx: java.util.Iterator zze(com.google.android.gms.internal.common.zzx,java.lang.CharSequence)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
okhttp3.OkHttpClient$Builder: void setCache$okhttp(okhttp3.Cache)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.cardview.widget.CardView: float getCardElevation()
okhttp3.internal.connection.RealCall: okio.AsyncTimeout timeout()
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource source()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
okhttp3.internal.Util: java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
okhttp3.internal.cache.DiskLruCache: void close()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.RealCall: java.io.IOException noMoreExchanges$okhttp(java.io.IOException)
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String getAds_id()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setAnswerButtonColorHint(android.app.Notification$CallStyle,int)
retrofit2.RequestBuilder: void setBody(okhttp3.RequestBody)
android.support.v4.os.IResultReceiver$Stub$Proxy: IResultReceiver$Stub$Proxy(android.os.IBinder)
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.gms.internal.common.zzx: boolean zzg(com.google.android.gms.internal.common.zzx)
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
pl.droidsonroids.gif.GifInfoHandle: long restoreRemainder(long)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getSecondGradientFrom()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion()
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
retrofit2.ParameterHandler$RelativeUrl: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: void invoke(java.lang.Throwable)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
okhttp3.internal.proxy.NullProxySelector: <clinit>()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
okhttp3.Headers$Companion: void checkName(java.lang.String)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
okhttp3.internal.concurrent.TaskQueue: void setActiveTask$okhttp(okhttp3.internal.concurrent.Task)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
okhttp3.Response: okhttp3.Request request()
com.google.android.gms.internal.common.zzh: com.google.android.gms.internal.common.zze zza()
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
okhttp3.CacheControl$Builder: CacheControl$Builder()
okhttp3.CacheControl: boolean isPublic()
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
okhttp3.FormBody: int size()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
retrofit2.Converter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory()
okhttp3.MediaType: java.util.regex.Pattern access$getPARAMETER$cp()
okhttp3.internal.cache.DiskLruCache$Entry: long[] getLengths$okhttp()
android.support.v4.os.IResultReceiver2$Stub$Proxy: java.lang.String getInterfaceDescriptor()
okio.AsyncTimeout: void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout)
com.google.android.material.search.SearchBar: float getCompatElevation()
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: void close()
retrofit2.http.HTTP: boolean hasBody()
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,okhttp3.Headers)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionScene getScene()
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths$okhttp(okio.BufferedSink)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
com.google.android.material.datepicker.OnSelectionChangedListener: OnSelectionChangedListener()
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
com.charging.animation.mobile.battery.api.AdsModel: void setId(int)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
okhttp3.Route: boolean requiresTunnel()
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_parse(java.lang.String)
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
okhttp3.Response$Builder: okhttp3.Protocol getProtocol$okhttp()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource source()
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.text.DateFormat initialValue()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
com.charging.animation.mobile.battery.api.CommonAds: void logEvent(android.content.Context,java.lang.String)
com.google.android.gms.internal.common.zzu: zzu(com.google.android.gms.internal.common.zzo)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create()
com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection: com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection valueOf(java.lang.String)
retrofit2.Platform: int defaultConverterFactoriesSize()
okhttp3.internal.connection.RealCall: void enqueue(okhttp3.Callback)
okhttp3.internal.ws.RealWebSocket: <clinit>()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: long runOnce()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: Fragment()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.charging.animation.mobile.battery.api.CommonAds: <clinit>()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginEnd()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
okhttp3.MultipartBody$Part: <clinit>()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
okhttp3.Handshake: java.lang.String getName(java.security.cert.Certificate)
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
okio.Timeout: <clinit>()
com.google.android.gms.internal.common.zzw: int zzc(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
okhttp3.internal.concurrent.TaskQueue: boolean getCancelActiveTask$okhttp()
okhttp3.CertificatePinner$Pin: java.lang.String getPattern()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
com.google.android.material.appbar.CollapsingToolbarLayout: CollapsingToolbarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
okhttp3.internal.cache.DiskLruCache$Entry: void setZombie$okhttp(boolean)
retrofit2.ParameterHandler$Body: ParameterHandler$Body(java.lang.reflect.Method,int,retrofit2.Converter)
retrofit2.RequestBuilder: void addFormField(java.lang.String,java.lang.String,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
okhttp3.logging.HttpLoggingInterceptor$Logger: void log(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.Object get()
okhttp3.Handshake: java.security.Principal -deprecated_peerPrincipal()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
retrofit2.Retrofit: Retrofit(okhttp3.Call$Factory,okhttp3.HttpUrl,java.util.List,java.util.List,java.util.concurrent.Executor,boolean)
okhttp3.OkHttpClient$Builder: java.util.List getInterceptors$okhttp()
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
okio.Timeout: Timeout()
androidx.cardview.widget.CardView: void setCardElevation(float)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLength(int)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setShowMode(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
com.charging.animation.mobile.battery.fragment.setting.SettingViewModel: SettingViewModel()
com.google.android.material.appbar.CollapsingToolbarLayout: android.animation.TimeInterpolator getTitlePositionInterpolator()
okhttp3.CookieJar$Companion$NoCookies: java.util.List loadForRequest(okhttp3.HttpUrl)
retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)
okhttp3.OkHttpClient: okhttp3.Cache -deprecated_cache()
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame$okhttp()
androidx.constraintlayout.motion.utils.ViewSpline: ViewSpline()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
okhttp3.ConnectionSpec$Builder: boolean getSupportsTlsExtensions$okhttp()
okhttp3.internal.http2.Http2: java.lang.String formattedType$okhttp(int)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setLineSpacingAdd(float)
okhttp3.internal.http2.Http2Connection: void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
okhttp3.HttpUrl: java.lang.String fragment()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.android.material.internal.FlowLayout: int getRowCount()
okhttp3.HttpUrl: java.net.URI uri()
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall getCall$okhttp()
retrofit2.RequestBuilder: void addHeaders(okhttp3.Headers)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.constraintlayout.motion.widget.MotionLayout: int getStartState()
okhttp3.OkHttpClient$Builder: void setProxy$okhttp(java.net.Proxy)
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
okhttp3.CertificatePinner: void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0)
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
android.support.v4.os.ResultReceiver$1: ResultReceiver$1()
okio.AsyncTimeout: void timedOut()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forOngoingCall(android.app.Person,android.app.PendingIntent)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.search.SearchBar: float getStrokeWidth()
com.bumptech.glide.load.engine.LockedResource: LockedResource()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[])
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(int)
okhttp3.internal.connection.RealCall: java.io.IOException timeoutExit(java.io.IOException)
retrofit2.RequestBuilder: void addTag(java.lang.Class,java.lang.Object)
okhttp3.CacheControl$Companion: int indexOfElement$default(okhttp3.CacheControl$Companion,java.lang.String,java.lang.String,int,int,java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.squareup.moshi.LinkedHashTreeMap: LinkedHashTreeMap()
okhttp3.CacheControl: int -deprecated_sMaxAgeSeconds()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Headers: Headers(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.search.SearchView: float getOverlayElevation()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
okhttp3.internal.HostnamesKt: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.BufferedSource,okhttp3.MediaType,long,int,java.lang.Object)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setStartAngle(float)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
okhttp3.internal.Util$asFactory$1: Util$asFactory$1(okhttp3.EventListener)
okhttp3.internal.concurrent.TaskRunner: void cancelAll()
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
okhttp3.internal.http1.HeadersReader: java.lang.String readLine()
okhttp3.Request$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
okhttp3.Cache: int getWriteAbortCount$okhttp()
okhttp3.Response: okhttp3.CacheControl cacheControl()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
okhttp3.Cookie$Companion: Cookie$Companion()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
okhttp3.OkHttpClient$Builder: boolean getRetryOnConnectionFailure$okhttp()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
okhttp3.internal.http2.Http2Stream: void waitForIo$okhttp()
okhttp3.internal.HostnamesKt: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
okhttp3.internal.connection.RealConnectionPool: <clinit>()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getProgressColor()
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: void ignoreIoExceptions(kotlin.jvm.functions.Function0)
okhttp3.internal.platform.android.AndroidLog: AndroidLog()
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
okhttp3.internal.connection.ExchangeFinder: ExchangeFinder(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener)
retrofit2.OkHttpCall: okhttp3.Call getRawCall()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String getSelected()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
retrofit2.Utils: okhttp3.ResponseBody buffer(okhttp3.ResponseBody)
retrofit2.Utils: java.lang.Class getRawType(java.lang.reflect.Type)
okhttp3.Cookie: <clinit>()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp()
okhttp3.Response$Builder: java.lang.String getMessage$okhttp()
com.charging.animation.mobile.battery.activity.success.SuccessViewModel: SuccessViewModel()
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
okhttp3.internal.cache.DiskLruCache$Entry: int getLockingSourceCount$okhttp()
okhttp3.Challenge: java.lang.String -deprecated_scheme()
okhttp3.MultipartBody: okhttp3.MediaType contentType()
okhttp3.internal.connection.RealConnection: void noCoalescedConnections$okhttp()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()
okhttp3.MultipartReader: okio.BufferedSource access$getSource$p(okhttp3.MultipartReader)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setProgressColor(int)
com.google.android.gms.internal.common.zzl: java.lang.String toString()
okhttp3.CipherSuite$Companion: java.lang.String secondaryName(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: RequestBuilder$ContentTypeOverridingRequestBody(okhttp3.RequestBody,okhttp3.MediaType)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver getPushObserver$okhttp()
com.google.android.gms.internal.common.zzw: java.lang.Object zza()
okhttp3.internal.ws.WebSocketExtensions: int hashCode()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp()
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.common.zzc: void zzb(android.os.Parcel)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater$okhttp(int,long)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPassword()
okhttp3.internal.http2.Http2Stream: void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
okhttp3.Headers: java.lang.String value(int)
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource getSource()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String)
okhttp3.Cache: int writeAbortCount()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
retrofit2.Utils: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket getSocket$okhttp()
retrofit2.Call: retrofit2.Call clone()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean getUnsupported()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
okhttp3.Response$Builder: void setPriorResponse$okhttp(okhttp3.Response)
com.google.android.gms.internal.common.zzv: zzv(com.google.android.gms.internal.common.zzx,java.lang.CharSequence)
okhttp3.OkHttpClient$Builder: void setCertificatePinner$okhttp(okhttp3.CertificatePinner)
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.OkHttpClient$Builder: int getPingInterval$okhttp()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
com.charging.animation.mobile.battery.fragment.home.listener.Listener: Listener()
okhttp3.internal.platform.Android10Platform$Companion: boolean isSupported()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
com.google.android.gms.internal.common.zza: android.os.Parcel zza()
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType contentType()
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
retrofit2.RequestFactory$Builder: void validateResolvableType(int,java.lang.reflect.Type)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int)
okhttp3.Handshake$Companion: Handshake$Companion()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource getSource$okhttp()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
okhttp3.internal.cache.DiskLruCache: boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
okhttp3.Request: okhttp3.HttpUrl -deprecated_url()
okhttp3.internal.http2.Http2Connection: void setPeerSettings(okhttp3.internal.http2.Settings)
okhttp3.internal.connection.Exchange$ResponseBodySource: Exchange$ResponseBodySource(okhttp3.internal.connection.Exchange,okio.Source,long)
okhttp3.logging.LoggingEventListener: void responseBodyStart(okhttp3.Call)
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okhttp3.RequestBody: boolean isOneShot()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.viewpager2.widget.ViewPager2: int getPageSize()
com.google.gson.internal.$Gson$Types: $Gson$Types()
pl.droidsonroids.gif.GifInfoHandle: int getCurrentPosition(long)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.gms.internal.common.zzag: java.util.Iterator iterator()
com.bumptech.glide.request.BaseRequestOptions: BaseRequestOptions()
pl.droidsonroids.gif.GifImageView: void setImageResource(int)
androidx.constraintlayout.motion.widget.MotionLayout: void setScene(androidx.constraintlayout.motion.widget.MotionScene)
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: int pingIntervalMillis()
okhttp3.Headers: java.lang.String toString()
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
androidx.core.os.BundleCompat$Api33Impl: java.io.Serializable getSerializable(android.os.Bundle,java.lang.String,java.lang.Class)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
okhttp3.internal.ws.RealWebSocket: void access$setName$p(okhttp3.internal.ws.RealWebSocket,java.lang.String)
com.google.android.material.search.SearchView: android.text.Editable getText()
androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate: ViewTimeCycle$PathRotate()
okhttp3.ConnectionPool: ConnectionPool()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
okhttp3.Authenticator$Companion: Authenticator$Companion()
eightbitlab.com.blurview.BlurView: eightbitlab.com.blurview.BlurAlgorithm getBlurAlgorithm()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
okhttp3.ResponseBody: okio.ByteString byteString()
okhttp3.OkHttpClient: int -deprecated_readTimeoutMillis()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgress(float)
pl.droidsonroids.gif.GifInfoHandle: int getCurrentLoop(long)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
okhttp3.ConnectionSpec: void apply$okhttp(javax.net.ssl.SSLSocket,boolean)
retrofit2.RequestFactory$Builder: java.util.Set parsePathParameters(java.lang.String)
okhttp3.logging.LoggingEventListener: void responseFailed(okhttp3.Call,java.io.IOException)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.Cache: void trackConditionalCacheHit$okhttp()
retrofit2.http.QueryName: boolean encoded()
okhttp3.internal.ws.RealWebSocket$connect$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
okhttp3.internal.platform.Jdk9Platform: <clinit>()
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Response)
okhttp3.internal.cache2.Relay: java.lang.Thread getUpstreamReader()
okhttp3.internal.connection.Exchange: void finishRequest()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
okhttp3.MultipartReader$PartSource: okio.Timeout timeout()
kotlin.jvm.internal.PropertyReference: int hashCode()
okhttp3.Cookie: boolean -deprecated_persistent()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
okhttp3.Response: java.lang.String message()
okhttp3.internal.cache.DiskLruCache: boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List splitDomain(java.lang.String)
okhttp3.HttpUrl: java.lang.String -deprecated_scheme()
okhttp3.OkHttp: <clinit>()
okhttp3.OkHttpClient: java.net.ProxySelector -deprecated_proxySelector()
okhttp3.internal.cache2.Relay: boolean getComplete()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
okhttp3.Request: java.lang.String -deprecated_method()
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp()
okhttp3.RequestBody$Companion$asRequestBody$1: void writeTo(okio.BufferedSink)
okhttp3.Headers: java.util.Map toMultimap()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
retrofit2.converter.moshi.MoshiResponseBodyConverter: java.lang.Object convert(java.lang.Object)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
okhttp3.OkHttpClient: boolean -deprecated_followRedirects()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
okhttp3.EventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient$Builder: void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
okhttp3.internal.connection.RealCall: boolean isCanceled()
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextSize(float)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
retrofit2.Call: okio.Timeout timeout()
com.google.android.gms.internal.common.zzaf: int zzb()
okhttp3.internal.concurrent.TaskQueue: java.util.List getScheduledTasks()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
okhttp3.internal.http2.Http2Connection: void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion()
okhttp3.CipherSuite$Companion: CipherSuite$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.dynamicanimation.animation.AnimationHandler: AnimationHandler()
okhttp3.internal.connection.Exchange: java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException)
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: void close()
okhttp3.RequestBody$Companion$toRequestBody$1: RequestBody$Companion$toRequestBody$1(okio.ByteString,okhttp3.MediaType)
okhttp3.internal.cache.DiskLruCache: boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache)
kotlin.jvm.internal.CallableReference: boolean isOpen()
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.connection.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressIndeterminateMode(float)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
okhttp3.Response: okhttp3.Response networkResponse()
okhttp3.internal.platform.android.ConscryptSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.fragment.app.FragmentManager: FragmentManager()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.google.android.gms.internal.common.zzx: zzx(com.google.android.gms.internal.common.zzu,boolean,com.google.android.gms.internal.common.zzo,int,byte[])
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.appcompat.widget.SearchView: int getImeOptions()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
android.support.v4.app.INotificationSideChannel$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
retrofit2.Utils: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
okhttp3.Headers: java.time.Instant getInstant(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.internal.platform.AndroidPlatform: <clinit>()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
androidx.work.ListenableWorker$Result$Failure: ListenableWorker$Result$Failure()
okhttp3.internal.http2.Http2Connection: long getWriteBytesMaximum()
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
okhttp3.internal.cache.CacheInterceptor: <clinit>()
okhttp3.Response: okhttp3.Response$Builder newBuilder()
okhttp3.internal.http2.Http2Connection: void close()
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.RequestBody convert(java.lang.Object)
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
okhttp3.internal.platform.android.CloseGuard: CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
retrofit2.Call: void enqueue(retrofit2.Callback)
retrofit2.BuiltInConverters: BuiltInConverters()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
okhttp3.Cookie$Companion: long parseMaxAge(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
okhttp3.HttpUrl: int querySize()
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot next()
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.constraintlayout.motion.widget.MotionLayout: int[] getConstraintSetIds()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange)
okhttp3.internal.connection.RealConnection: boolean getNoNewExchanges()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: Http2Connection$ReaderRunnable$settings$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
okhttp3.HttpUrl: java.lang.String -deprecated_query()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
retrofit2.OkHttpCall: void cancel()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
okhttp3.internal.http2.Http2: <clinit>()
okhttp3.WebSocket: void cancel()
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.OkHttpClient: okhttp3.Dns -deprecated_dns()
okhttp3.internal.cache.DiskLruCache: void access$setInitialized$p(okhttp3.internal.cache.DiskLruCache,boolean)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
okhttp3.Dispatcher: void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.common.zzz: zzz(int,int)
okhttp3.internal.http2.Http2Connection: long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection)
okhttp3.Cookie: java.util.regex.Pattern access$getTIME_PATTERN$cp()
retrofit2.RequestFactory: RequestFactory(retrofit2.RequestFactory$Builder)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getGradientTo()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion()
com.google.android.gms.internal.common.zzag: boolean addAll(int,java.util.Collection)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.lang.Object initialValue()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.constraintlayout.core.ArrayRow: ArrayRow()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
okhttp3.ResponseBody: okhttp3.MediaType contentType()
okhttp3.ConnectionSpec: boolean -deprecated_supportsTlsExtensions()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers getTrailers()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object getParcelable(android.os.Bundle,java.lang.String,java.lang.Class)
kotlin.collections.builders.ListBuilder: ListBuilder()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzm(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.gms.internal.common.zzac: com.google.android.gms.internal.common.zzag zzd()
com.mikhaellopez.circularprogressbar.CircularProgressBar: boolean getRoundBorder()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
okhttp3.Route: java.net.InetSocketAddress socketAddress()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
okhttp3.Cookie: boolean persistent()
okhttp3.internal.cache.DiskLruCache: void initialize()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
retrofit2.HttpServiceMethod: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
okhttp3.ConnectionSpec: java.util.List cipherSuites()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
okhttp3.internal.platform.android.AndroidLog: <clinit>()
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
okhttp3.internal.Util: int indexOf(java.lang.String[],java.lang.String,java.util.Comparator)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1(okhttp3.internal.cache.DiskLruCache$Editor,int)
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.util.Map)
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
okhttp3.internal.platform.android.Android10SocketAdapter: Android10SocketAdapter()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.CollapsingToolbarLayout: float getLineSpacingAdd()
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object)
okhttp3.internal.cache2.Relay: okio.Source getUpstream()
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.bumptech.glide.util.ExceptionPassthroughInputStream: ExceptionPassthroughInputStream()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
okhttp3.EventListener: void responseFailed(okhttp3.Call,java.io.IOException)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getBgColor()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.charging.animation.mobile.battery.api.RetrofitClient: <clinit>()
retrofit2.SkipCallbackExecutorImpl: java.lang.annotation.Annotation[] ensurePresent(java.lang.annotation.Annotation[])
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache getCache$okhttp()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginStart(int)
okhttp3.internal.connection.Exchange: void detachWithViolence()
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
okhttp3.ConnectionPool: void evictAll()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
okhttp3.internal.http2.Http2Writer: void close()
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion()
okhttp3.internal.platform.Platform$Companion: void resetForTests$default(okhttp3.internal.platform.Platform$Companion,okhttp3.internal.platform.Platform,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.internal.connection.RouteSelector: <clinit>()
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object)
okhttp3.Request$Builder: java.util.Map getTags$okhttp()
okhttp3.ConnectionSpec: int hashCode()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection)
okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)
okhttp3.OkHttpClient: java.util.List -deprecated_protocols()
kotlinx.coroutines.YieldContext: YieldContext()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: boolean isSupported()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzak zzo(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.constraintlayout.motion.widget.MotionLayout: void setDelayedApplicationOfInitialState(boolean)
okhttp3.Handshake$peerCertificates$2: java.lang.Object invoke()
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
retrofit2.BuiltInConverters$UnitResponseBodyConverter: java.lang.Object convert(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: int getValueCount$okhttp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)
androidx.lifecycle.ReportFragment: ReportFragment()
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource access$getCurrentPart$p(okhttp3.MultipartReader)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
okhttp3.internal.http.HttpHeaders: boolean skipCommasAndWhitespace(okio.Buffer)
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String getApp_id()
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.logging.LoggingEventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()
okhttp3.internal.ws.WebSocketExtensions: boolean equals(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
okhttp3.internal.connection.RealCall: okhttp3.EventListener getEventListener$okhttp()
okhttp3.internal.connection.RealCall: okhttp3.Response getResponseWithInterceptorChain$okhttp()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
okhttp3.internal.Util: boolean canParseAsIpAddress(java.lang.String)
kotlinx.coroutines.android.HandlerDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
retrofit2.Platform: retrofit2.Platform get()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void cancel()
retrofit2.DefaultCallAdapterFactory$1: retrofit2.Call adapt(retrofit2.Call)
okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.ParameterHandler$Part: ParameterHandler$Part(java.lang.reflect.Method,int,okhttp3.Headers,retrofit2.Converter)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.gms.internal.common.zzaj: zzaj()
okhttp3.Credentials: Credentials()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
okhttp3.internal.connection.RealCall$AsyncCall: void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
okhttp3.Cache: int requestCount()
retrofit2.ParameterHandler$Query: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
retrofit2.Utils: void checkNotPrimitive(java.lang.reflect.Type)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.Object logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
com.google.android.gms.internal.common.zzc: void zzc(android.os.Parcel,boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getClosed$okhttp()
com.google.android.gms.internal.common.zzac: boolean remove(java.lang.Object)
android.support.v4.app.INotificationSideChannel$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
com.mikhaellopez.circularprogressbar.CircularProgressBar: float getBackgroundProgressBarWidth()
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0(retrofit2.Callback,retrofit2.Response)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealConnectionPool: int connectionCount()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
com.charging.animation.mobile.battery.api.CommonAds: void logEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.Long)
retrofit2.KotlinExtensions$await$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
okhttp3.Address: okhttp3.Dns -deprecated_dns()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.room.IMultiInstanceInvalidationService$Stub: IMultiInstanceInvalidationService$Stub()
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger: HttpLoggingInterceptor$Logger$Companion$DefaultLogger()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionState(android.os.Bundle)
okhttp3.internal.connection.RealCall$timeout$1: RealCall$timeout$1(okhttp3.internal.connection.RealCall)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.internal.cache.DiskLruCache: int access$getRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
okhttp3.internal.concurrent.TaskRunner$Backend: long nanoTime()
com.google.android.material.appbar.CollapsingToolbarLayout: void setVisibility(int)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
okhttp3.OkHttpClient$Builder$addInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.connection.Exchange$RequestBodySink: void close()
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
pl.droidsonroids.gif.GifInfoHandle: boolean reset(long)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.Object adapt(retrofit2.Call)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.common.zza: android.os.Parcel zzB(int,android.os.Parcel)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
okhttp3.Address: java.lang.String toString()
okhttp3.internal.Util: java.lang.String toHexString(long)
okhttp3.Response: okhttp3.Response -deprecated_priorResponse()
okhttp3.OkHttpClient: java.util.List -deprecated_interceptors()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call clone()
okhttp3.Request$Builder: void setTags$okhttp(java.util.Map)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
retrofit2.SkipCallbackExecutorImpl: java.lang.String toString()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void responseBodyComplete()
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzh(int,int)
okhttp3.HttpUrl: boolean isHttps()
okhttp3.Response: okhttp3.Protocol -deprecated_protocol()
com.charging.animation.mobile.battery.activity.info.fragment.mobile.MobileFragment: MobileFragment()
com.google.android.gms.internal.common.zzz: int previousIndex()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall getCall$okhttp()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
okhttp3.internal.platform.Platform$Companion: void resetForTests(okhttp3.internal.platform.Platform)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addInterceptor(kotlin.jvm.functions.Function1)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
okhttp3.internal.connection.RouteSelector$Companion: java.lang.String getSocketHost(java.net.InetSocketAddress)
okhttp3.internal.http2.Http2Stream$FramingSource: void receive$okhttp(okio.BufferedSource,long)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void invoke(java.lang.Throwable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion()
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
okhttp3.CacheControl: boolean -deprecated_noStore()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: boolean isExecuted()
okhttp3.OkHttpClient: java.net.Proxy -deprecated_proxy()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
okhttp3.FormBody$Builder: FormBody$Builder()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
okhttp3.Request$Builder: void setBody$okhttp(okhttp3.RequestBody)
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool getConnectionPool$okhttp()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: void setClient$okhttp(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
okhttp3.Handshake$Companion$get$1: java.util.List invoke()
okhttp3.WebSocketListener: WebSocketListener()
_COROUTINE._BOUNDARY: _BOUNDARY()
okhttp3.internal.http2.Http2Connection: void setNextStreamId$okhttp(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.constraintlayout.motion.widget.KeyTrigger: KeyTrigger()
okhttp3.Response$Builder: void setCacheResponse$okhttp(okhttp3.Response)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
okio.ForwardingSource: okio.Source delegate()
okhttp3.internal.platform.Platform$Companion: boolean isAndroid()
retrofit2.http.Path: boolean encoded()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
okhttp3.internal.cache.DiskLruCache: void processJournal()
com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection: com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection[] values()
okhttp3.Interceptor: <clinit>()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink getSink$okhttp()
okhttp3.OkHttpClient: okhttp3.Dispatcher -deprecated_dispatcher()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
com.google.android.material.appbar.CollapsingToolbarLayout: void setStaticLayoutBuilderConfigurer(com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer)
androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
okhttp3.Response$Builder: void setReceivedResponseAtMillis$okhttp(long)
okhttp3.OkHttpClient: OkHttpClient()
okhttp3.Cookie: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1()
retrofit2.Platform: Platform(boolean)
okhttp3.Call: okhttp3.Response execute()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
okhttp3.MultipartReader: okhttp3.MultipartReader$Part nextPart()
okio.AsyncTimeout: boolean exit()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
okhttp3.OkHttpClient: boolean followSslRedirects()
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)
android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)
androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet: ViewOscillator$PathRotateSet()
okhttp3.internal.concurrent.TaskRunner$RealBackend: TaskRunner$RealBackend(java.util.concurrent.ThreadFactory)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.Interceptor$Chain: int readTimeoutMillis()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedUsername()
okhttp3.Handshake: int hashCode()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.charging.animation.mobile.battery.api.RetrofitClient: com.charging.animation.mobile.battery.api.RetrofitClient getInstance()
com.google.android.gms.internal.common.zzg: zzg(com.google.android.gms.internal.common.zzf)
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps: GlideBuilder$EnableImageDecoderForBitmaps()
okhttp3.Response: okhttp3.Response -deprecated_networkResponse()
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.converter.moshi.MoshiConverterFactory withNullSerialization()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
okhttp3.HttpUrl$Companion: java.util.List toQueryNamesAndValues$okhttp(java.lang.String)
retrofit2.ParameterHandler$RawPart: <clinit>()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
retrofit2.converter.moshi.MoshiResponseBodyConverter: MoshiResponseBodyConverter(com.squareup.moshi.JsonAdapter)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec)
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
okhttp3.internal.ws.WebSocketExtensions$Companion: okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers)
okhttp3.internal.platform.Platform: java.lang.String toString()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
android.support.v4.os.ResultReceiver: void send(int,android.os.Bundle)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
retrofit2.ParameterHandler$Path: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleCollapseMode(int)
okhttp3.internal.connection.RealCall: java.io.IOException callDone(java.io.IOException)
androidx.room.Index$Order: androidx.room.Index$Order valueOf(java.lang.String)
retrofit2.OkHttpCall$NoContentResponseBody: okio.BufferedSource source()
okhttp3.Cookie: java.lang.String value()
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.charging.animation.mobile.battery.api.RetrofitClient: com.charging.animation.mobile.battery.api.Api getApi()
okhttp3.internal.http2.Http2Connection: void start(boolean,okhttp3.internal.concurrent.TaskRunner)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
okhttp3.logging.LoggingEventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
okhttp3.logging.Utf8Kt: boolean isProbablyUtf8(okio.Buffer)
okhttp3.internal.http2.Http2Connection: void failConnection(java.io.IOException)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Connection: void flush()
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
com.google.android.material.appbar.CollapsingToolbarLayout: int getDefaultContentScrimColorForTitleCollapseFadeMode()
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okhttp3.OkHttpClient$Builder: void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)
okhttp3.internal.cache.CacheStrategy$Companion: boolean isCacheable(okhttp3.Response,okhttp3.Request)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
okhttp3.internal.http2.Http2Connection: void writePing()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Object invoke(java.lang.Object)
okhttp3.internal.platform.OpenJSSEPlatform: boolean access$isSupported$cp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
retrofit2.RequestBuilder: <clinit>()
pl.droidsonroids.gif.GifInfoHandle: boolean isOpaque(long)
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
retrofit2.ParameterHandler$Tag: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.charging.animation.mobile.battery.activity.base.BaseFragment: BaseFragment()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
okhttp3.Cookie: java.lang.String -deprecated_name()
okhttp3.MultipartBody$Part: okhttp3.RequestBody -deprecated_body()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.android.material.appbar.CollapsingToolbarLayout: int getLineCount()
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.collection.ArraySet: ArraySet()
okhttp3.internal.ws.RealWebSocket$Close: long getCancelAfterCloseMillis()
okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.sidesheet.SideSheetCallback: SideSheetCallback()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.http.ExchangeCodec$Companion: <clinit>()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Response)
okhttp3.ConnectionPool: ConnectionPool(okhttp3.internal.connection.RealConnectionPool)
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner getCertificatePinner$okhttp()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
okhttp3.Challenge: java.util.Map authParams()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.bumptech.glide.util.MultiClassKey: MultiClassKey()
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
okhttp3.HttpUrl$Builder: java.lang.String toString()
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.google.android.material.search.SearchBar: void setText(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
okhttp3.internal.http2.Http2Connection$Listener: <clinit>()
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppLocalesMetadataHolderService: AppLocalesMetadataHolderService()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressDirectionIndeterminateMode(com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket$default(okhttp3.internal.http2.Http2Connection$Builder,java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink,int,java.lang.Object)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String toString()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setStreamId(int)
okhttp3.internal.connection.RealCall$AsyncCall: void run()
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forScreeningCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
okio.AsyncTimeout: void enter()
com.google.android.material.search.SearchView: void setText(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
okhttp3.internal.http2.Http2Connection$Builder: void setSink$okhttp(okio.BufferedSink)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http.StatusLine: java.lang.String toString()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
retrofit2.Utils: void throwIfFatal(java.lang.Throwable)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta: ConstraintSet$Constraint$Delta()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.app.INotificationSideChannel: void cancelAll(java.lang.String)
okhttp3.internal.http2.Http2Stream: long getWriteBytesMaximum()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
okhttp3.internal.platform.Platform: void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object)
okhttp3.internal.connection.RealConnection: void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket)
okhttp3.internal.http2.ErrorCode: <clinit>()
pl.droidsonroids.gif.GifInfoHandle: int extractNativeFileDescriptor(java.io.FileDescriptor,boolean)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
okhttp3.internal.http2.Http2ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void close()
okhttp3.RequestBody$Companion$toRequestBody$2: long contentLength()
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
okhttp3.logging.LoggingEventListener: void responseBodyEnd(okhttp3.Call,long)
okhttp3.internal.platform.BouncyCastlePlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.Jdk9Platform$Companion: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)
retrofit2.BuiltInConverters$RequestBodyConverter: BuiltInConverters$RequestBodyConverter()
okhttp3.Response$Builder: okhttp3.Response getPriorResponse$okhttp()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.http2.Http2Stream: void enqueueTrailers(okhttp3.Headers)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.gms.internal.common.zzn: zzn()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
okhttp3.internal.ws.RealWebSocket: void tearDown()
retrofit2.KotlinExtensions$await$4$2: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.OkHttpClient: okhttp3.ConnectionPool -deprecated_connectionPool()
com.google.android.gms.internal.common.zzac: boolean add(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
com.charging.animation.mobile.battery.fragment.gallery.GalleryViewModel: GalleryViewModel()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
okhttp3.logging.LoggingEventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
okhttp3.internal.platform.android.CloseGuard: <clinit>()
retrofit2.ParameterHandler$Query: ParameterHandler$Query(java.lang.String,retrofit2.Converter,boolean)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
retrofit2.ParameterHandler$Field: ParameterHandler$Field(java.lang.String,retrofit2.Converter,boolean)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger access$getLogger$cp()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newUnknownLengthSource()
okhttp3.internal.ws.RealWebSocket: void runWriter()
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
okhttp3.internal.connection.RealConnection: <clinit>()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
okhttp3.internal.ws.RealWebSocket: void cancel()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.common.zza: void zzC(int,android.os.Parcel)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
retrofit2.Response: okhttp3.ResponseBody errorBody()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callbackExecutor(java.util.concurrent.Executor)
okhttp3.CipherSuite: java.lang.String javaName()
okhttp3.Address: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
com.mikhaellopez.circularprogressbar.CircularProgressBar: float getProgressBarWidth()
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
okhttp3.internal.http.ExchangeCodec: void cancel()
okhttp3.OkHttpClient: int callTimeoutMillis()
okhttp3.internal.http2.Http2Connection$Builder: void setSocket$okhttp(java.net.Socket)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion)
retrofit2.SkipCallbackExecutorImpl: <clinit>()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URL)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.Timeout timeout()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: long runOnce()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
okhttp3.Cookie: java.lang.String name()
okhttp3.ResponseBody$BomAwareReader: void close()
android.support.v4.os.IResultReceiver2$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
okhttp3.Response: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
okhttp3.internal.Util: int indexOfNonWhitespace(java.lang.String,int)
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
android.support.v4.os.IResultReceiver2$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp()
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap getLruEntries$okhttp()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean)
okhttp3.internal.http2.Http2Connection: java.net.Socket getSocket$okhttp()
okhttp3.internal.http2.Http2ExchangeCodec: <clinit>()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.common.zzc: <clinit>()
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
retrofit2.Call: okhttp3.Request request()
retrofit2.Response: int code()
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
okhttp3.internal.platform.AndroidPlatform: boolean access$isSupported$cp()
android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimColor(int)
okhttp3.internal.connection.RealCall$timeout$1: void timedOut()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
okhttp3.HttpUrl: java.net.URI -deprecated_uri()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.charging.animation.mobile.battery.activity.policy.PolicyActivity: PolicyActivity()
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
okhttp3.logging.LoggingEventListener: void cacheMiss(okhttp3.Call)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder getFinder$okhttp()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.Dns$Companion$DnsSystem: Dns$Companion$DnsSystem()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink appendingSink(java.io.File)
com.google.android.material.chip.Chip: void setGravity(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.mikhaellopez.circularprogressbar.CircularProgressBar: float getProgressMax()
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: long runOnce()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newKnownLengthSink()
okhttp3.Response$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.bumptech.glide.manager.LifecycleLifecycle: void onDestroy(androidx.lifecycle.LifecycleOwner)
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion()
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
okio.AsyncTimeout: okio.Source source(okio.Source)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
retrofit2.Retrofit: java.util.List converterFactories()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
okhttp3.internal.cache.DiskLruCache$Entry: void setReadable$okhttp(boolean)
okhttp3.internal.Internal: void applyConnectionSpec(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: OkHttpCall$ExceptionCatchingResponseBody$1(retrofit2.OkHttpCall$ExceptionCatchingResponseBody,okio.Source)
okhttp3.OkHttpClient: javax.net.SocketFactory -deprecated_socketFactory()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
okhttp3.internal.platform.OpenJSSEPlatform: <clinit>()
okhttp3.Cookie$Companion: java.lang.String parseDomain(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
retrofit2.Platform: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
retrofit2.ParameterHandler$QueryMap: ParameterHandler$QueryMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
okhttp3.internal.http2.Hpack: <clinit>()
okhttp3.Route: java.net.Proxy -deprecated_proxy()
okhttp3.internal.ws.WebSocketExtensions: boolean component6()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
kotlinx.coroutines.android.HandlerContext: android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
okhttp3.RequestBody: boolean isDuplex()
retrofit2.Utils$WildcardTypeImpl: boolean equals(java.lang.Object)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
retrofit2.KotlinExtensions: java.lang.Object awaitResponse(retrofit2.Call,kotlin.coroutines.Continuation)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.Response: okhttp3.Headers -deprecated_headers()
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion()
okhttp3.internal.Util: int skipAll(okio.Buffer,byte)
androidx.cardview.widget.CardView: float getRadius()
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
okhttp3.internal.connection.Exchange$RequestBodySink: void flush()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.google.android.material.search.SearchView: void setHint(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri$okhttp()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
okhttp3.internal.http2.Http2Connection: void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
retrofit2.ParameterHandler: ParameterHandler()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Response execute()
okhttp3.internal.cache.CacheRequest: okio.Sink body()
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
retrofit2.Utils: <clinit>()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
okhttp3.Handshake: okhttp3.TlsVersion -deprecated_tlsVersion()
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
okhttp3.internal.http2.Http2Stream: void setWriteBytesMaximum$okhttp(long)
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
retrofit2.Utils$WildcardTypeImpl: Utils$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])
com.charging.animation.mobile.battery.fragment.alarm.AlarmFragment: AlarmFragment()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void shutdown()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
okhttp3.internal.Util: void wait(java.lang.Object)
android.support.v4.os.ResultReceiver$MyResultReceiver: ResultReceiver$MyResultReceiver(android.support.v4.os.ResultReceiver)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
com.charging.animation.mobile.battery.activity.down.DownActivity: DownActivity()
okhttp3.Headers: boolean equals(java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long read(okio.Buffer,long)
com.google.android.material.search.SearchBar: int getDefaultNavigationIconResource()
okhttp3.Interceptor$Chain: okhttp3.Request request()
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.mikhaellopez.circularprogressbar.CircularProgressBar: kotlin.jvm.functions.Function1 getOnProgressChangeListener()
retrofit2.http.Headers: java.lang.String[] value()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
retrofit2.RequestBuilder: void canonicalizeForPath(okio.Buffer,java.lang.String,int,int,boolean)
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory getSocketFactory$okhttp()
okhttp3.logging.LoggingEventListener: void responseHeadersStart(okhttp3.Call)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
retrofit2.Converter$Factory: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getPadding()
okhttp3.MultipartBody: java.lang.String boundary()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
okhttp3.Headers$Companion: java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String)
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.google.android.gms.internal.common.zzae: java.lang.Object zza(int)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
okhttp3.internal.http2.Http2Stream: int getId()
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback(retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter,java.util.concurrent.CompletableFuture)
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.HttpUrl$Builder$Companion: int parsePort(java.lang.String,int,int)
retrofit2.HttpServiceMethod: retrofit2.HttpServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method,retrofit2.RequestFactory)
com.google.android.gms.internal.common.zzm: zzm(java.lang.String)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
com.google.android.material.chip.Chip: float getTextEndPadding()
okhttp3.internal.http2.Http2Connection: long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection)
kotlin.collections.AbstractMutableList: AbstractMutableList()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
okhttp3.Headers: <clinit>()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundProgressBarColorStart(java.lang.Integer)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.charging.animation.mobile.battery.activity.splash.SplashViewModel: SplashViewModel()
kotlin.collections.builders.SetBuilder: SetBuilder()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
retrofit2.Response: retrofit2.Response success(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
okhttp3.internal.http2.Http2Connection: boolean pushedStream$okhttp(int)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.charging.animation.mobile.battery.api.Results: Results(int,java.lang.String,int,java.lang.String)
okhttp3.internal.concurrent.TaskQueue: boolean cancelAllAndDecide$okhttp()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
okhttp3.CacheControl$Builder: int clampToInt(long)
android.support.v4.os.IResultReceiver2$Stub$Proxy: IResultReceiver2$Stub$Proxy(android.os.IBinder)
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.String,java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
okhttp3.internal.http1.Http1ExchangeCodec: void cancel()
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
retrofit2.http.Part: java.lang.String encoding()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
retrofit2.HttpException: java.lang.String getMessage(retrofit2.Response)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.DiskLruCache: void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int)
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
okhttp3.internal.cache.DiskLruCache: void setClosed$okhttp(boolean)
okio.AsyncTimeout: <clinit>()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: AndroidSocketAdapter$Companion$factory$1(java.lang.String)
retrofit2.converter.gson.GsonRequestBodyConverter: GsonRequestBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
okhttp3.OkHttpClient$Builder: void setProxySelector$okhttp(java.net.ProxySelector)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.util.Map)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.constraintlayout.motion.widget.MotionHelper: float getProgress()
retrofit2.Response: retrofit2.Response error(okhttp3.ResponseBody,okhttp3.Response)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Call: boolean isCanceled()
androidx.constraintlayout.motion.widget.MotionLayout: void setTransitionDuration(int)
okhttp3.Cache$RealCacheRequest: void setDone(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
com.google.android.material.search.SearchBar: float getCornerSize()
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: <clinit>()
okhttp3.Cookie: int hashCode()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
com.google.android.material.button.MaterialButton: void setIconResource(int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
retrofit2.Platform$Android$MainThreadExecutor: void execute(java.lang.Runnable)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void readChunkSize()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.charging.animation.mobile.battery.service.LowService: LowService()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
okhttp3.internal.Util: java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.charging.animation.mobile.battery.api.RetrofitClient: RetrofitClient()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.MediaType$Companion: MediaType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
okhttp3.Handshake: boolean equals(java.lang.Object)
com.charging.animation.mobile.battery.activity.internet.NoInternetActivity: NoInternetActivity()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
okhttp3.internal.connection.RealCall: void exitNetworkInterceptorExchange$okhttp(boolean)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
okhttp3.internal.http2.Hpack: java.util.Map getNAME_TO_FIRST_INDEX()
okhttp3.OkHttpClient$Builder: int getReadTimeout$okhttp()
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Effect: SpecialEffectsController$Effect()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: boolean cancel(boolean)
com.google.android.gms.internal.common.zzac: boolean zzf()
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Parcel)
kotlin.jvm.internal.Lambda: int getArity()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
okhttp3.internal.connection.RealConnectionPool: void evictAll()
retrofit2.ParameterHandler: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.http.QueryMap: boolean encoded()
okhttp3.Request$Builder: Request$Builder()
com.google.android.gms.internal.common.zzc: zzc()
okhttp3.EventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
com.charging.animation.mobile.battery.service.FullBatterService: FullBatterService()
okhttp3.Response$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
okhttp3.OkHttpClient$Builder: boolean getFollowRedirects$okhttp()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
okhttp3.internal.ws.RealWebSocket: boolean isValid(okhttp3.internal.ws.WebSocketExtensions)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create(com.google.gson.Gson)
android.support.v4.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.squareup.moshi.JsonValueWriter: JsonValueWriter()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
okhttp3.Request$Builder: okhttp3.RequestBody getBody$okhttp()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
okhttp3.Challenge: java.util.Map -deprecated_authParams()
retrofit2.converter.moshi.MoshiRequestBodyConverter: <clinit>()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.Headers: java.lang.String name(int)
androidx.constraintlayout.motion.utils.ViewOscillator: ViewOscillator()
okhttp3.internal.connection.Exchange: void responseHeadersEnd(okhttp3.Response)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace(java.lang.String,int,int)
okhttp3.HttpUrl$Builder: java.util.List getEncodedQueryNamesAndValues$okhttp()
okhttp3.internal.cache.DiskLruCache$Entry: void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.internal.connection.RealConnection: boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake)
okhttp3.internal.http2.Http2Stream$FramingSource: void setFinished$okhttp(boolean)
okio.ForwardingSource: ForwardingSource(okio.Source)
okhttp3.internal.connection.RealConnection$connectTls$1: java.util.List invoke()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
okio.Segment: Segment()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
okhttp3.CacheControl: boolean mustRevalidate()
okhttp3.internal.concurrent.TaskQueue: void setCancelActiveTask$okhttp(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginTop()
okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressMax(float)
okhttp3.internal.connection.Exchange: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getAuthenticator$okhttp()
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger access$getLogger$cp()
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager component1()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.CollapsingToolbarLayout: void setRtlTextDirectionHeuristicsEnabled(boolean)
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.viewpager2.widget.ViewPager2: int getOrientation()
okhttp3.internal.concurrent.Task: boolean getCancelable()
okhttp3.Dns$Companion: Dns$Companion()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPath()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions access$getExtensions$p(okhttp3.internal.ws.RealWebSocket)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
retrofit2.CallAdapter: java.lang.reflect.Type responseType()
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
okhttp3.Cookie: boolean httpOnly()
com.google.android.gms.internal.common.zzag: int hashCode()
okhttp3.HttpUrl: java.lang.String encodedFragment()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.google.android.gms.internal.common.zzo: zzo()
okhttp3.internal.concurrent.TaskQueue$execute$1: long runOnce()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
okhttp3.internal.http2.Settings: int getHeaderTableSize()
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion()
okhttp3.HttpUrl$Builder: <clinit>()
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
okhttp3.internal.http2.Hpack: Hpack()
okhttp3.MediaType: java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.material.appbar.CollapsingToolbarLayout: int getCollapsedTitleGravity()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
okhttp3.OkHttpClient$Builder: void setConnectionSpecs$okhttp(java.util.List)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void write(okio.Buffer,long)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.charging.animation.mobile.battery.activity.success.SuccessActivity: SuccessActivity()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion()
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
retrofit2.Utils: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketWriter,okio.ByteString,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: ConscryptSocketAdapter$Companion$factory$1()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
okhttp3.internal.platform.android.SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
okhttp3.internal.tls.CertificateChainCleaner: <clinit>()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.util.Set -deprecated_queryParameterNames()
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.charging.animation.mobile.battery.BackupWorker2: BackupWorker2(android.content.Context,androidx.work.WorkerParameters)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URI)
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Request getRequest()
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache getCache$okhttp()
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from$default(android.os.Handler,java.lang.String,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.android.gms.internal.common.zzab: zzab()
com.google.android.gms.internal.common.zzv: java.util.Iterator iterator()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
okhttp3.CertificatePinner$check$1: java.lang.Object invoke()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
okhttp3.MultipartReader$PartSource: long read(okio.Buffer,long)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
okhttp3.internal.http2.Http2Connection: void start(boolean)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.google.android.gms.internal.common.zzw: zzw(com.google.android.gms.internal.common.zzx,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.gms.internal.common.zzaf: zzaf(com.google.android.gms.internal.common.zzag,int,int)
com.google.android.material.appbar.CollapsingToolbarLayout: android.text.TextUtils$TruncateAt getTitleTextEllipsize()
kotlinx.coroutines.CoroutineDispatcher: <clinit>()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
okhttp3.internal.ws.WebSocketWriter: java.util.Random getRandom()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
retrofit2.HttpServiceMethod$CallAdapted: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
retrofit2.OptionalConverterFactory: <clinit>()
okhttp3.Address: okhttp3.HttpUrl url()
okhttp3.internal.connection.RealConnection: java.util.List getCalls()
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
okhttp3.internal.http2.Http2Stream: okhttp3.Headers trailers()
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
com.mikhaellopez.circularprogressbar.CircularProgressBar: boolean getIndeterminateMode()
okhttp3.Protocol$Companion: Protocol$Companion()
okhttp3.internal.http1.Http1ExchangeCodec: void finishRequest()
okhttp3.Cache: int getWriteSuccessCount$okhttp()
retrofit2.http.HTTP: java.lang.String method()
okhttp3.Challenge: boolean equals(java.lang.Object)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.cardview.widget.CardView: void setRadius(float)
okhttp3.internal.concurrent.TaskQueue$execute$1: TaskQueue$execute$1(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean)
okhttp3.Authenticator$Companion$AuthenticatorNone: Authenticator$Companion$AuthenticatorNone()
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
okhttp3.Address: okhttp3.CertificatePinner -deprecated_certificatePinner()
okhttp3.Request: java.lang.String toString()
com.google.android.gms.internal.common.zzj: java.lang.Object next()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: java.lang.String toString()
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.constraintlayout.motion.widget.KeyCycle: KeyCycle()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.google.gson.TypeAdapter: TypeAdapter()
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
retrofit2.ParameterHandler$Header: ParameterHandler$Header(java.lang.String,retrofit2.Converter)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
okio.AsyncTimeout: okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout)
okhttp3.internal.Util: java.util.List toImmutableList(java.util.List)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReadBuffer()
okhttp3.internal.cache2.Relay: void commit(long)
retrofit2.Retrofit: retrofit2.Retrofit$Builder newBuilder()
okhttp3.internal.HostnamesKt: java.lang.String inet6AddressToAscii(byte[])
okhttp3.internal.http2.Http2ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: BaseTransientBottomBar$BaseCallback()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
retrofit2.Platform: java.util.concurrent.Executor defaultCallbackExecutor()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
androidx.collection.ArrayMap: ArrayMap()
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
okhttp3.HttpUrl: <clinit>()
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2(retrofit2.Call)
okhttp3.logging.LoggingEventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.common.zzz: boolean hasNext()
androidx.constraintlayout.motion.widget.MotionLayout: long getTransitionTimeMs()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
okhttp3.ConnectionSpec$Builder: java.lang.String[] getTlsVersions$okhttp()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzn(java.lang.Object,java.lang.Object)
com.charging.animation.mobile.battery.activity.apply.ApplyAnimationActivity: ApplyAnimationActivity()
retrofit2.Utils: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
android.support.v4.app.INotificationSideChannel$Stub: INotificationSideChannel$Stub()
okhttp3.internal.cache.DiskLruCache$Entry: void setSequenceNumber$okhttp(long)
okhttp3.OkHttpClient$Builder: void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier)
android.support.v4.app.INotificationSideChannel$Default: void cancel(java.lang.String,int,java.lang.String)
okhttp3.ConnectionPool: int idleConnectionCount()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
okhttp3.Connection: java.net.Socket socket()
okhttp3.WebSocket: long queueSize()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
okhttp3.internal.ws.MessageDeflater: void close()
android.support.v4.os.IResultReceiver2$Stub$Proxy: void send(int,android.os.Bundle)
okhttp3.Response: okhttp3.Protocol protocol()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.lang.Object clone()
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.Cache$CacheResponseBody: long contentLength()
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
okhttp3.OkHttpClient: java.util.List -deprecated_connectionSpecs()
com.google.android.gms.internal.common.zzb: android.os.IBinder asBinder()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setShowSecondProgress(boolean)
androidx.loader.content.ModernAsyncTask: ModernAsyncTask()
okhttp3.HttpUrl: java.lang.String query()
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.mikhaellopez.circularprogressbar.CircularProgressBar: float getStartAngle()
okhttp3.Cookie$Companion: boolean domainMatch(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
okhttp3.internal.platform.android.Android10SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection: boolean getClient$okhttp()
okhttp3.internal.http2.Http2Stream: void receiveHeaders(okhttp3.Headers,boolean)
okhttp3.Cookie: java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp()
com.google.android.gms.internal.common.zzc: void zzd(android.os.Parcel,android.os.Parcelable)
android.support.v4.os.IResultReceiver2: void send(int,android.os.Bundle)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.Request$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.RequestBody$Companion$asRequestBody$1: RequestBody$Companion$asRequestBody$1(java.io.File,okhttp3.MediaType)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.String toString()
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode$okhttp()
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: long runOnce()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.Timeout timeout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: void run()
com.bumptech.glide.GlideBuilder$LogRequestOrigins: GlideBuilder$LogRequestOrigins()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
okhttp3.internal.concurrent.TaskRunner$Backend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
pl.droidsonroids.gif.GifImageView: void setBackgroundResource(int)
okhttp3.Response: java.util.List headers(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: Http2Connection$pushResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getCleanFiles$okhttp()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.constraintlayout.motion.widget.MotionLayout: void setInteractionEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
retrofit2.HttpServiceMethod: retrofit2.CallAdapter createCallAdapter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okhttp3.OkHttpClient$Builder: void setFollowSslRedirects$okhttp(boolean)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
pl.droidsonroids.gif.GifImageView: void setImageURI(android.net.Uri)
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue getQueue$okhttp()
okhttp3.logging.LoggingEventListener: LoggingEventListener(okhttp3.logging.HttpLoggingInterceptor$Logger,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: okhttp3.Dns dns()
okhttp3.internal.platform.android.Android10SocketAdapter: <clinit>()
okhttp3.Protocol: <clinit>()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
okhttp3.internal.cache.DiskLruCache: void readJournal()
retrofit2.HttpServiceMethod$SuspendForResponse: HttpServiceMethod$SuspendForResponse(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
okhttp3.internal.Util: int toNonNegativeInt(java.lang.String,int)
com.charging.animation.mobile.battery.receiver.LowReceiver: LowReceiver()
retrofit2.ParameterHandler$2: ParameterHandler$2(retrofit2.ParameterHandler)
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[])
okhttp3.internal.connection.RealConnection: void cancel()
com.google.android.gms.internal.common.zzj: boolean hasNext()
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
retrofit2.ParameterHandler$HeaderMap: ParameterHandler$HeaderMap(java.lang.reflect.Method,int,retrofit2.Converter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.internal.platform.Platform: void log(java.lang.String,int,java.lang.Throwable)
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
okhttp3.Cookie: long -deprecated_expiresAt()
okhttp3.internal.cache2.Relay: boolean isClosed()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean isWebp()
okhttp3.Cache: void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy)
okhttp3.internal.connection.RealConnection: boolean isEligible$okhttp(okhttp3.Address,java.util.List)
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: javax.net.ssl.X509TrustManager trustManager(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values()
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean)
okhttp3.internal.http2.Http2Writer: void flush()
androidx.emoji2.text.EmojiCompat$InitCallback: EmojiCompat$InitCallback()
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
androidx.constraintlayout.motion.widget.MotionLayout: void setTransition(androidx.constraintlayout.motion.widget.MotionScene$Transition)
com.google.android.gms.internal.common.zzac: int zzc()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CertificatePinner$check$1: java.util.List invoke()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
okhttp3.internal.http2.Http2Stream: long getReadBytesTotal()
com.google.android.material.button.MaterialButton: void setIconSize(int)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
retrofit2.RequestFactory: okhttp3.Request create(java.lang.Object[])
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setSecondProgressColor(int)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.common.zzr: boolean zza(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setSecondProgressShape(int)
okhttp3.EventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
okhttp3.internal.connection.RealConnectionPool: int idleConnectionCount()
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
okio.AsyncTimeout: void access$setHead$cp(okio.AsyncTimeout)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
retrofit2.http.PartMap: java.lang.String encoding()
retrofit2.Call: void cancel()
okhttp3.internal.platform.android.AndroidLog: void enableLogging(java.lang.String,java.lang.String)
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
com.bumptech.glide.load.engine.DiskCacheStrategy: DiskCacheStrategy()
retrofit2.BuiltInConverters$RequestBodyConverter: <clinit>()
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
okhttp3.OkHttpClient$Builder: void setSocketFactory$okhttp(javax.net.SocketFactory)
com.google.android.gms.internal.common.zzag: zzag()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object)
okhttp3.Address: boolean equals(java.lang.Object)
retrofit2.RequestBuilder: RequestBuilder(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)
androidx.constraintlayout.motion.widget.MotionConstrainedPoint: MotionConstrainedPoint()
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
okhttp3.internal.platform.android.ConscryptSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.gms.internal.common.zzq: java.lang.CharSequence zza(java.lang.Object,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.gms.internal.common.zzaa: com.google.android.gms.internal.common.zzaa zza(java.lang.Object)
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
retrofit2.CallAdapter$Factory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.internal.HostnamesKt: java.lang.String toCanonicalHost(java.lang.String)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.google.android.gms.internal.common.zzj: java.lang.Object zza()
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
retrofit2.Utils: boolean hasUnresolvableType(java.lang.reflect.Type)
okhttp3.internal.Util: void addIfAbsent(java.util.List,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
okhttp3.OkHttpClient$Builder: void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: RealConnectionPool$cleanupTask$1(okhttp3.internal.connection.RealConnectionPool,java.lang.String)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
com.google.android.gms.internal.common.zzo: com.google.android.gms.internal.common.zzo zzb(char)
okhttp3.ResponseBody: byte[] bytes()
com.charging.animation.mobile.battery.api.CommonAds: void logEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
okhttp3.EventListener$Companion$NONE$1: EventListener$Companion$NONE$1()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: okhttp3.Request request()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_CONNECTION_SPECS$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec: void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers)
okhttp3.HttpUrl$Builder: java.util.List getEncodedPathSegments$okhttp()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void rename(java.io.File,java.io.File)
okhttp3.internal.connection.RealConnectionPool: long cleanup(long)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
okhttp3.internal.http1.Http1ExchangeCodec: Http1ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Source source(java.io.File)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean isSupported()
retrofit2.Converter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.charging.animation.mobile.battery.api.Results: Results(int,java.lang.String,int,java.lang.String,boolean)
com.charging.animation.mobile.battery.api.AdsModel: AdsModel(int,java.lang.String,java.lang.String,java.lang.String)
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route)
retrofit2.http.DELETE: java.lang.String value()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.ConnectionSpec: boolean isTls()
retrofit2.ParameterHandler$Body: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
retrofit2.KotlinExtensions$await$4$2: KotlinExtensions$await$4$2(kotlinx.coroutines.CancellableContinuation)
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
okhttp3.Dispatcher: boolean promoteAndExecute()
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
okhttp3.internal.http.RealInterceptorChain: int getReadTimeoutMillis$okhttp()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long runOnce()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getDirtyFiles$okhttp()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
retrofit2.Response: java.lang.String toString()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: java.util.List http2HeadersList(okhttp3.Request)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
okhttp3.Cache: void setWriteSuccessCount$okhttp(int)
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: Http2Connection$pushHeadersLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.activity.result.contract.ActivityResultContract: ActivityResultContract()
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.mikhaellopez.circularprogressbar.CircularProgressBar: CircularProgressBar(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: ComponentActivity()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient)
retrofit2.Platform: boolean isDefaultMethod(java.lang.reflect.Method)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
okhttp3.internal.http2.ErrorCode: int getHttpCode()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setIndeterminateMode(boolean)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
android.support.v4.app.INotificationSideChannel: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout getTimeout()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.material.appbar.CollapsingToolbarLayout: int getExpandedTitleMarginStart()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: void invoke(java.io.IOException)
retrofit2.OkHttpCall: okhttp3.Request request()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: Http2Connection$ReaderRunnable$ping$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)
com.charging.animation.mobile.battery.activity.info.InfoActivity: InfoActivity()
com.charging.animation.mobile.battery.activity.apply.ApplyAnimationViewModel: ApplyAnimationViewModel()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
okhttp3.Cache: <clinit>()
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
okhttp3.internal.Util$threadFactory$1: java.lang.Thread newThread(java.lang.Runnable)
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
okhttp3.internal.cache.DiskLruCache: void access$setCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.MultipartReader$PartSource: MultipartReader$PartSource(okhttp3.MultipartReader)
okhttp3.ConnectionSpec$Builder: boolean getTls$okhttp()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
okhttp3.internal.http2.Hpack$Reader: int readByte()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
com.google.android.gms.internal.common.zzi: zzi(android.os.Looper,android.os.Handler$Callback)
okhttp3.Cache: boolean isClosed()
okhttp3.internal.connection.RealCall: void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.concurrent.TaskLoggerKt: void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
okhttp3.HttpUrl$Companion: void toQueryString$okhttp(java.util.List,java.lang.StringBuilder)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getStatusBarScrim()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
okhttp3.RequestBody$Companion: RequestBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.HttpUrl: java.lang.String scheme()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: FileSystem$Companion$SystemFileSystem()
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
okhttp3.ResponseBody$Companion$asResponseBody$1: ResponseBody$Companion$asResponseBody$1(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.internal.concurrent.TaskRunner$runnable$1: void run()
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Response: Response(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange)
com.mikhaellopez.circularprogressbar.CircularProgressBar: java.lang.Integer getBackgroundProgressBarColorEnd()
com.google.android.material.chip.Chip: void setChipIconResource(int)
okhttp3.Address: okhttp3.Dns dns()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: boolean isCanceled()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection: <clinit>()
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,int,int,int)
okhttp3.FormBody: void writeTo(okio.BufferedSink)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.core.os.BundleCompat$Api33Impl: java.util.ArrayList getParcelableArrayList(android.os.Bundle,java.lang.String,java.lang.Class)
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callFactory(okhttp3.Call$Factory)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.constraintlayout.motion.widget.MotionLayout: float getTargetPosition()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
retrofit2.KotlinExtensions: java.lang.Object create(retrofit2.Retrofit)
retrofit2.Retrofit$Builder: Retrofit$Builder(retrofit2.Retrofit)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
okhttp3.OkHttpClient$Builder: void setAuthenticator$okhttp(okhttp3.Authenticator)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findJvmPlatform()
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setRoundBorder(boolean)
okhttp3.internal.http1.HeadersReader: HeadersReader(okio.BufferedSource)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.common.zzad: zzad()
okhttp3.CacheControl: boolean -deprecated_onlyIfCached()
okhttp3.internal.http.RequestLine: <clinit>()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] access$getPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.converter.moshi.MoshiConverterFactory failOnUnknown()
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setSelected(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink access$getJournalWriter$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.Cookie: long expiresAt()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.charging.animation.mobile.battery.activity.language.LanguageStartActivity: LanguageStartActivity()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setProgress(int)
okhttp3.RequestBody: RequestBody()
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
okhttp3.Headers: java.lang.String get(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
okhttp3.internal.http1.Http1ExchangeCodec: void detachTimeout(okio.ForwardingTimeout)
retrofit2.BuiltInConverters$UnitResponseBodyConverter: BuiltInConverters$UnitResponseBodyConverter()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
okhttp3.Headers$Builder: okhttp3.Headers build()
okhttp3.internal.platform.android.AndroidLogKt: int getAndroidLevel(java.util.logging.LogRecord)
okhttp3.CacheControl: int minFreshSeconds()
okhttp3.OkHttpClient: boolean -deprecated_followSslRedirects()
okhttp3.CipherSuite: java.lang.String -deprecated_javaName()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
okhttp3.internal.http2.Http2Connection: void awaitPong()
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
okhttp3.EventListener: void requestFailed(okhttp3.Call,java.io.IOException)
okhttp3.CacheControl: boolean onlyIfCached()
retrofit2.OkHttpCall: retrofit2.Call clone()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform access$getPlatform$cp()
com.charging.animation.mobile.battery.activity.animation.AnimationActivity: AnimationActivity()
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
okhttp3.internal.connection.RealConnection: void setIdleAtNs$okhttp(long)
okhttp3.Response: java.lang.String -deprecated_message()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
okhttp3.HttpUrl: java.lang.String username()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.appbar.CollapsingToolbarLayout: void setForceApplySystemWindowInsetTop(boolean)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
okio.AsyncTimeout: java.lang.Object withTimeout(kotlin.jvm.functions.Function0)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()
okhttp3.OkHttpClient: boolean -deprecated_retryOnConnectionFailure()
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
okhttp3.internal.Internal: okhttp3.Cookie parseCookie(long,okhttp3.HttpUrl,java.lang.String)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
okhttp3.internal.platform.android.CloseGuard: boolean warnIfOpen(java.lang.Object)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
retrofit2.Utils$GenericArrayTypeImpl: int hashCode()
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
okio.ForwardingSink: java.lang.String toString()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.charging.animation.mobile.battery.custom.view.CustomTextView: CustomTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.google.android.play.core.review.ReviewInfo: ReviewInfo()
pl.droidsonroids.gif.GifInfoHandle: int getLoopCount(long)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
okhttp3.internal.platform.Android10Platform: boolean access$isSupported$cp()
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean isSupported()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
okhttp3.internal.http.RealResponseBody: long contentLength()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
okhttp3.OkHttpClient$Builder: int getConnectTimeout$okhttp()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findPlatform()
okhttp3.internal.connection.Exchange: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: TaskQueue$AwaitIdleTask()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
okhttp3.internal.platform.android.AndroidSocketAdapter: AndroidSocketAdapter(java.lang.Class)
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy$default(okhttp3.internal.http2.Header,okio.ByteString,okio.ByteString,int,java.lang.Object)
com.google.android.material.search.SearchBar: int getStrokeColor()
okhttp3.internal.platform.android.SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.google.android.gms.internal.common.zzz: java.lang.Object zza(int)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationIcon(android.app.Notification$CallStyle,android.graphics.drawable.Icon)
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getCollapsedTitleTypeface()
okhttp3.internal.concurrent.TaskRunner: void afterRun(okhttp3.internal.concurrent.Task,long)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory getEventListenerFactory$okhttp()
com.google.android.gms.internal.common.zzag: int lastIndexOf(java.lang.Object)
com.charging.animation.mobile.battery.api.ApiService: retrofit2.Call callAds()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: <clinit>()
retrofit2.OptionalConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
retrofit2.Invocation: Invocation(java.lang.reflect.Method,java.util.List)
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
okhttp3.Request$Builder: void setMethod$okhttp(java.lang.String)
okhttp3.Cookie: java.lang.String toString$okhttp(boolean)
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_PROTOCOLS$cp()
android.support.v4.os.IResultReceiver2$Default: android.os.IBinder asBinder()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.google.android.gms.internal.common.zzj: zzj()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void invoke()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
retrofit2.Utils$WildcardTypeImpl: java.lang.String toString()
android.support.v4.os.IResultReceiver2$Stub$Proxy: android.os.IBinder asBinder()
okhttp3.internal.http.HttpHeaders: <clinit>()
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okhttp3.MediaType: java.util.regex.Pattern access$getTYPE_SUBTYPE$cp()
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],boolean)
okhttp3.RequestBody: okhttp3.MediaType contentType()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
com.google.android.material.chip.Chip: float getChipEndPadding()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundProgressBarColorDirection(com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection)
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void close()
com.google.android.gms.internal.common.zzs: int zza(int,int,java.lang.String)
okhttp3.RequestBody$Companion: RequestBody$Companion()
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback: ViewPager2$OnPageChangeCallback()
okhttp3.Response: okhttp3.Response -deprecated_cacheResponse()
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot()
okhttp3.CacheControl: boolean -deprecated_noCache()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
retrofit2.Platform: int defaultCallAdapterFactoriesSize()
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
okhttp3.OkHttpClient$Builder: boolean getFollowSslRedirects$okhttp()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: void invoke(java.lang.Throwable)
okhttp3.internal.platform.Platform$Companion: boolean isConscryptPreferred()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
okhttp3.internal.http2.Http2Connection: void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
okhttp3.Cache$RealCacheRequest: void abort()
okhttp3.Response$Builder: void setExchange$okhttp(okhttp3.internal.connection.Exchange)
androidx.lifecycle.LifecycleService: LifecycleService()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
okhttp3.Authenticator: <clinit>()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
okhttp3.internal.ws.RealWebSocket$connect$1: RealWebSocket$connect$1(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.cache.DiskLruCache: boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
okhttp3.internal.Util: java.util.Map toImmutableMap(java.util.Map)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.io.FileSystem: <clinit>()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
okhttp3.CipherSuite$Companion: java.util.Comparator getORDER_BY_NAME$okhttp()
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.charging.animation.mobile.battery.activity.language.LanguageStartAdapter$Listener: LanguageStartAdapter$Listener()
okhttp3.Cookie: java.lang.String domain()
androidx.lifecycle.ViewModelStore: ViewModelStore()
okhttp3.Interceptor$Companion: <clinit>()
com.google.android.material.search.SearchBar: android.view.View getCenterView()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl$okhttp(long)
com.google.android.material.search.SearchBar: void setStrokeColor(int)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: okio.Timeout timeout()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
okhttp3.internal.connection.RealConnection: void noNewExchanges$okhttp()
okhttp3.CacheControl: boolean noStore()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.mikhaellopez.circularprogressbar.CircularProgressBar: int getProgressBarColor()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
androidx.room.RoomDatabase: RoomDatabase()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
okhttp3.internal.platform.Jdk9Platform: boolean access$isAvailable$cp()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
okhttp3.Cache$urls$1: java.lang.Object next()
okhttp3.internal.http.HttpHeaders: boolean promisesBody(okhttp3.Response)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
okhttp3.Request: okhttp3.HttpUrl url()
okhttp3.Response: okhttp3.Handshake handshake()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
pl.droidsonroids.gif.GifInfoHandle: long renderFrame(long,android.graphics.Bitmap)
okhttp3.Response$Builder: okhttp3.Response getCacheResponse$okhttp()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
retrofit2.converter.moshi.MoshiRequestBodyConverter: okhttp3.RequestBody convert(java.lang.Object)
com.charging.animation.mobile.battery.api.Api: retrofit2.Call getAll()
okhttp3.internal.http2.Http2Connection: void pushHeadersLater$okhttp(int,java.util.List,boolean)
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzk(java.util.Collection)
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: HandlerContext$scheduleResumeAfterDelay$1(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
retrofit2.ParameterHandler$Headers: ParameterHandler$Headers(java.lang.reflect.Method,int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
okhttp3.internal.http1.Http1ExchangeCodec: boolean isClosed()
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,int,int)
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0()
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
com.google.android.material.chip.Chip: void setTextAppearance(int)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase getRouteDatabase()
com.bumptech.glide.util.Util: Util()
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean,okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.http.HttpHeaders: boolean startsWith(okio.Buffer,byte)
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
okhttp3.MultipartReader$PartSource: void close()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.net.URL)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
okhttp3.internal.cache.DiskLruCache: void flush()
com.google.android.material.search.SearchView: int getStatusBarHeight()
androidx.work.impl.model.WorkSpec$WorkInfoPojo: WorkSpec$WorkInfoPojo()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long,boolean)
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundProgressBarColor(int)
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: HttpLoggingInterceptor$Logger$Companion()
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
com.google.android.gms.internal.common.zzl: zzl(char)
com.charging.animation.mobile.battery.activity.info.fragment.battery.BatteryFragment: BatteryFragment()
okhttp3.OkHttpClient$Builder: long getMinWebSocketMessageToCompress$okhttp()
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
retrofit2.KotlinExtensions$awaitResponse$2$2: KotlinExtensions$awaitResponse$2$2(kotlinx.coroutines.CancellableContinuation)
okhttp3.Dns: <clinit>()
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
okhttp3.internal.connection.Exchange: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams()
retrofit2.Platform: java.util.List defaultConverterFactories()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
okhttp3.logging.HttpLoggingInterceptor$Logger: <clinit>()
okhttp3.internal.http2.Settings$Companion: Settings$Companion()
kotlinx.coroutines.scheduling.Task: Task()
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater$okhttp()
retrofit2.OptionalConverterFactory$OptionalConverter: java.util.Optional convert(okhttp3.ResponseBody)
okhttp3.internal.connection.RealConnection: void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException)
com.google.android.gms.internal.common.zzw: int zzd(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okio.AsyncTimeout: long access$getTimeoutAt$p(okio.AsyncTimeout)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy(okio.ByteString,okio.ByteString)
okhttp3.internal.http2.Http2Connection: int getLastGoodStreamId$okhttp()
okhttp3.RequestBody: <clinit>()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: void close()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
retrofit2.OkHttpCall$1: void onFailure(okhttp3.Call,java.io.IOException)
okhttp3.HttpUrl: java.lang.String encodedQuery()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
retrofit2.ParameterHandler$2: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.internal.http2.Header$Companion: Header$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.RequestBody$Companion$asRequestBody$1: long contentLength()
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion(int,int,int)
okhttp3.Headers$Builder: Headers$Builder()
retrofit2.Retrofit$Builder: java.util.List converterFactories()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
okhttp3.MultipartReader$Companion: okio.Options getAfterBoundaryOptions()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okhttp3.internal.platform.android.Android10SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okhttp3.internal.http2.Huffman: <clinit>()
okhttp3.internal.http2.Huffman$Node: int getSymbol()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
okhttp3.OkHttpClient$Builder: void setProxyAuthenticator$okhttp(okhttp3.Authenticator)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
okhttp3.internal.cache.CacheStrategy: okhttp3.Response getCacheResponse()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream$okhttp(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.Util: long and(int,long)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
okhttp3.ConnectionSpec: java.util.List -deprecated_cipherSuites()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
okhttp3.internal.ws.RealWebSocket$WriterTask: long runOnce()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
retrofit2.HttpServiceMethod: retrofit2.Converter createResponseConverter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)
okhttp3.internal.connection.Exchange$ResponseBodySource: void close()
com.google.android.gms.internal.common.zzai: boolean zzf()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend getBackend()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
okhttp3.internal.ws.WebSocketExtensions: boolean component3()
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
okhttp3.HttpUrl: java.lang.String -deprecated_password()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
pl.droidsonroids.gif.GifInfoHandle: void seekToTime(long,int,android.graphics.Bitmap)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.http.ExchangeCodec: <clinit>()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
okhttp3.HttpUrl: java.lang.String -deprecated_username()
okhttp3.Cache$urls$1: void remove()
okhttp3.OkHttpClient$Builder: int getCallTimeout$okhttp()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimAlpha(int)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger: void log(java.lang.String)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
okhttp3.internal.Util: void writeMedium(okio.BufferedSink,int)
okio.ForwardingSource: okio.Timeout timeout()
retrofit2.converter.gson.GsonResponseBodyConverter: GsonResponseBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
okhttp3.Response$Builder: okhttp3.ResponseBody getBody$okhttp()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
retrofit2.Converter$Factory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getProgress()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: java.lang.Object invoke()
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.lang.String)
com.bumptech.glide.Registry: Registry()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getSecondProgress()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
okhttp3.HttpUrl: java.net.URL url()
com.google.android.material.chip.Chip: void setCheckable(boolean)
androidx.constraintlayout.motion.widget.MotionLayout: int getCurrentState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getFlags()
okhttp3.internal.concurrent.TaskRunner: void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.google.android.material.appbar.CollapsingToolbarLayout: void setExtraMultilineHeightEnabled(boolean)
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
androidx.constraintlayout.motion.utils.ViewSpline$PathRotate: ViewSpline$PathRotate()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object)
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
com.google.gson.JsonElement: JsonElement()
retrofit2.BuiltInConverters$UnitResponseBodyConverter: kotlin.Unit convert(okhttp3.ResponseBody)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
android.support.v4.os.IResultReceiver2$Stub: android.support.v4.os.IResultReceiver2 asInterface(android.os.IBinder)
okio.ForwardingSink: void flush()
androidx.constraintlayout.widget.ConstraintSet$Constraint: ConstraintSet$Constraint()
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink,kotlin.jvm.functions.Function1)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
okhttp3.Response$Builder: long getSentRequestAtMillis$okhttp()
okhttp3.Address: java.net.ProxySelector proxySelector()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.constraintlayout.motion.widget.MotionLayout: long getNanoTime()
okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)
com.charging.animation.mobile.battery.activity.permission.PermissionActivity: PermissionActivity()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.concurrent.TaskRunner$Backend: void execute(java.lang.Runnable)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getGradientFrom()
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextSize(float)
com.google.android.gms.internal.common.zza: void zzD(int,android.os.Parcel)
okhttp3.internal.connection.Exchange: okhttp3.EventListener getEventListener$okhttp()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getSecondProgressShape()
okhttp3.logging.LoggingEventListener: void requestBodyStart(okhttp3.Call)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTintList(android.content.res.ColorStateList)
com.charging.animation.mobile.battery.fragment.alarm.AlarmViewModel: AlarmViewModel()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers getTrailers()
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.converter.moshi.MoshiConverterFactory asLenient()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager()
okhttp3.internal.connection.Exchange$ResponseBodySource: java.io.IOException complete(java.io.IOException)
okhttp3.internal.tls.OkHostnameVerifier: <clinit>()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void flush()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
okhttp3.internal.http.HttpMethod: HttpMethod()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall clone()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.google.android.gms.internal.common.zzaf: com.google.android.gms.internal.common.zzag zzh(int,int)
okhttp3.OkHttpClient: long minWebSocketMessageToCompress()
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
okhttp3.internal.ws.RealWebSocket$Close: int getCode()
retrofit2.HttpException: java.lang.String message()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.collection.LongSparseArray: LongSparseArray()
pl.droidsonroids.gif.GifInfoHandle: long openNativeFileDescriptor(int,long)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
com.bumptech.glide.load.model.ModelCache$ModelKey: ModelCache$ModelKey()
okhttp3.Cache: java.io.File -deprecated_directory()
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.lang.String[])
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.charging.animation.mobile.battery.api.ApiService: <clinit>()
okhttp3.WebSocket: boolean close(int,java.lang.String)
okhttp3.internal.http2.Http2Writer: <clinit>()
retrofit2.Call: boolean isExecuted()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: void writeTo(okio.BufferedSink)
com.google.android.gms.internal.common.zzac: java.lang.Object[] toArray()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.charging.animation.mobile.battery.activity.info.fragment.battery.BatteryViewModel: BatteryViewModel()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
okhttp3.internal.connection.RealCall: okhttp3.Request getOriginalRequest()
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient getClient()
com.google.android.gms.internal.common.zzac: void clear()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
okhttp3.Handshake: java.util.List -deprecated_peerCertificates()
androidx.core.os.BundleCompat$Api33Impl: android.util.SparseArray getSparseParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange getExchange$okhttp()
retrofit2.Platform$Android: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
okhttp3.Cache$RealCacheRequest: Cache$RealCacheRequest(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
okhttp3.HttpUrl$Builder$Companion: int slashCount(java.lang.String,int,int)
okhttp3.Dns$Companion$DnsSystem: java.util.List lookup(java.lang.String)
com.google.android.gms.internal.common.zzm: java.lang.String toString()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
okhttp3.FormBody: <clinit>()
retrofit2.Retrofit: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: long read(okio.Buffer,long)
okhttp3.internal.platform.Jdk9Platform$Companion: boolean isAvailable()
android.support.v4.os.IResultReceiver$Default: void send(int,android.os.Bundle)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
okhttp3.Interceptor$Chain: okhttp3.Call call()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address getAddress$okhttp()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
okhttp3.Cache: int hitCount()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
okhttp3.Route: java.lang.String toString()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.internal.connection.RealConnection: int getRouteFailureCount$okhttp()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: java.lang.Object invoke(java.lang.Object)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
androidx.constraintlayout.core.widgets.ConstraintWidget: ConstraintWidget()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getBorderColor()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
retrofit2.Utils: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
kotlinx.coroutines.CancelHandler: CancelHandler()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
okhttp3.OkHttpClient: java.util.List interceptors()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
okhttp3.internal.cache2.Relay: okio.Buffer getUpstreamBuffer()
okhttp3.OkHttpClient$Builder$addInterceptor$2: OkHttpClient$Builder$addInterceptor$2(kotlin.jvm.functions.Function1)
okhttp3.Response: okhttp3.Headers headers()
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Handler)
com.charging.animation.mobile.battery.api.AdsModel: java.lang.String getName()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
okhttp3.OkHttpClient$Builder: void setProtocols$okhttp(java.util.List)
com.google.android.gms.internal.common.zzac: int zzb()
okhttp3.internal.http2.Http2ExchangeCodec: void cancel()
okhttp3.internal.cache2.Relay: <clinit>()
com.google.android.material.search.SearchBar: void setHint(int)
okio.ForwardingSource: long read(okio.Buffer,long)
pl.droidsonroids.gif.GifError: pl.droidsonroids.gif.GifError valueOf(java.lang.String)
okhttp3.MultipartBody: int size()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okhttp3.CacheControl: int sMaxAgeSeconds()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
okhttp3.MediaType: <clinit>()
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String getConnectionName$okhttp()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
android.support.v4.app.INotificationSideChannel$Stub$Proxy: java.lang.String getInterfaceDescriptor()
okhttp3.CacheControl: int -deprecated_minFreshSeconds()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
okhttp3.internal.platform.android.DeferredSocketAdapter: DeferredSocketAdapter(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory)
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
kotlinx.coroutines.android.HandlerContext: int hashCode()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
retrofit2.BuiltInConverters$UnitResponseBodyConverter: <clinit>()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
okhttp3.HttpUrl: int hashCode()
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type responseType()
okhttp3.Cache: void setWriteAbortCount$okhttp(int)
okhttp3.Cookie: boolean -deprecated_secure()
okhttp3.internal.connection.RealCall: java.lang.String redactedUrl$okhttp()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: PublicSuffixDatabase$findMatchingRule$1(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: HttpLoggingInterceptor$Logger$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection: long getReadBytesTotal()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
okhttp3.HttpUrl$Builder$Companion: int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.internal.platform.android.SocketAdapter: boolean isSupported()
okhttp3.internal.http2.Http2ExchangeCodec: void finishRequest()
okhttp3.internal.Util: int indexOfNonWhitespace$default(java.lang.String,int,int,java.lang.Object)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalStyle(int)
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
okhttp3.Response$Builder: okhttp3.Response build()
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Settings: Settings()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onHeaders(int,java.util.List,boolean)
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
okhttp3.internal.http2.Http2Stream$FramingSink: void setFinished(boolean)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: long runOnce()
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_get(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
okio.ForwardingSink: okio.Sink delegate()
okhttp3.internal.http2.Http2Stream: java.io.IOException getErrorException$okhttp()
androidx.core.app.SharedElementCallback: SharedElementCallback()
okhttp3.HttpUrl: java.net.URL -deprecated_url()
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
retrofit2.DefaultCallAdapterFactory$1: java.lang.Object adapt(retrofit2.Call)
android.support.v4.os.IResultReceiver$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.ResponseBody: <clinit>()
com.google.android.gms.internal.common.zzad: com.google.android.gms.internal.common.zzad zzc(java.util.Iterator)
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
androidx.constraintlayout.motion.widget.MotionLayout: android.os.Bundle getTransitionState()
kotlinx.coroutines.internal.CtorCache: CtorCache()
okio.Timeout: okio.Timeout clearTimeout()
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: java.lang.Object invoke(java.lang.Object)
okhttp3.logging.LoggingEventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
okhttp3.internal.connection.Exchange: void webSocketUpgradeFailed()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.work.NetworkType: androidx.work.NetworkType[] values()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimResource(int)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
android.support.v4.app.INotificationSideChannel$Default: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
com.charging.animation.mobile.battery.activity.tutorial.TutorialActivity: TutorialActivity()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
okhttp3.HttpUrl$Builder: java.lang.String getScheme$okhttp()
okhttp3.internal.platform.android.AndroidLogHandler: void close()
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
okhttp3.Cookie: boolean hostOnly()
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
android.support.v4.app.INotificationSideChannel$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
okhttp3.FormBody: java.lang.String encodedName(int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void setClosed(boolean)
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
okhttp3.internal.http2.PushObserver: <clinit>()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
okhttp3.OkHttpClient$Builder: void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.internal.ws.RealWebSocket: boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
okhttp3.internal.http2.Http2Connection$Builder: void setSource$okhttp(okio.BufferedSource)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
okhttp3.Address: java.net.Proxy proxy()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.card.MaterialCardView: void setRadius(float)
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.google.android.material.chip.Chip: float getIconStartPadding()
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.concurrent.TaskQueue: void cancelAll()
retrofit2.converter.moshi.MoshiResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
okhttp3.Request$Builder: okhttp3.Request$Builder get()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.internal.http.ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
okhttp3.Cache$Companion: java.util.Set varyFields(okhttp3.Headers)
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
retrofit2.OkHttpCall: boolean isCanceled()
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.DesignTool getDesignTool()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.charging.animation.mobile.battery.activity.internet.NoInternetViewModel: NoInternetViewModel()
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.lang.Object next()
okhttp3.internal.http2.Http2Stream: void setErrorException$okhttp(java.io.IOException)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrame(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
okhttp3.internal.platform.android.AndroidLog: void enable()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URL)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
okhttp3.Cache$Companion: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
okhttp3.MultipartReader: okio.Options access$getAfterBoundaryOptions$cp()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
retrofit2.RequestBuilder: void addPathParam(java.lang.String,java.lang.String,boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
com.charging.animation.mobile.battery.activity.tutorial.TutorialViewModel: TutorialViewModel()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long)
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component2()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.Throwable,java.lang.String,java.lang.Object[])
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getFinished()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: int and(byte,int)
okhttp3.Response$Builder: void setHandshake$okhttp(okhttp3.Handshake)
okhttp3.MultipartReader: void close()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
okhttp3.internal.connection.RealConnectionPool: void put(okhttp3.internal.connection.RealConnection)
okhttp3.internal.Util: java.util.List toHeaderList(okhttp3.Headers)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
okhttp3.EventListener$Companion: EventListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Connection: okhttp3.Protocol protocol()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
okhttp3.HttpUrl$Builder: java.lang.String getHost$okhttp()
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
okhttp3.FormBody: java.lang.String name(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
okhttp3.ConnectionSpec: java.lang.String toString()
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService -deprecated_executorService()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
okhttp3.internal.ws.WebSocketExtensions: <clinit>()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
okhttp3.internal.connection.Exchange: Exchange(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec)
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
androidx.appcompat.widget.SearchView: int getInputType()
okhttp3.OkHttpClient$Builder: void setWriteTimeout$okhttp(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
retrofit2.DefaultCallAdapterFactory: DefaultCallAdapterFactory(java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.connection.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
com.charging.animation.mobile.battery.receiver.FullReceiver: FullReceiver()
okhttp3.CookieJar$Companion: CookieJar$Companion()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String)
androidx.viewpager.widget.ViewPager: int getPageMargin()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
okhttp3.internal.Util: java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
com.google.android.gms.internal.common.zzaf: int zzc()
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.charging.animation.mobile.battery.activity.animation.AnimationViewModel: AnimationViewModel()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
retrofit2.BuiltInConverters: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
retrofit2.converter.moshi.MoshiConverterFactory: retrofit2.converter.moshi.MoshiConverterFactory create()
okhttp3.internal.platform.android.ConscryptSocketAdapter: ConscryptSocketAdapter()
com.google.android.gms.internal.common.zzaf: java.lang.Object[] zzg()
okhttp3.internal.connection.RealConnection$connectTls$2: RealConnection$connectTls$2(okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
okhttp3.internal.ws.RealWebSocket: void writePingFrame$okhttp()
okhttp3.Response$Builder: void setCode$okhttp(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.work.InputMerger: InputMerger()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
okio.Timeout: void intersectWith(okio.Timeout,kotlin.jvm.functions.Function0)
retrofit2.Utils: boolean isAnnotationPresent(java.lang.annotation.Annotation[],java.lang.Class)
okhttp3.TlsVersion: <clinit>()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object[] getParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setOnProgressChangeListener(kotlin.jvm.functions.Function1)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
retrofit2.Utils: java.lang.reflect.Type getParameterLowerBound(int,java.lang.reflect.ParameterizedType)
retrofit2.http.Path: java.lang.String value()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newChunkedSink()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundProgressBarColorEnd(java.lang.Integer)
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.common.zzz: java.lang.Object next()
okhttp3.internal.connection.Exchange: void cancel()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
retrofit2.ParameterHandler$PartMap: ParameterHandler$PartMap(java.lang.reflect.Method,int,retrofit2.Converter,java.lang.String)
retrofit2.Retrofit: retrofit2.Converter nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
okhttp3.ResponseBody: java.nio.charset.Charset charset()
okhttp3.internal.cache.DiskLruCache$snapshots$1: DiskLruCache$snapshots$1(okhttp3.internal.cache.DiskLruCache)
okhttp3.OkHttpClient$Builder: void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
retrofit2.HttpServiceMethod$CallAdapted: HttpServiceMethod$CallAdapted(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskQueue newQueue()
com.google.android.gms.internal.common.zzz: boolean hasPrevious()
okhttp3.Response: okhttp3.Headers trailers()
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.google.android.material.appbar.CollapsingToolbarLayout: float getLineSpacingMultiplier()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
android.support.v4.app.INotificationSideChannel$Default: void cancelAll(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component4()
okhttp3.Response: okhttp3.Handshake -deprecated_handshake()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,okio.Buffer)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
okhttp3.MultipartReader$Part: okio.BufferedSource body()
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.util.Map)
retrofit2.Platform: retrofit2.Platform findPlatform()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
okhttp3.internal.connection.ExchangeFinder: boolean sameHostAndPort(okhttp3.HttpUrl)
android.support.v4.app.INotificationSideChannel$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.connection.RealConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
retrofit2.ParameterHandler$QueryName: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
okhttp3.CacheControl: boolean -deprecated_noTransform()
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedFragment()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
okhttp3.logging.LoggingEventListener: void requestFailed(okhttp3.Call,java.io.IOException)
okhttp3.ResponseBody: java.io.Reader charStream()
okhttp3.internal.Util: void assertThreadHoldsLock(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.MediaType contentType()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
okhttp3.HttpUrl: java.lang.String encodedPassword()
okhttp3.Address: boolean equalsNonHost$okhttp(okhttp3.Address)
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.Response$Builder: int getCode$okhttp()
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
okhttp3.OkHttpClient: boolean followRedirects()
okhttp3.OkHttpClient: int -deprecated_pingIntervalMillis()
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object invokeSuspend(java.lang.Object)
retrofit2.Invocation: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.google.android.material.appbar.CollapsingToolbarLayout: float getExpandedTitleTextSize()
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
pl.droidsonroids.gif.GifImageView: void setFreezesAnimation(boolean)
com.google.android.gms.internal.common.zzag: java.util.List subList(int,int)
pl.droidsonroids.gif.GifInfoHandle: int getWidth(long)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
okhttp3.internal.platform.ConscryptPlatform: boolean access$isSupported$cp()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response stripBody(okhttp3.Response)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
okhttp3.internal.connection.RealConnection$connectTls$2: java.lang.Object invoke()
com.google.android.gms.internal.common.zzy: java.lang.String zza(java.lang.String,java.lang.Object[])
okhttp3.CertificatePinner: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
okhttp3.TlsVersion: java.lang.String javaName()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
okhttp3.OkHttpClient: int writeTimeoutMillis()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
retrofit2.RequestFactory$Builder: void validatePathName(int,java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.app.Notification$Action$Builder createActionBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
android.support.v4.os.ResultReceiver: int describeContents()
okhttp3.internal.platform.Android10Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.arch.core.internal.SafeIterableMap$SupportRemove: SafeIterableMap$SupportRemove()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
android.support.v4.app.INotificationSideChannel$Default: android.os.IBinder asBinder()
okhttp3.Request: Request(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
okhttp3.Headers$Builder: java.util.List getNamesAndValues$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
okhttp3.ConnectionSpec: java.util.List -deprecated_tlsVersions()
okhttp3.FormBody$Companion: FormBody$Companion()
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
okio.ForwardingSink: void close()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.charging.animation.mobile.battery.service.HighService: HighService()
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: <clinit>()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
okhttp3.internal.concurrent.TaskRunner$RealBackend: long nanoTime()
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: boolean isSupported()
com.google.gson.JsonNull: JsonNull()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)
okhttp3.internal.Util: <clinit>()
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimsShown(boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: BuiltInConverters$BufferingResponseBodyConverter()
retrofit2.HttpServiceMethod: java.lang.Object invoke(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setOnIndeterminateModeChangeListener(kotlin.jvm.functions.Function1)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.Dispatcher: int getMaxRequests()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: CipherSuite$Companion$ORDER_BY_NAME$1()
okhttp3.Challenge: int hashCode()
okhttp3.internal.connection.ExchangeFinder: void trackFailure(java.io.IOException)
okhttp3.internal.cache.CacheRequest: void abort()
okhttp3.internal.concurrent.Task: void setNextExecuteNanoTime$okhttp(long)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
okhttp3.RequestBody: long contentLength()
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
okhttp3.Response$Builder: void setRequest$okhttp(okhttp3.Request)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
okhttp3.internal.concurrent.TaskQueue: TaskQueue(okhttp3.internal.concurrent.TaskRunner,java.lang.String)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)
retrofit2.Retrofit: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
com.google.android.gms.internal.common.zzai: int size()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
okhttp3.TlsVersion$Companion: TlsVersion$Companion()
androidx.activity.result.ActivityResultLauncher: ActivityResultLauncher()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.app.NotificationCompat$CallStyle: NotificationCompat$CallStyle()
okhttp3.internal.cache2.Relay: long getBufferMaxSize()
okhttp3.MultipartReader$Companion: MultipartReader$Companion()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
okhttp3.internal.platform.AndroidPlatform$Companion: boolean isSupported()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
okhttp3.MultipartBody: java.util.List -deprecated_parts()
com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection: com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection[] values()
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
okhttp3.internal.connection.RealCall$CallReference: RealCall$CallReference(okhttp3.internal.connection.RealCall,java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Editor: void detach$okhttp()
okhttp3.internal.cache.FaultHidingSink: void close()
okhttp3.Cache$Companion: int readInt$okhttp(okio.BufferedSource)
kotlin.jvm.internal.CallableReference: boolean isFinal()
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forIncomingCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onRequest(int,java.util.List)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
okhttp3.Cache: long maxSize()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
okhttp3.internal.connection.RealCall: java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.google.android.gms.internal.common.zzak: void set(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
okhttp3.CookieJar$Companion: CookieJar$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
okhttp3.Call: void enqueue(okhttp3.Callback)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: void invoke(java.io.IOException)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)
okhttp3.HttpUrl$Companion: HttpUrl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,okio.ByteString)
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
okhttp3.Handshake: java.util.List peerCertificates()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
okhttp3.internal.http2.Http2Stream: void setReadBytesAcknowledged$okhttp(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.constraintlayout.motion.widget.MotionLayout: float getVelocity()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: ConscryptPlatform$DisabledHostnameVerifier()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.animation.MotionSpec: MotionSpec()
okhttp3.internal.http2.Http2Connection$Builder: void setPushObserver$okhttp(okhttp3.internal.http2.PushObserver)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.Cookie: java.lang.String -deprecated_domain()
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
retrofit2.KotlinExtensions$await$4$2: void onFailure(retrofit2.Call,java.lang.Throwable)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
okio.AsyncTimeout: long remainingNanos(long)
com.mikhaellopez.circularprogressbar.CircularProgressBar: float getProgress()
com.bumptech.glide.load.resource.UnitTransformation: UnitTransformation()
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimAlpha()
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.String toString()
okhttp3.CacheControl: int maxAgeSeconds()
androidx.transition.Transition: Transition()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
okhttp3.Cookie$Companion: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: <clinit>()
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
okhttp3.MediaType: java.lang.String type()
okhttp3.internal.connection.RealCall: boolean retryAfterFailure()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
okhttp3.internal.http2.Huffman: void decode(okio.BufferedSource,long,okio.BufferedSink)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
kotlin.collections.IntIterator: IntIterator()
okhttp3.internal.ws.RealWebSocket$Streams: boolean getClient()
okhttp3.Dispatcher: int runningCallsCount()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: PushObserver$Companion$PushObserverCancel()
okhttp3.internal.platform.Android10Platform: Android10Platform()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.Request$Builder: okhttp3.Request$Builder delete$default(okhttp3.Request$Builder,okhttp3.RequestBody,int,java.lang.Object)
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.charging.animation.mobile.battery.service.LiveWallpaperService: LiveWallpaperService()
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.Connection: okhttp3.Route route()
okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
com.google.android.gms.internal.common.zza: zza(android.os.IBinder,java.lang.String)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedUsername$okhttp()
retrofit2.ParameterHandler: retrofit2.ParameterHandler iterable()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
kotlin.Unit: Unit()
okhttp3.Cache: void evictAll()
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
pl.droidsonroids.gif.GifInfoHandle: long openFile(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
okhttp3.CertificatePinner: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
okhttp3.internal.cache2.Relay$RelaySource: void close()
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
okhttp3.HttpUrl: java.util.List -deprecated_encodedPathSegments()
okhttp3.logging.HttpLoggingInterceptor: void logHeader(okhttp3.Headers,int)
okio.ForwardingSink: void write(okio.Buffer,long)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getOkHttpSettings()
okhttp3.Headers: int size()
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 getOnException()
okhttp3.OkHttpClient$Builder: void setConnectionPool$okhttp(okhttp3.ConnectionPool)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setBackgroundColor(int)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
pl.droidsonroids.gif.GifInfoHandle: int restoreSavedState(long,long[],android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.google.android.gms.internal.common.zzk: zzk()
okhttp3.Cookie: java.util.regex.Pattern access$getYEAR_PATTERN$cp()
retrofit2.Platform: java.util.List defaultCallAdapterFactories(java.util.concurrent.Executor)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
okhttp3.MultipartReader$Part: okhttp3.Headers headers()
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
okhttp3.internal.http2.Http2Connection$Builder: void setPingIntervalMillis$okhttp(int)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
retrofit2.Utils: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
retrofit2.Converter: java.lang.Object convert(java.lang.Object)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
retrofit2.Converter$Factory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
okhttp3.HttpUrl: char[] access$getHEX_DIGITS$cp()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.Util: void threadName(java.lang.String,kotlin.jvm.functions.Function0)
retrofit2.HttpException: int code()
okhttp3.internal.connection.RealCall: void setConnectionToCancel(okhttp3.internal.connection.RealConnection)
okhttp3.HttpUrl$Companion: void toPathString$okhttp(java.util.List,java.lang.StringBuilder)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.os.IResultReceiver2$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.MultipartBody: int -deprecated_size()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getRoutes()
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getDropDownBackgroundTintList()
okhttp3.internal.connection.Exchange: boolean isCoalescedConnection$okhttp()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
okhttp3.internal.ws.WebSocketReader: void readMessage()
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
androidx.work.ListenableWorker$Result$Retry: ListenableWorker$Result$Retry()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newFixedLengthSource(long)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean isSupported()
okhttp3.internal.concurrent.TaskQueue$schedule$2: long runOnce()
androidx.work.impl.utils.ProcessUtils: ProcessUtils()
okhttp3.internal.http2.Http2Connection: void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean)
retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
okhttp3.Response: long receivedResponseAtMillis()
okhttp3.internal.connection.RealCall: java.net.Socket releaseConnectionNoEvents$okhttp()
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
com.google.android.gms.internal.common.zzz: java.lang.Object previous()
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: Http2Connection$sendDegradedPingLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.google.android.material.search.SearchBar: int getMenuResId()
retrofit2.ParameterHandler$Header: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.OkHttpCall: retrofit2.Response execute()
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
okhttp3.internal.http.ExchangeCodec$Companion: ExchangeCodec$Companion()
okio.ForwardingSink: okio.Sink -deprecated_delegate()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener getListener$okhttp()
okhttp3.OkHttpClient$Builder: void setPingInterval$okhttp(int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
okhttp3.logging.LoggingEventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
okhttp3.internal.http2.Http2Stream: boolean isOpen()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okio.AsyncTimeout: okio.AsyncTimeout access$getHead$cp()
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
okhttp3.FormBody: long contentLength()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLength()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleMarginTop(int)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedPassword$okhttp()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
okhttp3.Handshake: java.util.List localCertificates()
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.emoji2.text.flatbuffer.MetadataItem: MetadataItem()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory(okhttp3.logging.HttpLoggingInterceptor$Logger)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnHide(float)
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
okhttp3.Response: void close()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)
okhttp3.internal.platform.android.CloseGuard$Companion: okhttp3.internal.platform.android.CloseGuard get()
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
okhttp3.internal.ws.WebSocketReader: void readHeader()
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Request)
okhttp3.Authenticator$Companion: Authenticator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback(retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter,java.util.concurrent.CompletableFuture)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
okhttp3.HttpUrl$Builder$Companion: int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_PROTOCOLS$okhttp()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.android.material.appbar.CollapsingToolbarLayout: void setScrimVisibleHeightTrigger(int)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.ParameterHandler$Path: ParameterHandler$Path(java.lang.reflect.Method,int,java.lang.String,retrofit2.Converter,boolean)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
android.support.v4.os.IResultReceiver2$_Parcel: IResultReceiver2$_Parcel()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString getData()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
retrofit2.DefaultCallAdapterFactory$1: DefaultCallAdapterFactory$1(retrofit2.DefaultCallAdapterFactory,java.lang.reflect.Type,java.util.concurrent.Executor)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean,boolean)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
okhttp3.Request: okhttp3.Headers headers()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
kotlinx.coroutines.JobNode: JobNode()
okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState[] values()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: long runOnce()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
okhttp3.internal.ws.WebSocketWriter: void close()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.internal.connection.RealCall: java.lang.String toLoggableString()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine get(okhttp3.Response)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: BouncyCastleSocketAdapter()
okhttp3.internal.http2.Http2Writer: int maxDataLength()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
android.support.v4.os.ResultReceiver: <clinit>()
pl.droidsonroids.gif.GifInfoHandle: int getHeight(long)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
okhttp3.Dispatcher: void cancelAll()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setPadding(int)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.google.android.gms.internal.common.zzac: java.lang.Object[] toArray(java.lang.Object[])
okhttp3.Dispatcher: java.util.List queuedCalls()
okhttp3.Dispatcher: okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource getSource()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay read(java.io.File)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
okhttp3.internal.connection.ExchangeFinder: boolean retryAfterFailure()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
okhttp3.internal.http.HttpHeaders: void readChallengeHeader(okio.Buffer,java.util.List)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
okhttp3.internal.http2.Header: int hashCode()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
okhttp3.internal.platform.Platform$Companion: byte[] concatLengthPrefixed(java.util.List)
okhttp3.Credentials: <clinit>()
okhttp3.internal.connection.RealCall: java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall)
okhttp3.Response$Builder: okhttp3.Handshake getHandshake$okhttp()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onResponse(retrofit2.Call,retrofit2.Response)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequest(okhttp3.Headers,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder minWebSocketMessageToCompress(long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
okhttp3.Response$Builder: okhttp3.Response getNetworkResponse$okhttp()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
okhttp3.internal.Util: int and(short,int)
okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)
kotlinx.coroutines.EventLoop: EventLoop()
com.charging.animation.mobile.battery.fragment.home.HomeFragment: HomeFragment()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
okhttp3.EventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressBarColorEnd(java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
retrofit2.ParameterHandler$FieldMap: ParameterHandler$FieldMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
okhttp3.internal.cache2.Relay: void setUpstream(okio.Source)
okhttp3.OkHttpClient$Builder: java.net.ProxySelector getProxySelector$okhttp()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner()
retrofit2.Platform: <clinit>()
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_parse(java.lang.String)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.MediaType: java.lang.String -deprecated_subtype()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
okhttp3.MediaType: java.lang.String toString()
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions,boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
okhttp3.MultipartReader$Part: void close()
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
okhttp3.internal.concurrent.TaskQueue: void schedule(okhttp3.internal.concurrent.Task,long)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.Handshake$Companion: java.util.List toImmutableList(java.security.cert.Certificate[])
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level getLevel()
okhttp3.internal.http2.Http2Connection$Builder: void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener)
retrofit2.SkipCallbackExecutorImpl: java.lang.Class annotationType()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.internal.Util: java.lang.String toHostHeader(okhttp3.HttpUrl,boolean)
okhttp3.internal.connection.RealCall$AsyncCall: java.lang.String getHost()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
okhttp3.internal.http2.Http2Connection: void pushRequestLater$okhttp(int,java.util.List)
okhttp3.Headers: int hashCode()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
okhttp3.internal.http2.Http2Stream: void setWriteBytesTotal$okhttp(long)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.google.android.gms.internal.common.zzad: com.google.android.gms.internal.common.zzad zzb(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
okhttp3.MultipartBody: java.util.List parts()
retrofit2.Platform$Android: java.util.concurrent.Executor defaultCallbackExecutor()
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.google.android.play.core.common.PlayCoreDialogWrapperActivity: PlayCoreDialogWrapperActivity()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.ResponseBody: java.io.InputStream byteStream()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
retrofit2.Retrofit$1: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
okhttp3.HttpUrl$Builder: void pop()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: long runOnce()
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.Typeface getExpandedTitleTypeface()
okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.chip.Chip: float getCloseIconSize()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: java.lang.String peerName(java.net.Socket)
com.google.android.gms.internal.common.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.google.android.material.appbar.CollapsingToolbarLayout: android.graphics.drawable.Drawable getContentScrim()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.charging.animation.mobile.battery.receiver.StartReceiver: StartReceiver()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int)
okhttp3.Call: okhttp3.Request request()
okhttp3.internal.http2.Http2Connection: long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
retrofit2.Utils$ParameterizedTypeImpl: boolean equals(java.lang.Object)
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform()
okhttp3.Route: java.net.Proxy proxy()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
okhttp3.internal.connection.RealConnection: void access$setHandshake$p(okhttp3.internal.connection.RealConnection,okhttp3.Handshake)
androidx.constraintlayout.helper.widget.Flow: void setLastHorizontalBias(float)
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isContentSpecificHeader(java.lang.String)
okhttp3.Cache$urls$1: boolean hasNext()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
com.bumptech.glide.request.ExperimentalRequestListener: ExperimentalRequestListener()
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
androidx.constraintlayout.motion.utils.ViewTimeCycle: ViewTimeCycle()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.HttpUrl$Builder: void setEncodedQueryNamesAndValues$okhttp(java.util.List)
okhttp3.internal.cache2.Relay: okio.Buffer getBuffer()
okhttp3.internal.connection.RealConnection: long getIdleAtNs$okhttp()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
retrofit2.CompletableFutureCallAdapterFactory: CompletableFutureCallAdapterFactory()
okhttp3.Request: java.util.List headers(java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Route: okhttp3.Address -deprecated_address()
okhttp3.Cookie: java.lang.String -deprecated_path()
okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection getConnection$okhttp()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
okhttp3.Request: okhttp3.Headers -deprecated_headers()
okhttp3.internal.Util: java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry()
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
okhttp3.internal.connection.RealCall: void enterNetworkInterceptorExchange(okhttp3.Request,boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode,java.io.IOException)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okhttp3.internal.concurrent.Task: void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
okhttp3.HttpUrl$Builder: int effectivePort()
okhttp3.Request$Builder: java.lang.String getMethod$okhttp()
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall getCall()
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
okhttp3.ConnectionSpec: ConnectionSpec(boolean,boolean,java.lang.String[],java.lang.String[])
com.google.gson.JsonArray: JsonArray()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setUnsupported(boolean)
retrofit2.OkHttpCall$1: OkHttpCall$1(retrofit2.OkHttpCall,retrofit2.Callback)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
okhttp3.internal.concurrent.TaskLoggerKt: void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
okhttp3.EventListener: void callStart(okhttp3.Call)
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: BuiltInConverters$StreamingResponseBodyConverter()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.OkHttpClient$Builder: okhttp3.Dns getDns$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long read(okio.Buffer,long)
okhttp3.ConnectionSpec$Builder: void setSupportsTlsExtensions$okhttp(boolean)
okhttp3.internal.http2.Http2Connection: void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
okhttp3.internal.http.RequestLine: RequestLine()
retrofit2.OkHttpCall$1: void onResponse(okhttp3.Call,okhttp3.Response)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newChunkedSource(okhttp3.HttpUrl)
pl.droidsonroids.gif.GifIOException: GifIOException(int,java.lang.String)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: boolean exists(java.io.File)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int)
okhttp3.internal.http2.Http2Connection: java.util.Map getStreams$okhttp()
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: RouteSelector$resetNextProxy$1(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl)
retrofit2.SkipCallbackExecutorImpl: int hashCode()
retrofit2.RequestFactory$Builder: okhttp3.Headers parseHeaders(java.lang.String[])
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile getFile()
okhttp3.internal.platform.OpenJSSEPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
okhttp3.internal.concurrent.Task: void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.CertificatePinner: int hashCode()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.android.gms.internal.common.zzac: boolean removeAll(java.util.Collection)
com.google.android.gms.internal.common.zzaf: java.lang.Object get(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.chip.Chip: void setElevation(float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
okhttp3.internal.http2.Header: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
okhttp3.internal.platform.Platform: Platform()
okhttp3.MultipartBody$Companion: MultipartBody$Companion()
okhttp3.HttpUrl: java.lang.String -deprecated_host()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
okhttp3.internal.http.ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.google.android.material.button.MaterialButton: int getIconGravity()
eightbitlab.com.blurview.RenderEffectBlur: RenderEffectBlur()
com.mikhaellopez.circularprogressbar.CircularProgressBar: java.lang.Integer getProgressBarColorStart()
okhttp3.ResponseBody: void close()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
okhttp3.internal.http2.Http2Connection: int openStreamCount()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange)
okhttp3.internal.connection.RealCall: java.lang.Object clone()
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URI)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
retrofit2.Retrofit: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
okhttp3.internal.http2.Settings: boolean isSet(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
okhttp3.Cache$Companion: boolean hasVaryAll(okhttp3.Response)
com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)
retrofit2.ServiceMethod: ServiceMethod()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void write(okio.Buffer,long)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
okhttp3.internal.connection.RealConnection: boolean isMultiplexed$okhttp()
okhttp3.internal.Util: void notify(java.lang.Object)
com.google.android.gms.internal.common.zzj: java.lang.Object zzb()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
okhttp3.internal.http2.Huffman$Node: int getTerminalBitCount()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.constraintlayout.widget.Guideline: void setFilterRedundantCalls(boolean)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
okhttp3.Protocol: java.lang.String toString()
okhttp3.Challenge: java.nio.charset.Charset charset()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.ConnectionSpec$Builder: void setCipherSuites$okhttp(java.lang.String[])
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
okhttp3.internal.cache2.Relay: void access$writeHeader(okhttp3.internal.cache2.Relay,okio.ByteString,long,long)
com.charging.animation.mobile.battery.database.Database_Impl: Database_Impl()
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitlePositionInterpolator(android.animation.TimeInterpolator)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary$okhttp()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: boolean isSupported()
okhttp3.internal.ws.MessageInflater: void inflate(okio.Buffer)
okhttp3.EventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference0Impl: void set(java.lang.Object)
okhttp3.Response: okhttp3.internal.connection.Exchange exchange()
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
okhttp3.FormBody: java.lang.String value(int)
okhttp3.Protocol$Companion: Protocol$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
androidx.work.impl.WorkDatabase: WorkDatabase()
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)
com.charging.animation.mobile.battery.api.CommonAds: CommonAds()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean getClosed()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
okhttp3.HttpUrl$Companion: void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.bumptech.glide.gifdecoder.GifFrame: GifFrame()
com.google.android.gms.internal.common.zzn: boolean zza(char)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: java.lang.Object invoke(java.lang.Object)
com.charging.animation.mobile.battery.activity.main.MainActivity: MainActivity()
com.google.android.gms.internal.common.zzn: <clinit>()
okhttp3.internal.cache.DiskLruCache: boolean access$getHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSource: void setTrailers(okhttp3.Headers)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed$okhttp()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Reader: void close()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnection()
androidx.constraintlayout.motion.widget.Key: Key()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
okhttp3.OkHttpClient: okhttp3.CertificatePinner -deprecated_certificatePinner()
okhttp3.internal.ws.MessageDeflater: void deflate(okio.Buffer)
androidx.transition.TransitionValues: TransitionValues()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.google.android.gms.internal.common.zzah: java.lang.Object[] zza(java.lang.Object[],int)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
okhttp3.Address: java.net.Proxy -deprecated_proxy()
okhttp3.OkHttpClient$Builder: void setDns$okhttp(okhttp3.Dns)
com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrim(android.graphics.drawable.Drawable)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
okhttp3.MediaType: java.lang.String parameter(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.RequestBody$Companion$toRequestBody$1: long contentLength()
okhttp3.Dispatcher: void executed$okhttp(okhttp3.internal.connection.RealCall)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
okhttp3.OkHttpClient$Builder: void setRetryOnConnectionFailure$okhttp(boolean)
okio.AsyncTimeout: AsyncTimeout()
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
okhttp3.Call: okhttp3.Call clone()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
okio.Buffer: Buffer()
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
okhttp3.internal.platform.BouncyCastlePlatform: boolean access$isSupported$cp()
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.http.OPTIONS: java.lang.String value()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
okhttp3.OkHttpClient: int -deprecated_connectTimeoutMillis()
okhttp3.internal.HostnamesKt: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
retrofit2.Retrofit: okhttp3.Call$Factory callFactory()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setBorderColor(int)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getFinished$okhttp()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
android.support.v4.os.IResultReceiver2$Stub: android.os.IBinder asBinder()
androidx.cardview.widget.CardView: void setMinimumHeight(int)
okhttp3.internal.concurrent.TaskLoggerKt: void taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.constraintlayout.core.widgets.WidgetContainer: WidgetContainer()
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String getKey$okhttp()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedQuery()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
androidx.constraintlayout.motion.widget.MotionLayout: void setDebugMode(int)
okhttp3.HttpUrl: int -deprecated_pathSize()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
retrofit2.BuiltInConverters$VoidResponseBodyConverter: BuiltInConverters$VoidResponseBodyConverter()
okhttp3.Cache$RealCacheRequest$1: void close()
com.google.android.play.core.review.internal.zzj: zzj()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.Response: okhttp3.ResponseBody body()
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
pl.droidsonroids.gif.GifInfoHandle: int createTempNativeFileDescriptor()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
okhttp3.Response: long -deprecated_sentRequestAtMillis()
okhttp3.internal.concurrent.TaskQueue$schedule$2: TaskQueue$schedule$2(kotlin.jvm.functions.Function0,java.lang.String,java.lang.String)
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: Http1ExchangeCodec$UnknownLengthSource(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.Cache: java.util.Iterator urls()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
okhttp3.internal.connection.RealCall: void cancel()
okhttp3.internal.connection.RealConnection: java.net.Socket access$getSocket$p(okhttp3.internal.connection.RealConnection)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder validateEagerly(boolean)
retrofit2.CallAdapter$Factory: CallAdapter$Factory()
com.google.android.gms.internal.common.zzg: zzg()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.HttpUrl: int pathSize()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void close()
kotlin.jvm.internal.Lambda: java.lang.String toString()
retrofit2.CallAdapter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
androidx.constraintlayout.core.widgets.Guideline: Guideline()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
okhttp3.internal.Util: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.ConnectionSpec: <clinit>()
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
okhttp3.Cache$Companion: Cache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void access$setPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase,byte[])
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
okhttp3.internal.concurrent.TaskRunner$Companion: java.util.logging.Logger getLogger()
okhttp3.internal.cache.DiskLruCache$snapshots$1: boolean hasNext()
kotlinx.coroutines.android.HandlerDispatcherKt: void updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
retrofit2.OkHttpCall: okio.Timeout timeout()
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
okio.ForwardingSink: okio.Timeout timeout()
okhttp3.internal.cache.CacheStrategy: <clinit>()
okhttp3.Request: java.lang.Object tag(java.lang.Class)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1(java.lang.String,java.lang.String,long,okhttp3.internal.ws.RealWebSocket,java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams,okhttp3.internal.ws.WebSocketExtensions)
okhttp3.internal.http2.Settings: int size()
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(java.lang.Object)
okhttp3.internal.platform.Platform$Companion: boolean isBouncyCastlePreferred()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
okhttp3.RequestBody$Companion$toRequestBody$2: RequestBody$Companion$toRequestBody$2(byte[],okhttp3.MediaType,int,int)
okhttp3.CipherSuite: <clinit>()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.gms.internal.common.zzaf: int size()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.motion.widget.MotionInterpolator: MotionInterpolator()
okhttp3.EventListener: void canceled(okhttp3.Call)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
okhttp3.internal.platform.Android10Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.constraintlayout.widget.Barrier: void setType(int)
retrofit2.converter.moshi.MoshiRequestBodyConverter: MoshiRequestBodyConverter(com.squareup.moshi.JsonAdapter)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
okhttp3.Interceptor$Companion: Interceptor$Companion()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] getChildren()
okhttp3.internal.cache.DiskLruCache$Entry: void setLockingSourceCount$okhttp(int)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.work.Constraints: Constraints()
com.mikhaellopez.circularprogressbar.CircularProgressBar: com.mikhaellopez.circularprogressbar.CircularProgressBar$ProgressDirection getProgressDirection()
com.google.android.gms.internal.common.zzt: zzt(com.google.android.gms.internal.common.zzu,com.google.android.gms.internal.common.zzx,java.lang.CharSequence)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
okhttp3.internal.concurrent.TaskRunner: java.util.List activeQueues()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
okhttp3.Cookie$Companion: long parseExpires(java.lang.String,int,int)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType()
pl.droidsonroids.gif.GifInfoHandle: int getNativeErrorCode(long)
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.google.android.gms.internal.common.zzac: java.lang.Object[] zzg()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
retrofit2.Retrofit$Builder: Retrofit$Builder(retrofit2.Platform)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.connection.ConnectInterceptor: <clinit>()
okhttp3.Route: boolean equals(java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
okhttp3.CacheControl: boolean -deprecated_mustRevalidate()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String binarySearch(byte[],byte[][],int)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.Task awaitTaskToRun()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.charging.animation.mobile.battery.fragment.gallery.fragment.CustomFragment: CustomFragment()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.charging.animation.mobile.battery.api.AdsModel: void setAds_id(java.lang.String)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getProxyAuthenticator$okhttp()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
okhttp3.Connection: okhttp3.Handshake handshake()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
okhttp3.internal.platform.Platform$Companion: java.util.List alpnProtocolNames(java.util.List)
okhttp3.internal.cache.DiskLruCache: boolean removeOldestEntry()
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
androidx.activity.ImmLeaksCleaner$Cleaner: ImmLeaksCleaner$Cleaner()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink getSink()
okhttp3.internal.connection.RealConnection$WhenMappings: <clinit>()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
androidx.constraintlayout.core.widgets.VirtualLayout: VirtualLayout()
com.charging.animation.mobile.battery.activity.down.DownViewModel: DownViewModel()
androidx.fragment.app.DialogFragment: DialogFragment()
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Headers)
okhttp3.Headers: java.util.List values(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
okhttp3.Challenge: java.lang.String -deprecated_realm()
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Void convert(okhttp3.ResponseBody)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: Http2Connection$writeWindowUpdateLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long)
okhttp3.internal.io.FileSystem: void delete(java.io.File)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.android.HandlerContext: void invokeOnTimeout$lambda$3(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
pl.droidsonroids.gif.GifInfoHandle: void free(long)
okhttp3.Response: okhttp3.Response priorResponse()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
okhttp3.Response: int -deprecated_code()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: <clinit>()
okhttp3.OkHttpClient: int -deprecated_callTimeoutMillis()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
okhttp3.Address: java.net.ProxySelector -deprecated_proxySelector()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setSecondProgress(int)
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
okhttp3.CipherSuite: java.util.Comparator access$getORDER_BY_NAME$cp()
com.google.android.gms.internal.common.zzj: void remove()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
okhttp3.internal.http2.Http2Stream: <clinit>()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: Jdk8WithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task getActiveTask$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.Cache getCache$okhttp()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
okhttp3.internal.cache.DiskLruCache: void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
com.google.android.gms.internal.common.zzs: java.lang.String zzd(int,int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
retrofit2.OkHttpCall: boolean isExecuted()
okhttp3.OkHttpClient$Builder: java.util.List getProtocols$okhttp()
okhttp3.internal.Util: java.lang.String toHexString(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
retrofit2.Converter$Factory: Converter$Factory()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.google.android.gms.internal.common.zzo: boolean zza(char)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
android.support.v4.os.IResultReceiver$Default: IResultReceiver$Default()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
okhttp3.internal.cache.DiskLruCache: void rebuildJournal$okhttp()
okhttp3.logging.LoggingEventListener: void callStart(okhttp3.Call)
com.google.android.gms.internal.common.zzac: zzac()
com.google.android.material.timepicker.TimeModel: TimeModel()
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okio.Source)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
okhttp3.logging.LoggingEventListener: void dnsStart(okhttp3.Call,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
retrofit2.Response: java.lang.String message()
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
kotlinx.coroutines.android.HandlerDispatcherKt: <clinit>()
android.support.v4.os.IResultReceiver: <clinit>()
okhttp3.MultipartBody: okhttp3.MediaType type()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzaj zze()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.viewpager.widget.ViewPager$ItemInfo: ViewPager$ItemInfo()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
okhttp3.internal.platform.android.AndroidLogKt: int access$getAndroidLevel$p(java.util.logging.LogRecord)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
okhttp3.internal.connection.Exchange: void trackFailure(java.io.IOException)
okhttp3.internal.Util: void notifyAll(java.lang.Object)
retrofit2.http.PATCH: java.lang.String value()
retrofit2.http.POST: java.lang.String value()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
okhttp3.ResponseBody: java.lang.Object consumeSource(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
okhttp3.Challenge: java.lang.String toString()
okhttp3.internal.platform.Android10Platform: <clinit>()
okhttp3.HttpUrl$Builder$Companion: int schemeDelimiterOffset(java.lang.String,int,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.constraintlayout.helper.widget.Flow: void setLastVerticalStyle(int)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
okhttp3.internal.ws.WebSocketProtocol: <clinit>()
androidx.constraintlayout.motion.widget.MotionPaths: MotionPaths()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.common.zzac: boolean addAll(java.util.Collection)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
retrofit2.OkHttpCall: OkHttpCall(retrofit2.RequestFactory,java.lang.Object[],okhttp3.Call$Factory,retrofit2.Converter)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
okhttp3.Handshake: java.lang.String toString()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
okhttp3.CipherSuite: java.util.Map access$getINSTANCES$cp()
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: DiskCacheWriteLocker$WriteLock()
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
okhttp3.internal.http2.Http2Stream: void setReadBytesTotal$okhttp(long)
okhttp3.MultipartBody$Companion: void appendQuotedString$okhttp(java.lang.StringBuilder,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.mikhaellopez.circularprogressbar.CircularProgressBar: void setProgressBarColorStart(java.lang.Integer)
okhttp3.HttpUrl: java.util.Set queryParameterNames()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: AndroidPlatform$CustomTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.internal.platform.android.DeferredSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.logging.LoggingEventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
okhttp3.CacheControl: int maxStaleSeconds()
com.charging.animation.mobile.battery.listener.Listener: Listener()
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getSecondGradientTo()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setDeclineButtonColorHint(android.app.Notification$CallStyle,int)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest)
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion()
okhttp3.Cache$RealCacheRequest: okio.Sink body()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzi(java.lang.Object[],int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
okhttp3.Headers: long byteCount()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
okhttp3.Response: okhttp3.Request -deprecated_request()
retrofit2.ParameterHandler$Tag: ParameterHandler$Tag(java.lang.Class)
retrofit2.RequestBuilder: void addPart(okhttp3.Headers,okhttp3.RequestBody)
com.mikhaellopez.circularprogressbar.CircularProgressBar: kotlin.jvm.functions.Function1 getOnIndeterminateModeChangeListener()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
android.support.v4.os.IResultReceiver$Default: android.os.IBinder asBinder()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.ws.RealWebSocket: void loopReader()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories()
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
retrofit2.OptionalConverterFactory$OptionalConverter: java.lang.Object convert(java.lang.Object)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion()
com.google.android.gms.internal.common.zzb: zzb(java.lang.String)
com.google.android.gms.internal.common.zzs: void zzc(int,int,int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
okhttp3.CertificatePinner$Pin: boolean matchesCertificate(java.security.cert.X509Certificate)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
okhttp3.Response$Builder: void setProtocol$okhttp(okhttp3.Protocol)
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
okhttp3.internal.http2.Huffman: Huffman()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns)
okhttp3.internal.platform.ConscryptPlatform$Companion: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okio.Timeout: okio.Timeout clearDeadline()
retrofit2.RequestFactory: retrofit2.RequestFactory parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.Dns$Companion: Dns$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
androidx.room.Index$Order: androidx.room.Index$Order[] values()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
okhttp3.logging.LoggingEventListener: LoggingEventListener(okhttp3.logging.HttpLoggingInterceptor$Logger)
retrofit2.RequestBuilder: java.lang.String canonicalizeForPath(java.lang.String,boolean)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
okhttp3.EventListener: EventListener()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: int getMax()
retrofit2.KotlinExtensions$suspendAndThrow$1: KotlinExtensions$suspendAndThrow$1(kotlin.coroutines.Continuation)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.HttpUrl$Builder: void setScheme$okhttp(java.lang.String)
retrofit2.http.GET: java.lang.String value()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
okhttp3.internal.ws.RealWebSocket$connect$1: void onFailure(okhttp3.Call,java.io.IOException)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
okhttp3.internal.connection.RealConnection: void incrementSuccessCount$okhttp()
pl.droidsonroids.gif.GifInfoHandle: void saveRemainder(long)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
okhttp3.internal.http.ExchangeCodec: okhttp3.Headers trailers()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: CompletableFutureCallAdapterFactory$ResponseCallAdapter(java.lang.reflect.Type)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
retrofit2.BuiltInConverters$ToStringConverter: BuiltInConverters$ToStringConverter()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
retrofit2.Utils$ParameterizedTypeImpl: Utils$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.constraintlayout.core.widgets.HelperWidget: HelperWidget()
okhttp3.EventListener$Companion: EventListener$Companion()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getReadable$okhttp()
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: DiskLruCache$Entry$newSource$1(okhttp3.internal.cache.DiskLruCache$Entry,okio.Source,okio.Source)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: DatesKt$STANDARD_DATE_FORMAT$1()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
retrofit2.BuiltInConverters$ToStringConverter: java.lang.Object convert(java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: void setLines(int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
okhttp3.CertificatePinner$Pin: boolean matchesHostname(java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.time.Instant)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
okhttp3.Handshake: java.security.Principal -deprecated_localPrincipal()
kotlin.jvm.internal.Intrinsics: Intrinsics()
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
okhttp3.internal.concurrent.Task: long getNextExecuteNanoTime$okhttp()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion()
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzl()
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
okhttp3.Dispatcher: java.lang.Runnable getIdleCallback()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
okhttp3.internal.Util: long toLongOrDefault(java.lang.String,long)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
okhttp3.internal.concurrent.Task: long runOnce()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.common.zzc: boolean zzg(android.os.Parcel)
com.google.android.material.appbar.CollapsingToolbarLayout: int getScrimVisibleHeightTrigger()
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
okio.Timeout: long timeoutNanos()
retrofit2.Utils: int indexOf(java.lang.Object[],java.lang.Object)
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: DefaultCallAdapterFactory$ExecutorCallbackCall(java.util.concurrent.Executor,retrofit2.Call)
retrofit2.ParameterHandler$RawPart: ParameterHandler$RawPart()
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
okhttp3.Route: int hashCode()
okhttp3.internal.http2.Http2Connection: void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long)
retrofit2.Response: java.lang.Object body()
okhttp3.logging.LoggingEventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
retrofit2.Callback: void onFailure(retrofit2.Call,java.lang.Throwable)
com.google.android.material.search.SearchView: com.google.android.material.motion.MaterialMainContainerBackHelper getBackHelper()
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
okhttp3.internal.ws.RealWebSocket$WriterTask: RealWebSocket$WriterTask(okhttp3.internal.ws.RealWebSocket)
okhttp3.internal.connection.RealConnection$connectTls$2: java.util.List invoke()
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
okhttp3.internal.cache.DiskLruCache: <clinit>()
okhttp3.internal.http2.Http2Connection$Builder: int getPingIntervalMillis$okhttp()
androidx.transition.TransitionSet: TransitionSet()
okhttp3.internal.io.FileSystem: long size(java.io.File)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: DownsampleStrategy()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
okhttp3.OkHttpClient: java.util.List protocols()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
okhttp3.internal.http1.Http1ExchangeCodec: int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.MultipartReader: long currentPartBytesRemaining(long)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
retrofit2.OkHttpCall: void enqueue(retrofit2.Callback)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: long contentLength()
androidx.fragment.app.FragmentActivity: FragmentActivity()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.internal.http2.Http2Connection: void start()
okhttp3.internal.concurrent.TaskQueue: java.lang.String toString()
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.String,java.lang.String)
com.google.android.gms.internal.common.zzs: int zzb(int,int,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.internal.BaselineLayout: int getBaseline()
okhttp3.Response: java.lang.String header(java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
okhttp3.MultipartBody: long contentLength()
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: void run()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
retrofit2.Response: Response(okhttp3.Response,java.lang.Object,okhttp3.ResponseBody)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: int hashCode()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getPeerSettings()
okhttp3.Response$Builder: Response$Builder()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.google.android.gms.internal.common.zzai: <clinit>()
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
okhttp3.Interceptor$Companion: okhttp3.Interceptor invoke(kotlin.jvm.functions.Function1)
android.support.v4.os.IResultReceiver: void send(int,android.os.Bundle)
okhttp3.Cache$Companion: Cache$Companion()
com.charging.animation.mobile.battery.BackupWorker: BackupWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
okhttp3.internal.connection.RealConnection: void startHttp2(int)
kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.RequestFactory$Builder: void parseMethodAnnotation(java.lang.annotation.Annotation)
okhttp3.internal.http2.Http2ExchangeCodec: long reportedContentLength(okhttp3.Response)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setOpenGradient(boolean)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem getFileSystem$okhttp()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
pl.droidsonroids.gif.GifInfoHandle: long[] getSavedState(long)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getStreamId()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.google.android.gms.internal.common.zzag: com.google.android.gms.internal.common.zzag zzd()
okhttp3.CipherSuite: CipherSuite(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache$Entry: long getSequenceNumber$okhttp()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level -deprecated_level()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.charging.animation.mobile.battery.fragment.setting.SettingFragment: SettingFragment()
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: long runOnce()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
kotlinx.coroutines.android.HandlerDispatcherKt: void access$updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,java.lang.Object)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request getRequest$okhttp()
okhttp3.MultipartReader: MultipartReader(okhttp3.ResponseBody)
okhttp3.internal.http2.Http2Stream$FramingSink: void setClosed(boolean)
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.Util: int readMedium(okio.BufferedSource)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
okhttp3.Challenge: java.lang.String scheme()
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.ParameterHandler$QueryName: ParameterHandler$QueryName(retrofit2.Converter,boolean)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
okhttp3.internal.cache2.Relay: int getSourceCount()
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
okhttp3.OkHttpClient$Builder: void setConnectTimeout$okhttp(int)
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer getHpackWriter()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl parse(java.lang.String)
okhttp3.internal.platform.Platform$Companion: Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache$urls$1: Cache$urls$1(okhttp3.Cache)
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
okhttp3.Response$Builder: okhttp3.Request getRequest$okhttp()
com.google.android.material.button.MaterialButton: int getInsetTop()
retrofit2.SkipCallbackExecutorImpl: boolean equals(java.lang.Object)
retrofit2.Retrofit: retrofit2.Converter nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter: SerializationDelegatingTypeAdapter()
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
okhttp3.internal.http2.Http2Writer: void dataFrame(int,int,okio.Buffer,int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)
okhttp3.internal.cache2.Relay: void setSourceCount(int)
com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)
okhttp3.Challenge: java.nio.charset.Charset -deprecated_charset()
okhttp3.Request$Builder: void setUrl$okhttp(okhttp3.HttpUrl)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable()
kotlin.collections.builders.MapBuilder: MapBuilder()
com.google.android.gms.internal.common.zzaf: java.util.List subList(int,int)
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
okhttp3.OkHttpClient: int readTimeoutMillis()
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
kotlin.random.Random: Random()
okhttp3.internal.cache2.Relay: void setUpstreamReader(java.lang.Thread)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
okhttp3.CertificatePinner: java.util.Set getPins()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
okhttp3.internal.ws.WebSocketExtensions: boolean component1()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.http2.Http2: Http2()
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine parse(java.lang.String)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void deleteContents(java.io.File)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
okhttp3.Response: boolean isRedirect()
okhttp3.Request$Builder: okhttp3.HttpUrl getUrl$okhttp()
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Class,java.lang.String,java.lang.String,int)
retrofit2.Utils: Utils()
okhttp3.Handshake$Companion$handshake$1: Handshake$Companion$handshake$1(java.util.List)
com.google.android.material.datepicker.DayViewDecorator: DayViewDecorator()
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
okhttp3.internal.Util: java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedFragment$okhttp()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.google.android.gms.internal.common.zzag: int indexOf(java.lang.Object)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator()
okhttp3.WebSocket: boolean send(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: long size(java.io.File)
okhttp3.Address: javax.net.SocketFactory -deprecated_socketFactory()
okhttp3.Cookie$Companion: int dateCharacterOffset(java.lang.String,int,int,boolean)
okhttp3.CertificatePinner$Pin: java.lang.String getHashAlgorithm()
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
okhttp3.Credentials: java.lang.String basic$default(java.lang.String,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.bumptech.glide.gifdecoder.GifHeaderParser: GifHeaderParser()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
okhttp3.Response: okhttp3.CacheControl -deprecated_cacheControl()
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
android.support.v4.os.IResultReceiver2$Default: IResultReceiver2$Default()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.gms.internal.common.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.material.search.SearchView: int getDefaultNavigationIconResource()
pl.droidsonroids.gif.GifInfoHandle: int getDuration(long)
okhttp3.ConnectionSpec$Builder: void setTlsVersions$okhttp(java.lang.String[])
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
okhttp3.internal.Internal: java.lang.String cookieToString(okhttp3.Cookie,boolean)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.charging.animation.mobile.battery.activity.permission.PermissionViewModel: PermissionViewModel()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
com.charging.animation.mobile.battery.activity.language.LanguageSettingActivity: LanguageSettingActivity()
okhttp3.internal.concurrent.TaskRunner: void runTask(okhttp3.internal.concurrent.Task)
android.support.v4.os.IResultReceiver$_Parcel: IResultReceiver$_Parcel()
okhttp3.Cookie: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okhttp3.Cache: okhttp3.Response get$okhttp(okhttp3.Request)
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: int connectTimeoutMillis()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
okhttp3.Response: long sentRequestAtMillis()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
okhttp3.internal.http.DatesKt: java.lang.String toHttpDateString(java.util.Date)
okhttp3.internal.concurrent.TaskQueue: java.lang.String getName$okhttp()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
okhttp3.internal.connection.Exchange$RequestBodySink: void write(okio.Buffer,long)
okhttp3.MediaType$Companion: MediaType$Companion()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection: java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection)
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall,retrofit2.Callback)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
okhttp3.internal.connection.Exchange: boolean isDuplex$okhttp()
retrofit2.Callback: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.Address: okhttp3.Authenticator -deprecated_proxyAuthenticator()
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
okhttp3.internal.http2.Http2Connection: void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLeft(int)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
okio.ForwardingSource: java.lang.String toString()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
okhttp3.Handshake$Companion$get$1: Handshake$Companion$get$1(java.util.List)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationText(android.app.Notification$CallStyle,java.lang.CharSequence)
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType contentType()
okhttp3.CacheControl$Companion: CacheControl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
okhttp3.Response: okhttp3.ResponseBody -deprecated_body()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isEndToEnd(java.lang.String)
okhttp3.HttpUrl: java.util.List pathSegments()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: float getPercentageFloat()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
okhttp3.CertificatePinner: <clinit>()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token[] values()
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
okhttp3.internal.ws.RealWebSocket: void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
retrofit2.Response: okhttp3.Response raw()
okhttp3.HttpUrl: boolean equals(java.lang.Object)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink sink(java.io.File)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
okhttp3.HttpUrl$Builder: void setEncodedPassword$okhttp(java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean isSupported()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setIsVideo(android.app.Notification$CallStyle,boolean)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
okhttp3.Response$Builder: void setNetworkResponse$okhttp(okhttp3.Response)
retrofit2.KotlinExtensions: java.lang.Object awaitNullable(retrofit2.Call,kotlin.coroutines.Continuation)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange getExchange$okhttp()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger getCallsPerHost()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.google.android.material.appbar.CollapsingToolbarLayout: int getMaxLines()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.mikhaellopez.circularprogressbar.CircularProgressBar: com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection getProgressBarColorDirection()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
retrofit2.RequestFactory$Builder: retrofit2.RequestFactory build()
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Builder: void setPort$okhttp(int)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
okhttp3.Cache$urls$1: java.lang.String next()
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
com.google.android.material.appbar.CollapsingToolbarLayout: void setTitleEllipsize(android.text.TextUtils$TruncateAt)
okhttp3.internal.platform.android.ConscryptSocketAdapter: <clinit>()
okhttp3.Cookie: boolean -deprecated_httpOnly()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef)
okhttp3.HttpUrl$Builder: int getPort$okhttp()
com.mikhaellopez.circularprogressbar.CircularProgressBar: int getBackgroundProgressBarColor()
okhttp3.internal.platform.AndroidPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
okhttp3.internal.http.StatusLine: <clinit>()
retrofit2.http.Field: boolean encoded()
okhttp3.Headers$Companion: void access$checkName(okhttp3.Headers$Companion,java.lang.String)
okhttp3.internal.connection.RealConnection$Companion: okhttp3.internal.connection.RealConnection newTestConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route,java.net.Socket,long)
okhttp3.internal.http.DatesKt: <clinit>()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.HttpUrl: java.lang.String password()
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
okhttp3.MultipartBody: java.lang.String -deprecated_boundary()
okhttp3.internal.Util: int delimiterOffset(java.lang.String,char,int,int)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.tasks.zza: zza()
okhttp3.internal.connection.Exchange: void writeRequestHeaders(okhttp3.Request)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
okhttp3.logging.LoggingEventListener: void logWithTime(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
okhttp3.internal.Util: okhttp3.EventListener$Factory asFactory(okhttp3.EventListener)
androidx.work.impl.utils.futures.AbstractFuture: AbstractFuture()
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsOneShot(java.io.IOException,okhttp3.Request)
androidx.core.view.VelocityTrackerFallback: VelocityTrackerFallback()
okhttp3.Route: okhttp3.Address address()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p()
androidx.core.graphics.drawable.IconCompat: IconCompat()
okhttp3.internal.connection.RealConnection: void setRouteFailureCount$okhttp(int)
com.google.android.gms.internal.common.zzai: int zza(java.lang.Object[],int)
okhttp3.internal.http2.Http2Connection: long getWriteBytesTotal()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
com.charging.animation.mobile.battery.fragment.setting.SettingAndAlarmFragment: SettingAndAlarmFragment()
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.LiveData: LiveData()
okhttp3.FormBody: java.lang.String encodedValue(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.google.android.gms.internal.common.zzx: com.google.android.gms.internal.common.zzo zza(com.google.android.gms.internal.common.zzx)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Stream: long getReadBytesAcknowledged()
okhttp3.Dns: java.util.List lookup(java.lang.String)
okhttp3.internal.concurrent.TaskRunner: void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.os.Parcelable castToParcelable(android.graphics.drawable.Icon)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.search.SearchView: int getSoftInputMode()
okhttp3.Request: java.util.Map getTags$okhttp()
retrofit2.Response: retrofit2.Response error(int,okhttp3.ResponseBody)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getClosed()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
okhttp3.Cookie: boolean secure()
okhttp3.Address: int hashCode()
okhttp3.logging.LoggingEventListener: void callFailed(okhttp3.Call,java.io.IOException)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_NANOS$cp()
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: Http2Connection$$special$$inlined$schedule$1(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long)
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.Address: java.util.List -deprecated_connectionSpecs()
kotlin.jvm.internal.PropertyReference: boolean isConst()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection)
okhttp3.Response: long -deprecated_receivedResponseAtMillis()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
okhttp3.internal.connection.RealCall: okhttp3.Response execute()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
okhttp3.internal.connection.Exchange: okhttp3.Headers trailers()
okhttp3.Cookie$Companion: boolean access$pathMatch(okhttp3.Cookie$Companion,okhttp3.HttpUrl,java.lang.String)
okhttp3.MediaType: java.nio.charset.Charset charset()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
okhttp3.logging.LoggingEventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion()
okhttp3.Address: okhttp3.HttpUrl -deprecated_url()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
retrofit2.ParameterHandler$1: ParameterHandler$1(retrofit2.ParameterHandler)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
okhttp3.internal.http.ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: java.lang.Object invoke(java.lang.Object)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
retrofit2.Utils$GenericArrayTypeImpl: Utils$GenericArrayTypeImpl(java.lang.reflect.Type)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
androidx.constraintlayout.core.motion.utils.SplineSet: SplineSet()
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
retrofit2.Retrofit$Builder: retrofit2.Retrofit build()
okhttp3.HttpUrl: java.lang.String encodedUsername()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.viewpager2.widget.ViewPager2: int getScrollState()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.search.SearchBar: void setElevation(float)
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
okhttp3.internal.platform.android.SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
okhttp3.internal.platform.android.AndroidLogHandler: AndroidLogHandler()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void close()
okhttp3.internal.cache.DiskLruCache: void delete()
okhttp3.logging.LoggingEventListener: void canceled(okhttp3.Call)
com.google.android.gms.internal.common.zzag: <clinit>()
okhttp3.OkHttpClient: int -deprecated_writeTimeoutMillis()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
me.zhouzhuo.zzhorizontalprogressbar.ZzHorizontalProgressBar: void setMax(int)
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.cache2.Relay: okio.Source newSource()
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
com.google.android.gms.internal.common.zzc: void zzf(android.os.Parcel,android.os.IInterface)
retrofit2.Retrofit$1: Retrofit$1(retrofit2.Retrofit,java.lang.Class)
okhttp3.Handshake$Companion: Handshake$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.io.File,okhttp3.MediaType,int,java.lang.Object)
okhttp3.HttpUrl$Builder: void setEncodedFragment$okhttp(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
okhttp3.HttpUrl: int -deprecated_querySize()
okhttp3.internal.connection.RealCall: okhttp3.Call clone()
okhttp3.internal.connection.RealCall: void timeoutEarlyExit()
okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
retrofit2.Invocation: retrofit2.Invocation of(java.lang.reflect.Method,java.util.List)
okhttp3.Address: java.util.List protocols()
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
okhttp3.MultipartBody$Companion: MultipartBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Interceptor$Companion$invoke$1: Interceptor$Companion$invoke$1(kotlin.jvm.functions.Function1)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer getWriter()
android.support.v4.app.INotificationSideChannel$Stub: android.os.IBinder asBinder()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
okhttp3.ResponseBody: ResponseBody()
androidx.work.Operation$State$SUCCESS: Operation$State$SUCCESS()
okhttp3.internal.http2.Huffman: void addCode(int,int,int)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.charging.animation.mobile.battery.activity.ring.RingtoneViewModel: RingtoneViewModel()
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
okhttp3.OkHttpClient$Builder: void setReadTimeout$okhttp(int)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.google.android.gms.internal.common.zzd: <clinit>()
okhttp3.Headers: java.util.Iterator iterator()
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
retrofit2.Call: boolean isCanceled()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
androidx.constraintlayout.motion.widget.MotionLayout: void setOnShow(float)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.google.android.gms.internal.common.zzac: int zza(java.lang.Object[],int)
okhttp3.internal.http2.Http2: java.lang.String formatFlags(int,int)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
okhttp3.Cookie$Companion: okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
okhttp3.OkHttp: OkHttp()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
pl.droidsonroids.gif.GifError: pl.droidsonroids.gif.GifError[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.charging.animation.mobile.battery.database.Database: Database()
androidx.activity.result.ActivityResultRegistry: ActivityResultRegistry()
okio.Timeout: void waitUntilNotified(java.lang.Object)
okhttp3.OkHttpClient: java.net.Proxy proxy()
com.google.android.gms.internal.common.zzaa: void zzb(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform()
okhttp3.HttpUrl$Builder$Companion: int portColonOffset(java.lang.String,int,int)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void throwIfCaught()
androidx.lifecycle.Lifecycle: Lifecycle()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
okhttp3.internal.http2.Http2Connection: long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
okio.AsyncTimeout: long access$remainingNanos(okio.AsyncTimeout,long)
okhttp3.Cookie: java.lang.String -deprecated_value()
retrofit2.RequestFactory$Builder: <clinit>()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
okhttp3.internal.cache.DiskLruCache: boolean getClosed$okhttp()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
retrofit2.KotlinExtensions: java.lang.Object suspendAndThrow(java.lang.Exception,kotlin.coroutines.Continuation)
okhttp3.internal.connection.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.internal.connection.RealCall,okhttp3.Callback)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
okhttp3.internal.ws.WebSocketExtensions: boolean noContextTakeover(boolean)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List findMatchingRule(java.util.List)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.CacheControl$Companion: CacheControl$Companion()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object)
com.mikhaellopez.circularprogressbar.CircularProgressBar: com.mikhaellopez.circularprogressbar.CircularProgressBar$GradientDirection getBackgroundProgressBarColorDirection()
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
okhttp3.Cookie: java.util.regex.Pattern access$getMONTH_PATTERN$cp()
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
okhttp3.internal.http2.Http2Connection: long access$getWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
okhttp3.internal.ws.RealWebSocket: void awaitTermination(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
