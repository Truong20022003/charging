// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import com.charging.animation.mobile.battery.custom.view.CustomTextView;
import com.mikhaellopez.circularprogressbar.CircularProgressBar;
import eightbitlab.com.blurview.BlurView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApplyAnimationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BlurView blurViewCharging;

  @NonNull
  public final BlurView blurViewCreator;

  @NonNull
  public final BlurView blurViewMain;

  @NonNull
  public final BlurView blurViewWallpaper;

  @NonNull
  public final CardView btnApply;

  @NonNull
  public final CardView btnSetWallpaper;

  @NonNull
  public final CircularProgressBar circularProgressBar;

  @NonNull
  public final FrameLayout frAds;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgBtnApply;

  @NonNull
  public final ImageView imgBtnDown;

  @NonNull
  public final ImageView imgCreator;

  @NonNull
  public final ImageView imgGif;

  @NonNull
  public final ConstraintLayout rootToolbar;

  @NonNull
  public final ConstraintLayout toolbar;

  @NonNull
  public final TextView tvConnect;

  @NonNull
  public final TextView tvDay;

  @NonNull
  public final TextView tvProgress;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final CustomTextView tvTitle;

  private ActivityApplyAnimationBinding(@NonNull ConstraintLayout rootView,
      @NonNull BlurView blurViewCharging, @NonNull BlurView blurViewCreator,
      @NonNull BlurView blurViewMain, @NonNull BlurView blurViewWallpaper,
      @NonNull CardView btnApply, @NonNull CardView btnSetWallpaper,
      @NonNull CircularProgressBar circularProgressBar, @NonNull FrameLayout frAds,
      @NonNull ImageView imgBack, @NonNull ImageView imgBtnApply, @NonNull ImageView imgBtnDown,
      @NonNull ImageView imgCreator, @NonNull ImageView imgGif,
      @NonNull ConstraintLayout rootToolbar, @NonNull ConstraintLayout toolbar,
      @NonNull TextView tvConnect, @NonNull TextView tvDay, @NonNull TextView tvProgress,
      @NonNull TextView tvTime, @NonNull CustomTextView tvTitle) {
    this.rootView = rootView;
    this.blurViewCharging = blurViewCharging;
    this.blurViewCreator = blurViewCreator;
    this.blurViewMain = blurViewMain;
    this.blurViewWallpaper = blurViewWallpaper;
    this.btnApply = btnApply;
    this.btnSetWallpaper = btnSetWallpaper;
    this.circularProgressBar = circularProgressBar;
    this.frAds = frAds;
    this.imgBack = imgBack;
    this.imgBtnApply = imgBtnApply;
    this.imgBtnDown = imgBtnDown;
    this.imgCreator = imgCreator;
    this.imgGif = imgGif;
    this.rootToolbar = rootToolbar;
    this.toolbar = toolbar;
    this.tvConnect = tvConnect;
    this.tvDay = tvDay;
    this.tvProgress = tvProgress;
    this.tvTime = tvTime;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApplyAnimationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApplyAnimationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_apply_animation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApplyAnimationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blurViewCharging;
      BlurView blurViewCharging = ViewBindings.findChildViewById(rootView, id);
      if (blurViewCharging == null) {
        break missingId;
      }

      id = R.id.blurViewCreator;
      BlurView blurViewCreator = ViewBindings.findChildViewById(rootView, id);
      if (blurViewCreator == null) {
        break missingId;
      }

      id = R.id.blurViewMain;
      BlurView blurViewMain = ViewBindings.findChildViewById(rootView, id);
      if (blurViewMain == null) {
        break missingId;
      }

      id = R.id.blurViewWallpaper;
      BlurView blurViewWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (blurViewWallpaper == null) {
        break missingId;
      }

      id = R.id.btnApply;
      CardView btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btn_set_wallpaper;
      CardView btnSetWallpaper = ViewBindings.findChildViewById(rootView, id);
      if (btnSetWallpaper == null) {
        break missingId;
      }

      id = R.id.circularProgressBar;
      CircularProgressBar circularProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (circularProgressBar == null) {
        break missingId;
      }

      id = R.id.fr_ads;
      FrameLayout frAds = ViewBindings.findChildViewById(rootView, id);
      if (frAds == null) {
        break missingId;
      }

      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.imgBtnApply;
      ImageView imgBtnApply = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnApply == null) {
        break missingId;
      }

      id = R.id.imgBtnDown;
      ImageView imgBtnDown = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnDown == null) {
        break missingId;
      }

      id = R.id.imgCreator;
      ImageView imgCreator = ViewBindings.findChildViewById(rootView, id);
      if (imgCreator == null) {
        break missingId;
      }

      id = R.id.imgGif;
      ImageView imgGif = ViewBindings.findChildViewById(rootView, id);
      if (imgGif == null) {
        break missingId;
      }

      id = R.id.rootToolbar;
      ConstraintLayout rootToolbar = ViewBindings.findChildViewById(rootView, id);
      if (rootToolbar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      ConstraintLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvConnect;
      TextView tvConnect = ViewBindings.findChildViewById(rootView, id);
      if (tvConnect == null) {
        break missingId;
      }

      id = R.id.tv_day;
      TextView tvDay = ViewBindings.findChildViewById(rootView, id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tv_progress;
      TextView tvProgress = ViewBindings.findChildViewById(rootView, id);
      if (tvProgress == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      CustomTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityApplyAnimationBinding((ConstraintLayout) rootView, blurViewCharging,
          blurViewCreator, blurViewMain, blurViewWallpaper, btnApply, btnSetWallpaper,
          circularProgressBar, frAds, imgBack, imgBtnApply, imgBtnDown, imgCreator, imgGif,
          rootToolbar, toolbar, tvConnect, tvDay, tvProgress, tvTime, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
