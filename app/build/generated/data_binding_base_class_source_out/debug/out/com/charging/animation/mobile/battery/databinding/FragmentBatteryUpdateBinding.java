// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import com.charging.animation.mobile.battery.custom.view.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBatteryUpdateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView connect;

  @NonNull
  public final ImageView imageView12;

  @NonNull
  public final ImageView img1;

  @NonNull
  public final ImageView img2;

  @NonNull
  public final ImageView img3;

  @NonNull
  public final ImageView img4;

  @NonNull
  public final ImageView img5;

  @NonNull
  public final ImageView img6;

  @NonNull
  public final ImageView imgCycle;

  @NonNull
  public final LinearLayout imgPin;

  @NonNull
  public final NestedScrollView scrollView2;

  @NonNull
  public final CustomTextView template;

  @NonNull
  public final CustomTextView tv1;

  @NonNull
  public final CustomTextView tv2;

  @NonNull
  public final CustomTextView tv3;

  @NonNull
  public final CustomTextView tv4;

  @NonNull
  public final CustomTextView tv5;

  @NonNull
  public final CustomTextView tv6;

  @NonNull
  public final CustomTextView tvCapacity;

  @NonNull
  public final CustomTextView tvHeart;

  @NonNull
  public final CustomTextView tvLion;

  @NonNull
  public final CustomTextView tvPin3;

  @NonNull
  public final LinearLayout tvPinInfo;

  @NonNull
  public final CustomTextView tvType;

  @NonNull
  public final CustomTextView tvVol;

  private FragmentBatteryUpdateBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView connect, @NonNull ImageView imageView12, @NonNull ImageView img1,
      @NonNull ImageView img2, @NonNull ImageView img3, @NonNull ImageView img4,
      @NonNull ImageView img5, @NonNull ImageView img6, @NonNull ImageView imgCycle,
      @NonNull LinearLayout imgPin, @NonNull NestedScrollView scrollView2,
      @NonNull CustomTextView template, @NonNull CustomTextView tv1, @NonNull CustomTextView tv2,
      @NonNull CustomTextView tv3, @NonNull CustomTextView tv4, @NonNull CustomTextView tv5,
      @NonNull CustomTextView tv6, @NonNull CustomTextView tvCapacity,
      @NonNull CustomTextView tvHeart, @NonNull CustomTextView tvLion,
      @NonNull CustomTextView tvPin3, @NonNull LinearLayout tvPinInfo,
      @NonNull CustomTextView tvType, @NonNull CustomTextView tvVol) {
    this.rootView = rootView;
    this.connect = connect;
    this.imageView12 = imageView12;
    this.img1 = img1;
    this.img2 = img2;
    this.img3 = img3;
    this.img4 = img4;
    this.img5 = img5;
    this.img6 = img6;
    this.imgCycle = imgCycle;
    this.imgPin = imgPin;
    this.scrollView2 = scrollView2;
    this.template = template;
    this.tv1 = tv1;
    this.tv2 = tv2;
    this.tv3 = tv3;
    this.tv4 = tv4;
    this.tv5 = tv5;
    this.tv6 = tv6;
    this.tvCapacity = tvCapacity;
    this.tvHeart = tvHeart;
    this.tvLion = tvLion;
    this.tvPin3 = tvPin3;
    this.tvPinInfo = tvPinInfo;
    this.tvType = tvType;
    this.tvVol = tvVol;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBatteryUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBatteryUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_battery_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBatteryUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connect;
      ImageView connect = ViewBindings.findChildViewById(rootView, id);
      if (connect == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.img1;
      ImageView img1 = ViewBindings.findChildViewById(rootView, id);
      if (img1 == null) {
        break missingId;
      }

      id = R.id.img2;
      ImageView img2 = ViewBindings.findChildViewById(rootView, id);
      if (img2 == null) {
        break missingId;
      }

      id = R.id.img3;
      ImageView img3 = ViewBindings.findChildViewById(rootView, id);
      if (img3 == null) {
        break missingId;
      }

      id = R.id.img4;
      ImageView img4 = ViewBindings.findChildViewById(rootView, id);
      if (img4 == null) {
        break missingId;
      }

      id = R.id.img5;
      ImageView img5 = ViewBindings.findChildViewById(rootView, id);
      if (img5 == null) {
        break missingId;
      }

      id = R.id.img6;
      ImageView img6 = ViewBindings.findChildViewById(rootView, id);
      if (img6 == null) {
        break missingId;
      }

      id = R.id.imgCycle;
      ImageView imgCycle = ViewBindings.findChildViewById(rootView, id);
      if (imgCycle == null) {
        break missingId;
      }

      id = R.id.imgPin;
      LinearLayout imgPin = ViewBindings.findChildViewById(rootView, id);
      if (imgPin == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      NestedScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.template;
      CustomTextView template = ViewBindings.findChildViewById(rootView, id);
      if (template == null) {
        break missingId;
      }

      id = R.id.tv1;
      CustomTextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      CustomTextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.tv3;
      CustomTextView tv3 = ViewBindings.findChildViewById(rootView, id);
      if (tv3 == null) {
        break missingId;
      }

      id = R.id.tv4;
      CustomTextView tv4 = ViewBindings.findChildViewById(rootView, id);
      if (tv4 == null) {
        break missingId;
      }

      id = R.id.tv5;
      CustomTextView tv5 = ViewBindings.findChildViewById(rootView, id);
      if (tv5 == null) {
        break missingId;
      }

      id = R.id.tv6;
      CustomTextView tv6 = ViewBindings.findChildViewById(rootView, id);
      if (tv6 == null) {
        break missingId;
      }

      id = R.id.tvCapacity;
      CustomTextView tvCapacity = ViewBindings.findChildViewById(rootView, id);
      if (tvCapacity == null) {
        break missingId;
      }

      id = R.id.tvHeart;
      CustomTextView tvHeart = ViewBindings.findChildViewById(rootView, id);
      if (tvHeart == null) {
        break missingId;
      }

      id = R.id.tvLion;
      CustomTextView tvLion = ViewBindings.findChildViewById(rootView, id);
      if (tvLion == null) {
        break missingId;
      }

      id = R.id.tvPin3;
      CustomTextView tvPin3 = ViewBindings.findChildViewById(rootView, id);
      if (tvPin3 == null) {
        break missingId;
      }

      id = R.id.tvPinInfo;
      LinearLayout tvPinInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvPinInfo == null) {
        break missingId;
      }

      id = R.id.tvType;
      CustomTextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      id = R.id.tvVol;
      CustomTextView tvVol = ViewBindings.findChildViewById(rootView, id);
      if (tvVol == null) {
        break missingId;
      }

      return new FragmentBatteryUpdateBinding((ConstraintLayout) rootView, connect, imageView12,
          img1, img2, img3, img4, img5, img6, imgCycle, imgPin, scrollView2, template, tv1, tv2,
          tv3, tv4, tv5, tv6, tvCapacity, tvHeart, tvLion, tvPin3, tvPinInfo, tvType, tvVol);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
