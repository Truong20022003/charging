// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExitBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatButton btnApply;

  @NonNull
  public final AppCompatButton btnApply2;

  @NonNull
  public final AppCompatButton btnFeedback;

  @NonNull
  public final AppCompatButton btnFeedback2;

  @NonNull
  public final AppCompatButton btnRAte;

  @NonNull
  public final ConstraintLayout root;

  @NonNull
  public final ConstraintLayout root2;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  private DialogExitBinding(@NonNull CardView rootView, @NonNull AppCompatButton btnApply,
      @NonNull AppCompatButton btnApply2, @NonNull AppCompatButton btnFeedback,
      @NonNull AppCompatButton btnFeedback2, @NonNull AppCompatButton btnRAte,
      @NonNull ConstraintLayout root, @NonNull ConstraintLayout root2, @NonNull TextView textView4,
      @NonNull TextView textView5) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnApply2 = btnApply2;
    this.btnFeedback = btnFeedback;
    this.btnFeedback2 = btnFeedback2;
    this.btnRAte = btnRAte;
    this.root = root;
    this.root2 = root2;
    this.textView4 = textView4;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_exit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      AppCompatButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnApply2;
      AppCompatButton btnApply2 = ViewBindings.findChildViewById(rootView, id);
      if (btnApply2 == null) {
        break missingId;
      }

      id = R.id.btn_feedback;
      AppCompatButton btnFeedback = ViewBindings.findChildViewById(rootView, id);
      if (btnFeedback == null) {
        break missingId;
      }

      id = R.id.btn_feedback2;
      AppCompatButton btnFeedback2 = ViewBindings.findChildViewById(rootView, id);
      if (btnFeedback2 == null) {
        break missingId;
      }

      id = R.id.btnRAte;
      AppCompatButton btnRAte = ViewBindings.findChildViewById(rootView, id);
      if (btnRAte == null) {
        break missingId;
      }

      id = R.id.root;
      ConstraintLayout root = ViewBindings.findChildViewById(rootView, id);
      if (root == null) {
        break missingId;
      }

      id = R.id.root2;
      ConstraintLayout root2 = ViewBindings.findChildViewById(rootView, id);
      if (root2 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new DialogExitBinding((CardView) rootView, btnApply, btnApply2, btnFeedback,
          btnFeedback2, btnRAte, root, root2, textView4, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
