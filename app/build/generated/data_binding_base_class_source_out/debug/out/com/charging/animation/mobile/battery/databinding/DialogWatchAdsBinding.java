// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogWatchAdsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout btnApply;

  @NonNull
  public final ImageView ivVideo;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView tvWatchVideo;

  private DialogWatchAdsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout btnApply, @NonNull ImageView ivVideo, @NonNull TextView textView7,
      @NonNull TextView textView9, @NonNull TextView tvWatchVideo) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.ivVideo = ivVideo;
    this.textView7 = textView7;
    this.textView9 = textView9;
    this.tvWatchVideo = tvWatchVideo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogWatchAdsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogWatchAdsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_watch_ads, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogWatchAdsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      ConstraintLayout btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.ivVideo;
      ImageView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.tvWatchVideo;
      TextView tvWatchVideo = ViewBindings.findChildViewById(rootView, id);
      if (tvWatchVideo == null) {
        break missingId;
      }

      return new DialogWatchAdsBinding((ConstraintLayout) rootView, btnApply, ivVideo, textView7,
          textView9, tvWatchVideo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
