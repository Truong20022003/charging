// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySuccessBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View dot1;

  @NonNull
  public final FrameLayout frAds;

  @NonNull
  public final ImageView gif;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imgRetry;

  @NonNull
  public final LinearLayout linearLayout11;

  private ActivitySuccessBinding(@NonNull ConstraintLayout rootView, @NonNull View dot1,
      @NonNull FrameLayout frAds, @NonNull ImageView gif, @NonNull ImageView imageView2,
      @NonNull ImageView imgRetry, @NonNull LinearLayout linearLayout11) {
    this.rootView = rootView;
    this.dot1 = dot1;
    this.frAds = frAds;
    this.gif = gif;
    this.imageView2 = imageView2;
    this.imgRetry = imgRetry;
    this.linearLayout11 = linearLayout11;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySuccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_success, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySuccessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dot_1;
      View dot1 = ViewBindings.findChildViewById(rootView, id);
      if (dot1 == null) {
        break missingId;
      }

      id = R.id.fr_ads;
      FrameLayout frAds = ViewBindings.findChildViewById(rootView, id);
      if (frAds == null) {
        break missingId;
      }

      id = R.id.gif;
      ImageView gif = ViewBindings.findChildViewById(rootView, id);
      if (gif == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imgRetry;
      ImageView imgRetry = ViewBindings.findChildViewById(rootView, id);
      if (imgRetry == null) {
        break missingId;
      }

      id = R.id.linearLayout11;
      LinearLayout linearLayout11 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout11 == null) {
        break missingId;
      }

      return new ActivitySuccessBinding((ConstraintLayout) rootView, dot1, frAds, gif, imageView2,
          imgRetry, linearLayout11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
