// Generated by view binder compiler. Do not edit!
package com.charging.animation.mobile.battery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.charging.animation.mobile.battery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutWalpaperSelectOptionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout llBoth;

  @NonNull
  public final LinearLayout llHomeScreen;

  @NonNull
  public final LinearLayout llLockScreen;

  @NonNull
  public final LinearLayout llOption;

  @NonNull
  public final TextView txtSelection;

  private LayoutWalpaperSelectOptionBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout llBoth, @NonNull LinearLayout llHomeScreen,
      @NonNull LinearLayout llLockScreen, @NonNull LinearLayout llOption,
      @NonNull TextView txtSelection) {
    this.rootView = rootView;
    this.llBoth = llBoth;
    this.llHomeScreen = llHomeScreen;
    this.llLockScreen = llLockScreen;
    this.llOption = llOption;
    this.txtSelection = txtSelection;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutWalpaperSelectOptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutWalpaperSelectOptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_walpaper_select_option, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutWalpaperSelectOptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_both;
      LinearLayout llBoth = ViewBindings.findChildViewById(rootView, id);
      if (llBoth == null) {
        break missingId;
      }

      id = R.id.ll_home_screen;
      LinearLayout llHomeScreen = ViewBindings.findChildViewById(rootView, id);
      if (llHomeScreen == null) {
        break missingId;
      }

      id = R.id.ll_lock_screen;
      LinearLayout llLockScreen = ViewBindings.findChildViewById(rootView, id);
      if (llLockScreen == null) {
        break missingId;
      }

      id = R.id.ll_option;
      LinearLayout llOption = ViewBindings.findChildViewById(rootView, id);
      if (llOption == null) {
        break missingId;
      }

      id = R.id.txtSelection;
      TextView txtSelection = ViewBindings.findChildViewById(rootView, id);
      if (txtSelection == null) {
        break missingId;
      }

      return new LayoutWalpaperSelectOptionBinding((RelativeLayout) rootView, llBoth, llHomeScreen,
          llLockScreen, llOption, txtSelection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
